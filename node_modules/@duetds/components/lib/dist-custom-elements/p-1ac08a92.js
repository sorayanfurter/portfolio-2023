/*!
 * Built with Duet Design System
 */
import { p as proxyCustomElement, H, h, d as Host } from './p-fdc1ca33.js';
import { i as inheritGlobalTheme } from './p-4ebf1618.js';
import { g as getColorByName } from './p-de68431d.js';

const duetSpinnerCss = ":host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;position:absolute;top:50%;left:50%;z-index:800;max-width:100%}:host(.duet-theme-default) .duet-spinner{color:rgb(0, 119, 179) !important}:host(.duet-theme-turva) .duet-spinner{color:rgb(198, 12, 48) !important}:host(.duet-custom-color){color:inherit}*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.duet-spinner{-webkit-user-select:none;user-select:none;position:absolute;top:50%;left:50%;z-index:800;width:24px;height:24px;color:rgb(0, 119, 179);border:2px solid transparent;border-left:2px solid currentColor;border-radius:50%;transform:translateZ(0) translateX(-50%) translateY(-50%);transform-origin:0% 0%;animation:duetRotate 0.6s linear infinite}.duet-spinner::after{position:absolute;top:50%;left:50%;z-index:200;box-sizing:content-box;width:100%;height:100%;overflow:hidden;content:\"\";border:2px solid currentColor;border-radius:50%;opacity:0.3;transform:translateZ(0) translateX(-50%) translateY(-50%);transform-origin:0% 0%}.duet-spinner.medium{width:36px;height:36px;border-width:4px}.duet-spinner.medium::after{border-width:4px}.duet-spinner.large{width:72px;height:72px;border-width:8px}.duet-spinner.large::after{border-width:8px}@keyframes duetRotate{0%{transform:translateZ(0) rotate(0deg) translateX(-50%) translateY(-50%)}100%{transform:translateZ(0) rotate(360deg) translateX(-50%) translateY(-50%)}}";

const DuetSpinner = /*@__PURE__*/ proxyCustomElement(class extends H {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.accessibleLabel = undefined;
    this.color = "gray-lightest";
    this.size = "small";
    this.theme = "";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    const color = this.color === "currentColor" ? "currentColor" : getColorByName(this.color);
    return (h(Host, { class: {
        "duet-custom-color": this.color !== "currentColor" && this.theme !== "turva" && this.theme !== "default",
        "duet-theme-turva": this.theme === "turva" && this.color !== "currentColor",
        "duet-theme-default": this.theme === "default" && this.color !== "currentColor",
      } }, h("div", { class: {
        "duet-spinner": true,
        [this.size]: true,
      }, style: { color }, "aria-label": this.accessibleLabel })));
  }
  static get style() { return duetSpinnerCss; }
}, [1, "duet-spinner", {
    "accessibleLabel": [1, "accessible-label"],
    "color": [1],
    "size": [1],
    "theme": [1025]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["duet-spinner"];
  components.forEach(tagName => { switch (tagName) {
    case "duet-spinner":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DuetSpinner);
      }
      break;
  } });
}

export { DuetSpinner as D, defineCustomElement as d };
