/*!
 * Built with Duet Design System
 */
import { p as proxyCustomElement, H, c as createEvent$1, B as Build, h as h$1, d as Host, F as Fragment } from './p-fdc1ca33.js';
import { f as formSearch } from './p-d004da5f.js';
import { a as media_query_large } from './p-b519ac77.js';
import { d as disableBodyScroll, e as enableBodyScroll } from './p-bd779757.js';
import { D as DuetStringsExternalDefaults } from './p-76f00bd5.js';
import { i as inheritGlobalTheme } from './p-4ebf1618.js';
import { b as isEscapeKey, g as isSpaceKey, h as isArrowLeftKey, e as isArrowUpKey, j as isArrowRightKey, f as isArrowDownKey } from './p-d8549efe.js';
import { g as getLanguage, a as getLocaleString, c as connectLanguageChangeObserver, d as disconnectLanguageChangeObserver } from './p-076452be.js';
import { p as parsePossibleJSON } from './p-5a9d75e1.js';
import { a as actionArrowDownSmall } from './p-115c79b6.js';
import { h } from './p-152ee893.js';
import { d as defineCustomElement$8 } from './p-351d00f1.js';
import { d as defineCustomElement$7 } from './p-d7b4d591.js';
import { d as defineCustomElement$6 } from './p-0674039c.js';
import { d as defineCustomElement$5 } from './p-fe45f59f.js';
import { d as defineCustomElement$4 } from './p-ddfc5de9.js';
import { d as defineCustomElement$3 } from './p-1ac08a92.js';
import { d as defineCustomElement$2 } from './p-1344c068.js';

var navigationContactDropdown={"title":"navigation-contact-dropdown","tags":"navigation contact dropdown speech bubbles","svg":"<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><path d=\"M20.247 24a.743.743 0 0 1-.53-.22l-4.28-4.28h-.439c-3.308 0-6-2.692-6-6s2.692-6 6-6h3c3.309.001 6 2.692 6 6a5.974 5.974 0 0 1-3 5.179v4.571a.75.75 0 0 1-.751.75zm-5.25-15c-2.481 0-4.5 2.019-4.5 4.5s2.019 4.5 4.5 4.5h.75c.198 0 .391.08.53.22l3.22 3.22v-3.213c0-.289.169-.555.429-.678a4.51 4.51 0 0 0 2.571-4.049 4.504 4.504 0 0 0-4.498-4.499h-3.002z\"/><path d=\"M3.747 16.5a.747.747 0 0 1-.75-.75v-4.57a5.967 5.967 0 0 1-2.65-3.171A5.948 5.948 0 0 1 .57 3.431 6.014 6.014 0 0 1 5.985 0h3.012a6.04 6.04 0 0 1 5.752 4.286.751.751 0 0 1-.718.964.755.755 0 0 1-.719-.536A4.531 4.531 0 0 0 8.997 1.5h-3a4.511 4.511 0 0 0-4.071 2.572c-.512 1.084-.571 2.302-.167 3.431s1.224 2.032 2.308 2.545c.261.123.43.39.43.678v3.214l1.72-1.72a.744.744 0 0 1 1.06 0 .752.752 0 0 1 0 1.061l-3 3a.744.744 0 0 1-.53.219z\"/></svg>"};

var navigationLanguage={"title":"navigation-language","tags":"navigation language earth world map","svg":"<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><path d=\"M11.996 24c-2.732 0-5.309-.901-7.453-2.605l-.017-.012-.031-.025a12.68 12.68 0 0 1-.238-.196c-.071-.06-.142-.122-.213-.184l-.143-.126c-.13-.118-.257-.24-.381-.363l-.018-.018a11.904 11.904 0 0 1-3.445-9.695l.001-.007c.018-.174.041-.348.067-.523l.019-.125c.028-.174.058-.348.093-.521l.003-.013C1.379 4.031 6.321 0 11.996 0c6.617 0 12 5.383 12 12 0 1.083-.148 2.164-.44 3.214l-.009.032a12.172 12.172 0 0 1-.671 1.809s-.072.155-.1.212a11.896 11.896 0 0 1-.189.368A11.987 11.987 0 0 1 11.996 24zm-6.181-3.519a10.388 10.388 0 0 0 6.181 2.019c3.471 0 6.642-1.669 8.611-4.497h-.59a2.244 2.244 0 0 1-2.22-1.879L17.111 12h-.944a2.252 2.252 0 0 1-2.182-2.796l.75-3A2.245 2.245 0 0 1 16.917 4.5h2.416A10.49 10.49 0 0 0 1.934 9h4.391c1.034 0 1.932.701 2.183 1.704l.75 3a2.235 2.235 0 0 1-.592 2.137c-.425.425-.99.659-1.591.659h-.464zm-4.248-9.687-.015.116a9.092 9.092 0 0 0-.053.96l-.002.17c.001.145.005.29.011.435l.006.127c.009.154.02.308.035.461l.005.041c.071.68.209 1.354.411 2.003l.009.028a10.457 10.457 0 0 0 2.537 4.222l.75-3.751A.75.75 0 0 1 5.996 15h1.079a.75.75 0 0 0 .728-.932l-.75-3a.751.751 0 0 0-.729-.568H1.606l-.039.294zM16.917 6a.75.75 0 0 0-.728.568l-.75 3a.752.752 0 0 0 .728.932h1.579c.368 0 .679.264.74.627l.791 4.75a.748.748 0 0 0 .74.626h1.461c.171-.358.321-.727.449-1.1l.021-.062A10.486 10.486 0 0 0 20.598 6z\"/></svg>"};

var navigationLogin={"title":"navigation-login","tags":"navigation login sign in lock locked key","svg":"<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><path d=\"M5.25 24A2.252 2.252 0 0 1 3 21.75v-10.5A2.252 2.252 0 0 1 5.25 9H6V6c0-3.308 2.692-6 6-6s6 2.692 6 6v3h.75A2.252 2.252 0 0 1 21 11.25v10.5A2.252 2.252 0 0 1 18.75 24zm0-13.5a.75.75 0 0 0-.75.75v10.5c0 .414.336.75.75.75h13.5a.75.75 0 0 0 .75-.75v-10.5a.75.75 0 0 0-.75-.75zM16.5 9V6c0-2.481-2.019-4.5-4.5-4.5S7.5 3.519 7.5 6v3z\"/><path d=\"M12 17.25c-.62 0-1.125-.505-1.125-1.125a1.127 1.127 0 0 1 1.923-.794A1.126 1.126 0 0 1 12 17.25z\"/></svg>"};

var navigationLogout={"title":"navigation-logout","tags":"navigation logout sign out lock unlocked key","svg":"<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><path d=\"M8.25 24A2.252 2.252 0 0 1 6 21.75v-10.5A2.252 2.252 0 0 1 8.25 9h2.25V6c0-2.481-2.019-4.5-4.5-4.5S1.5 3.519 1.5 6v3.75a.75.75 0 0 1-1.5 0V6c0-3.308 2.692-6 6-6s6 2.692 6 6v3h9.75A2.252 2.252 0 0 1 24 11.25v10.5A2.252 2.252 0 0 1 21.75 24zm0-13.5a.75.75 0 0 0-.75.75v10.5c0 .414.336.75.75.75h13.5a.75.75 0 0 0 .75-.75v-10.5a.75.75 0 0 0-.75-.75z\"/><path d=\"M15 17.25c-.62 0-1.125-.505-1.125-1.125a1.127 1.127 0 0 1 1.923-.794A1.126 1.126 0 0 1 15 17.25z\"/></svg>"};

var navigationUser={"title":"navigation-user","tags":"navigation user human person head circle","svg":"<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><path d=\"M12 15.75c-3.308 0-6-2.692-6-6s2.692-6 6-6 6 2.692 6 6-2.692 6-6 6zm0-10.5c-2.481 0-4.5 2.019-4.5 4.5s2.019 4.5 4.5 4.5 4.5-2.019 4.5-4.5-2.019-4.5-4.5-4.5z\"/><path d=\"M12 24c-2.677 0-5.211-.868-7.332-2.51a.507.507 0 0 1-.126-.099C1.655 19.094 0 15.674 0 12 0 5.383 5.383 0 12 0s12 5.383 12 12c0 3.674-1.655 7.094-4.543 9.391l-.015.016c-.043.043-.087.069-.112.084A11.868 11.868 0 0 1 12 24zm-5.716-3.199A10.408 10.408 0 0 0 12 22.5a10.41 10.41 0 0 0 5.717-1.699 8.966 8.966 0 0 0-5.716-2.045 8.965 8.965 0 0 0-5.717 2.045zM12 1.5C6.21 1.5 1.5 6.21 1.5 12c0 3.023 1.294 5.875 3.562 7.874A10.449 10.449 0 0 1 12 17.257c2.573 0 5.023.927 6.938 2.616 2.268-2 3.562-4.851 3.562-7.874C22.5 6.21 17.79 1.5 12 1.5z\"/></svg>"};

const DuetHeaderIcon = (props, _children) => {
  const iconSize = props.iconSize ? props.iconSize : "x-small";
  return (h("span", { class: `duet-header-icon ${props.class ? props.class : ""}` },
    h("duet-icon", { margin: "none", size: iconSize, icon: props.icon, color: "currentColor" })));
};

const DuetHeaderDropdown = (props, _children) => {
  const accessibleLabel = props.accessibleText ? props.accessibleText : props.label;
  return (h("div", { class: { ["duet-header-dropdown"]: true, [props.className]: !!props.className } },
    h("button", { ref: props.toggleRef, "aria-haspopup": "listbox", "aria-controls": props.id, "aria-expanded": props.isOpen ? "true" : "false", "aria-labelledby": `${props.id}-accessible-label`, id: `${props.id}-button`, type: "button", class: {
        [props.id]: true,
        "duet-header-dropdown-toggle": true,
        "duet-header-button": true,
        active: props.active,
        open: props.isOpen,
      }, onClick: props.onToggle },
      props.icon && h(DuetHeaderIcon, { icon: props.icon }),
      h("span", { "aria-hidden": "true", id: `${props.id}-label`, class: "duet-header-dropdown-label" }, props.label),
      props.badge && h("div", { class: "duet-header-badge" }),
      h("div", { class: "duet-header-caret", "aria-hidden": "true" },
        h("duet-icon", { margin: "none", size: "auto", icon: actionArrowDownSmall.svg, color: "currentColor" })),
      h("duet-visually-hidden", { id: `${props.id}-accessible-label` }, accessibleLabel)),
    h("div", { ref: props.itemsRef, tabindex: "-1", role: "menu", id: props.id, "aria-labelledby": `${props.id}-button`, class: {
        "duet-header-dropdown-content": true,
        [`${props.id}-items`]: true,
        active: props.isOpen,
      } }, _children)));
};

const DuetHeaderHamburger = () => (h("div", { class: "duet-header-hamburger" },
  h("span", { class: "duet-header-bar" }),
  h("span", { class: "duet-header-bar" }),
  h("span", { class: "duet-header-bar" }),
  h("span", { class: "duet-header-bar" })));

const duetHeaderCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}@supports (position: -webkit-sticky){:host{position:-webkit-sticky;top:-4rem;z-index:400}}@supports (position: sticky){:host{position:sticky;top:-4rem;z-index:400}}@supports (position: -webkit-sticky){:host(.duet-header-multi-level-variation){top:0}}@supports (position: sticky){:host(.duet-header-multi-level-variation){top:0}}.duet-header-reserved-space{height:4rem}@media (min-width: 62em){.duet-header-reserved-space.duet-with-links{height:7rem}}.duet-header{-webkit-user-select:none;user-select:none;position:fixed;top:0;left:0;z-index:400;display:block;width:100%;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:0.875rem;font-weight:400;line-height:1.5;color:rgb(0, 41, 77);text-align:left}.duet-header.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}@media (min-width: 62em){.duet-header.duet-theme-turva{box-shadow:0 2px 6px 0 rgba(117, 117, 117, 0.13)}}@media (min-width: 62em){.duet-header{position:absolute;box-shadow:0 2px 6px 0 rgba(0, 41, 77, 0.07)}.duet-header.duet-header-inactive{position:fixed}}.duet-header *{-webkit-tap-highlight-color:rgba(0, 0, 0, 0)}.duet-header-top{position:relative;z-index:200;display:flex;flex-direction:row;align-items:center;width:100%;height:4rem;padding:0 16px;background:rgb(255, 255, 255);border-bottom:1px solid rgb(225, 227, 230);box-shadow:0 2px 6px 0 rgba(0, 41, 77, 0.07)}@media (min-width: 62em){.duet-header-top{z-index:100;padding:0 28px;box-shadow:none}.duet-header-top duet-logo{padding-right:4px}}@media (min-width: 106.25em){.duet-header-top{padding:0 48px}}.duet-theme-turva .duet-header-top{border-color:rgb(228, 228, 230);box-shadow:0 2px 6px 0 rgba(117, 117, 117, 0.13)}@media (min-width: 62em){.duet-theme-turva .duet-header-top{box-shadow:none}}.duet-theme-turva .duet-header-top duet-logo{left:-80px !important;margin-top:-8px !important}.duet-header-top .duet-header-region{max-width:200px;padding-left:16px;margin-top:1px;margin-right:auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;border-left:1px solid rgb(207, 210, 212)}.duet-theme-turva .duet-header-top .duet-header-region{border-color:rgb(207, 207, 209)}@media (max-width: 35.9375em){.duet-header-top .duet-header-region{display:none}}@media (min-width: 62em){.duet-header-top .duet-header-region{padding-left:19px}}.duet-header-bottom{position:fixed;top:4rem;bottom:0;left:0;z-index:100;display:flex;flex-direction:column;width:100%;overflow-y:auto;visibility:hidden;background:rgb(243, 249, 252);opacity:0;-webkit-overflow-scrolling:touch}.duet-theme-turva .duet-header-bottom{background:rgb(245, 245, 247)}@media (min-width: 62em){.duet-header-bottom{position:relative;top:auto;bottom:auto;z-index:200;flex-direction:row;overflow:visible;visibility:visible;background:rgb(255, 255, 255);opacity:1}.duet-header-bottom.duet-header-inactive{position:relative}}.duet-header-bottom.active{visibility:visible;opacity:1;transition:opacity 300ms ease, visibility 300ms ease}@media (min-width: 62em){.duet-header-bottom{position:relative;transition:none !important}}.duet-header-items,.duet-header-bottom-utils,.duet-header-utils{opacity:0;transition:transform 600ms ease, opacity 600ms ease;transform:translateY(-28px)}@media (min-width: 62em){.duet-header-items,.duet-header-bottom-utils,.duet-header-utils{opacity:1;transition:none !important;transform:none}}.active .duet-header-items,.active .duet-header-bottom-utils,.active .duet-header-utils{opacity:1;transform:translateY(0)}.duet-header-items{position:relative;z-index:300;display:block;width:100%;font-size:1rem;font-weight:400;line-height:1.5;background:rgb(255, 255, 255)}@media (min-width: 62em){.duet-header-items{z-index:100;display:flex;flex-direction:row;padding:0 21.5384615385px}}@media (min-width: 106.25em){.duet-header-items{padding-left:43.6363636364px}}.duet-header-items .duet-header-item-container{border-bottom:1px solid rgb(225, 227, 230);border-radius:0}@media (min-width: 62em){.duet-header-items .duet-header-item-container{border:0}}.duet-header-items .duet-header-second-level .duet-header-item{padding:0 40px;border:0}.duet-header-items .duet-header-second-level .duet-header-button{border:0}.duet-header-items .duet-header-second-level .duet-header-dropdown-content{padding:0;border:0}.duet-header-items .duet-header-third-level .duet-header-item{padding:0 75px}.duet-header-items .duet-header-item{position:relative;display:flex;align-items:center;width:100%;padding:0 20px;overflow:hidden;font-size:1rem;line-height:48px;color:rgb(0, 41, 77);text-decoration:none;text-overflow:ellipsis;white-space:nowrap}@media (min-width: 62em){.duet-header-items .duet-header-item{font-weight:600;border-radius:4px}}.duet-theme-turva .duet-header-items .duet-header-item{color:rgb(23, 28, 58);border-color:rgb(225, 227, 230)}.duet-header-items .duet-header-item:hover{color:rgb(0, 77, 128)}.duet-theme-turva .duet-header-items .duet-header-item:hover{color:rgb(68, 68, 69)}.duet-header-items .duet-header-item:focus{outline:0}:host(.user-is-tabbing) .duet-header-items .duet-header-item:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}:host(.user-is-tabbing) .duet-theme-turva .duet-header-items .duet-header-item:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}@media (min-width: 62em){.duet-header-items .duet-header-item{width:auto;max-width:300px;padding:0 12px;overflow:hidden;font-size:0.875rem;text-overflow:ellipsis;border:0}}.duet-header-items .duet-header-item.active{color:rgb(0, 119, 179)}.duet-theme-turva .duet-header-items .duet-header-item.active{color:rgb(198, 12, 48)}.duet-header-items .duet-header-item.active:hover{color:rgb(0, 119, 179)}.duet-theme-turva .duet-header-items .duet-header-item.active:hover{color:rgb(198, 12, 48)}.duet-header-items .duet-header-item.active::after{position:absolute;top:0;bottom:0;left:0;width:4px;content:\"\";background:rgb(0, 119, 179)}.duet-theme-turva .duet-header-items .duet-header-item.active::after{background:rgb(198, 12, 48)}@media (min-width: 62em){.duet-header-items .duet-header-item.active::after{top:auto;left:12px;width:calc(100% - 24px);height:3px}}.duet-header-toggle{display:flex;align-items:center;justify-content:center;width:48px;height:48px;margin-right:-8px;margin-left:auto;cursor:pointer;border-radius:4px;-webkit-appearance:none;appearance:none}.duet-header-toggle:focus{outline:0}:host(.user-is-tabbing) .duet-header-toggle:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}:host(.user-is-tabbing) .duet-theme-turva .duet-header-toggle:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}@media (min-width: 62em){.duet-header-toggle{display:none}}.duet-header-hamburger{position:relative;width:24px;height:24px;margin-top:5px !important;pointer-events:none;transition:0.4s ease-in-out;backface-visibility:hidden}.duet-header-hamburger .duet-header-bar{position:absolute;left:0;display:block;width:100%;height:2px;background:rgb(0, 41, 77);border-radius:20rem;opacity:1;transition:0.25s ease-in-out;transform:rotate(0deg) scale(0.98)}.duet-theme-turva .duet-header-hamburger .duet-header-bar{background:rgb(23, 28, 58)}.duet-header-hamburger .duet-header-bar:nth-child(1){top:0}.duet-header-hamburger .duet-header-bar:nth-child(2),.duet-header-hamburger .duet-header-bar:nth-child(3){top:7px}.duet-header-hamburger .duet-header-bar:nth-child(4){top:14px}button.active .duet-header-hamburger .duet-header-bar:nth-child(1){top:7px;left:50%;width:0%}button.active .duet-header-hamburger .duet-header-bar:nth-child(2){transform:rotate(45deg)}button.active .duet-header-hamburger .duet-header-bar:nth-child(3){transform:rotate(-45deg)}button.active .duet-header-hamburger .duet-header-bar:nth-child(4){top:7px;left:50%;width:0%}.duet-header-utils{display:flex;flex-direction:column;width:100%}@media (min-width: 62em){.duet-header-utils{position:absolute;top:-4rem;right:0;z-index:999999999;flex-direction:row;align-items:center;justify-content:space-between;width:auto;margin-right:20px}}@media (min-width: 106.25em){.duet-header-utils{margin-right:36px}}@media (min-width: 62em){.duet-header-bottom-utils{position:absolute;top:0;right:0;z-index:999999999;margin-right:20px}}@media (min-width: 106.25em){.duet-header-bottom-utils{margin-right:36px}}button{font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"}.duet-theme-turva button{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"}.duet-header-button{position:relative;display:flex;align-items:center;width:100%;height:48px;padding:0 20px;overflow:hidden;font-size:1rem;font-weight:400;line-height:48px;color:rgb(0, 41, 77);text-align:left;text-decoration:none;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;border-bottom:1px solid rgb(225, 227, 230);border-radius:4px;-webkit-appearance:none;appearance:none}.duet-theme-turva .duet-header-button{color:rgb(23, 28, 58);border-color:rgb(228, 228, 230)}.duet-header-button:hover{color:rgb(0, 77, 128)}.duet-theme-turva .duet-header-button:hover{color:rgb(148, 9, 37)}.duet-header-button:focus{outline:0}:host(.user-is-tabbing) .duet-header-button:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}:host(.user-is-tabbing) .duet-theme-turva .duet-header-button:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}.duet-header-button:active{opacity:0.75}@media (min-width: 62em){.duet-header-button{width:auto;max-width:200px;height:4rem;padding:0 16px;font-size:0.875rem;line-height:4rem;border:0}.duet-header-button::before{position:absolute;top:50%;right:0;width:1px;height:20px;content:\"\";background:rgb(207, 210, 212);transform:translateY(-50%)}.duet-theme-turva .duet-header-button::before{background:rgb(207, 207, 209)}}.duet-header-button.active{color:rgb(0, 119, 179);border-radius:0}.duet-theme-turva .duet-header-button.active{color:rgb(198, 12, 48)}.duet-header-button.active:hover{color:rgb(0, 119, 179)}.duet-theme-turva .duet-header-button.active:hover{color:rgb(198, 12, 48)}@media (min-width: 62em){.duet-header-button.active::after{position:absolute;top:0;bottom:0;left:0;width:3px;content:\"\";background:rgb(0, 119, 179)}.duet-theme-turva .duet-header-button.active::after{color:rgb(198, 12, 48)}}.duet-header-button.duet-header-logout .duet-header-icon.mobile{display:block}.duet-header-button.duet-header-logout .duet-header-icon.desktop{display:none}@media (min-width: 62em){.duet-header-button.duet-header-logout .duet-header-icon.mobile{display:none}.duet-header-button.duet-header-logout .duet-header-icon.desktop{display:block}}.duet-header-utils .duet-header-button.duet-header-logout{align-self:center;justify-content:center;width:auto;height:2.5rem;margin:2.25rem 0;font-weight:600;border:2px solid rgb(0, 41, 77);border-radius:20rem}.duet-theme-turva .duet-header-utils .duet-header-button.duet-header-logout{border-color:rgb(23, 28, 58)}.duet-header-utils .duet-header-button.duet-header-logout .duet-header-icon{margin-right:0.5rem}.duet-header-utils .duet-header-button.duet-header-logout .duet-header-button-label{font-size:0.875rem}@media (min-width: 62em){.duet-header-utils .duet-header-button.duet-header-logout{height:4rem;margin:0;font-weight:400;border:0}.duet-header-utils .duet-header-button.duet-header-logout .duet-header-icon{margin-right:0.75rem}}.duet-header-no-action{pointer-events:none}.duet-header-user-label{min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@media (min-width: 62em){.duet-header-utils>*:last-child::before,.duet-header-utils>*:last-child button::before{display:none}}@media (min-width: 62em){.duet-header-utils>*:last-child .duet-header-dropdown-content{right:0;left:auto}}.duet-header-language{text-transform:uppercase}.duet-header-language.active,.duet-header-language.active:hover,.duet-header-contact.active,.duet-header-contact.active:hover{color:inherit}.duet-theme-turva .duet-header-language.active,.duet-theme-turva .duet-header-language.active:hover,.duet-theme-turva .duet-header-contact.active,.duet-theme-turva .duet-header-contact.active:hover{color:inherit}.duet-header-dropdown .duet-header-language.duet-header-dropdown-toggle.active::after,.duet-header-dropdown .duet-header-language.duet-header-dropdown-toggle.active:hover::after,.duet-header-dropdown .duet-header-contact.duet-header-dropdown-toggle.active::after,.duet-header-dropdown .duet-header-contact.duet-header-dropdown-toggle.active:hover::after{width:0}@media (min-width: 62em){.duet-header-dropdown .duet-header-language.duet-header-dropdown-toggle.active::after,.duet-header-dropdown .duet-header-language.duet-header-dropdown-toggle.active:hover::after,.duet-header-dropdown .duet-header-contact.duet-header-dropdown-toggle.active::after,.duet-header-dropdown .duet-header-contact.duet-header-dropdown-toggle.active:hover::after{width:100%}}.duet-header-icon{display:inline-flex;min-width:12px;margin-right:12px;font-size:0;line-height:normal;vertical-align:baseline}@media (min-width: 62em){.duet-header-icon{margin-right:8px}}.duet-header-caret{position:absolute;top:50%;right:20px;display:flex;width:10px;height:10px;margin-left:8px;line-height:normal;pointer-events:none;transition:300ms ease;transform:translateY(-50%);transform-origin:50% 50%}@media (min-width: 62em){.duet-header-caret{width:7px;height:7px}}.duet-header-caret duet-icon{width:10px}.duet-header-dropdown-toggle.active .duet-header-caret{transform:translateY(-50%) rotate(180deg)}.duet-header-dropdown-toggle:focus{outline:0}:host(.user-is-tabbing) .duet-header-dropdown-toggle:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}:host(.user-is-tabbing) .duet-theme-turva .duet-header-dropdown-toggle:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}.duet-header-dropdown-toggle:active{outline:none}.duet-header-badge{display:inline-block;width:6px;height:6px;margin-top:-1rem;margin-left:5px;vertical-align:top;background:rgb(247, 178, 40);border-radius:50%;box-shadow:0 0 0 1px #c18b1f}.duet-theme-turva .duet-header-badge{background:rgb(250, 164, 15)}.active-bar{color:rgb(0, 119, 179)}.active-bar::after{position:absolute;top:0;bottom:0;left:0;width:4px;content:\"\";background:rgb(0, 119, 179)}.duet-theme-turva .active-bar::after{background:rgb(198, 12, 48)}.duet-header-dropdown{position:relative}@media (min-width: 62em){.duet-header-dropdown .duet-header-dropdown-toggle{z-index:200;padding-right:36px;overflow:hidden;transition:border 300ms ease}}@media (min-width: 62em){.duet-header-dropdown .duet-header-dropdown-toggle::after{position:absolute;top:auto;bottom:0;left:0;display:block !important;width:100%;height:3px !important;content:\"\";background:rgb(0, 119, 179);transition:300ms ease;transform:translateY(3px)}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle::after{background:rgb(198, 12, 48)}}.duet-header-dropdown .duet-header-dropdown-toggle.active,.duet-header-dropdown .duet-header-dropdown-toggle.active:hover{border-bottom:1px solid rgb(245, 248, 250)}.duet-header-dropdown .duet-header-dropdown-toggle.active::after,.duet-header-dropdown .duet-header-dropdown-toggle.active:hover::after{position:absolute;top:0;bottom:0;left:0;width:4px;content:\"\";background:rgb(0, 119, 179)}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.active::after,.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.active:hover::after{background:rgb(198, 12, 48)}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.active,.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.active:hover{border-color:rgb(245, 245, 247)}@media (min-width: 62em){.duet-header-dropdown .duet-header-dropdown-toggle.active,.duet-header-dropdown .duet-header-dropdown-toggle.active:hover{color:rgb(0, 77, 128);border:0}.duet-header-dropdown .duet-header-dropdown-toggle.active::after,.duet-header-dropdown .duet-header-dropdown-toggle.active:hover::after{position:absolute;top:auto;bottom:0;left:0;width:100%;height:3px;transform:translateY(0)}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.active,.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.active:hover{color:rgb(148, 9, 37)}}@media (min-width: 62em){.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.duet-header-session{color:rgb(255, 255, 255);background:rgb(198, 12, 48);border-radius:0}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.duet-header-session:hover,.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.duet-header-session.active,.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-toggle.duet-header-session.active:hover{color:rgb(255, 255, 255);background:rgb(148, 9, 37)}}.duet-header-dropdown .duet-header-dropdown-content{display:none;padding-bottom:16px;background:rgb(243, 249, 252);border-bottom:1px solid rgb(225, 227, 230)}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-content{background:rgb(245, 245, 247);border-color:rgb(225, 227, 230)}@media (min-width: 62em){.duet-header-dropdown .duet-header-dropdown-content{position:absolute;top:100%;left:0;z-index:600;display:block;min-width:150px;padding-top:16px;padding-left:0;visibility:hidden;border:0;border-radius:4px;border-top-left-radius:0;border-top-right-radius:0;box-shadow:0 4px 10px 0 rgba(0, 41, 77, 0.15);opacity:0;transition:300ms ease;transform:scale(0.85) translateZ(0) translateY(-20px)}.duet-header-dropdown .duet-header-dropdown-content.duet-header-session-items{right:0%;left:auto;min-width:225px}.duet-header-dropdown .duet-header-dropdown-content.duet-header-session-items .duet-header-session-label{padding:0 20px;font-weight:600}}@media (min-width: 64.0625em){.duet-header-dropdown .duet-header-dropdown-content{min-width:170px}.duet-header-dropdown .duet-header-dropdown-content.duet-header-session-items{min-width:225px}}.duet-header-dropdown .duet-header-dropdown-content.active{display:block}@media (min-width: 62em){.duet-header-dropdown .duet-header-dropdown-content.active{visibility:visible;opacity:1;transform:translateZ(0) translateY(0)}}.duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item){padding:3px 8px 4px !important;position:relative;display:block;width:100%;padding-right:16px;padding-left:48px !important;overflow:hidden;font-size:0.875rem;font-weight:400;line-height:1.5;color:rgb(0, 41, 77);text-align:left;text-decoration:none;white-space:nowrap;cursor:pointer;transition:300ms ease}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item){color:rgb(23, 28, 58)}@media (min-width: 62em){.duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item){padding-right:20px !important;padding-left:20px !important}}@media (min-width: 62em){.duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item):hover{background:rgb(230, 242, 248)}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item):hover{background:rgb(228, 228, 230)}}.duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item):focus{outline:0}:host(.user-is-tabbing) .duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item):focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}:host(.user-is-tabbing) .duet-theme-turva .duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item):focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}.duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item).active{padding-right:36px;font-weight:600;vertical-align:baseline}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item).active{font-weight:700}@media (min-width: 62em){.duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item).active{color:rgb(255, 255, 255);background:rgb(0, 119, 179)}.duet-theme-turva .duet-header-dropdown .duet-header-dropdown-content a:not(.duet-header-item).active{background:rgb(198, 12, 48)}}.duet-header-dropdown .duet-header-dropdown-content .duet-header-link-external{margin-left:4px}.duet-header-back .duet-header-top{flex-direction:row;align-items:center;justify-content:center}.duet-header-back duet-button{position:absolute;top:50%;left:36px;transform:translateY(-50%)}@media (max-width: 35.9375em){.duet-header-back duet-button{left:20px;max-width:40px;padding:0 12px;overflow:hidden}}.duet-header-back .duet-header-toggle{display:none !important}.duet-header-skip{padding:15px 28px 16px !important;position:absolute;top:-100%;left:-100%;z-index:200;width:1px;min-width:190px;height:1px;overflow:hidden;font-weight:600;color:rgb(0, 119, 179);text-align:center;text-decoration:none;background:rgb(255, 255, 255);border-radius:4px;opacity:0}.duet-header-skip:focus{outline:0;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}.duet-theme-turva .duet-header-skip:focus,.duet-header-skip:focus.duet-theme-turva{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}.duet-theme-turva .duet-header-skip{min-width:120px;color:rgb(23, 28, 58)}@media (min-width: 106.25em){.duet-header-skip{margin-left:20px}}.duet-header-skip:focus{top:12px;left:20px;width:auto;height:auto;outline:0;opacity:1}@media (min-width: 62em){.duet-header-items-have-sub-items{display:none}}.duet-header-multi-level{display:none;height:6rem}@media (min-width: 62em){.duet-header-multi-level{display:block}}.duet-header-multi-level .duet-header-top{justify-content:space-between;height:6rem}.duet-header-multi-level .duet-header-button{height:6rem}.duet-header-multi-level .logo-and-segment{display:flex;flex-basis:0;flex-direction:column;flex-grow:1;padding-top:1rem}.duet-header-multi-level .logo-and-segment .duet-header-dropdown{z-index:400;margin-left:2rem}.duet-header-multi-level .logo-and-segment .duet-header-dropdown .duet-header-dropdown-content{background:rgb(243, 249, 252)}.duet-header-multi-level .logo-and-segment button{align-items:flex-start;height:2rem;font-weight:600;line-height:1rem}.duet-header-multi-level .logo-and-segment button::before{display:none}.duet-header-multi-level .logo-and-segment .duet-header-caret{top:25%}.duet-header-multi-level-nav{display:flex}.duet-header-multi-level-nav .duet-header-dropdown{position:static}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-toggle{z-index:400;padding-right:1rem;font-size:1rem;font-weight:600}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-toggle.active{color:rgb(0, 119, 179)}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-toggle.active:not(.open) .duet-header-caret{transform:translateY(-50%) rotate(0deg)}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content{z-index:399;display:flex;justify-content:center;width:100%;height:4.5rem;padding:0;background:rgb(243, 249, 252);border-top:1px solid rgb(225, 227, 230);border-bottom:1px solid rgb(225, 227, 230);box-shadow:0 2px 6px 0 rgba(0, 41, 77, 0.07);transition:none}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content a{position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center;width:auto;min-width:6rem;height:100%;padding:0 1rem !important;font-weight:600}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content a::after{position:absolute;top:auto;bottom:0;left:0;display:block !important;width:100%;height:3px;content:\"\";background:rgb(0, 119, 179);transition:300ms ease;transform:translateY(3px)}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content a.active{font-weight:600;color:rgb(0, 119, 179);background:none}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content a.active::after{transform:translateY(0)}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content a .duet-header-icon{margin:0}.duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content .duet-header-badge{position:absolute;margin-top:-2rem;margin-right:-2.25rem}.duet-header-multi-level-nav button::before{display:none}.duet-header-multi-level-nav .duet-header-caret{right:1%}.duet-header-multi-level-utils{display:flex;flex-basis:0;flex-grow:1;justify-content:flex-end}.duet-header-multi-level-utils>:last-child::before{display:none}.duet-header-multi-level-utils>:last-child.duet-header-dropdown .duet-header-button::before{display:none}.duet-header-multi-level-utils .duet-header-dropdown{z-index:400}.duet-header-multi-level-utils .duet-header-dropdown .duet-header-dropdown-content{background:rgb(243, 249, 252)}.duet-header-multi-level-utils .duet-header-button-label,.duet-header-multi-level-utils .duet-header-dropdown-label{display:none}@media (min-width: 64.0625em){.duet-header-multi-level-utils .duet-header-button-label,.duet-header-multi-level-utils .duet-header-dropdown-label{display:initial}}.duet-header-multi-level .duet-theme-turva .logo-and-segment .duet-header-dropdown{margin-left:0}.duet-header-multi-level .duet-theme-turva .logo-and-segment .duet-header-dropdown-toggle{padding-left:0.5rem}.duet-header-multi-level .duet-theme-turva .logo-and-segment .duet-header-dropdown .duet-header-dropdown-content{background:rgb(245, 245, 247)}.duet-header-multi-level .duet-theme-turva .duet-header-multi-level-utils>:nth-last-child(2).duet-header-dropdown .duet-header-button::before{display:none}.duet-header-multi-level .duet-theme-turva .duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-toggle.active{color:rgb(198, 12, 48)}.duet-header-multi-level .duet-theme-turva .duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content{background:rgb(245, 245, 247);border-color:rgb(228, 228, 230)}.duet-header-multi-level .duet-theme-turva .duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content a::after{background:rgb(198, 12, 48)}.duet-header-multi-level .duet-theme-turva .duet-header-multi-level-nav .duet-header-dropdown .duet-header-dropdown-content a.active{color:rgb(198, 12, 48);background:none}.duet-header-multi-level .duet-theme-turva .duet-header-multi-level-utils .duet-header-dropdown .duet-header-dropdown-content{background:rgb(245, 245, 247)}";

const createEvent = (ev, data) => ({
  component: "duet-header",
  data,
  originalEvent: ev,
});
const DuetHeader$1 = /*@__PURE__*/ proxyCustomElement(class extends H {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.duetChange = createEvent$1(this, "duetChange", 3);
    this.duetSessionClick = createEvent$1(this, "duetSessionClick", 7);
    this.duetSearchClick = createEvent$1(this, "duetSearchClick", 7);
    this.duetUserClick = createEvent$1(this, "duetUserClick", 7);
    this.duetLanguageSelect = createEvent$1(this, "duetLanguageSelect", 7);
    this.duetLogoClick = createEvent$1(this, "duetLogoClick", 7);
    this.duetBackClick = createEvent$1(this, "duetBackClick", 7);
    this.duetContactClick = createEvent$1(this, "duetContactClick", 7);
    this.duetItemClick = createEvent$1(this, "duetItemClick", 7);
    this.duetSkipClick = createEvent$1(this, "duetSkipClick", 7);
    this.duetAnalytics = createEvent$1(this, "duetAnalytics", 7);
    this.duetMobileNavToggle = createEvent$1(this, "duetMobileNavToggle", 7);
    this.duetEvent = createEvent$1(this, "duetEvent", 7);
    var _a;
    /**
     * Own Properties
     */
    this.subMenuItemRefs = {};
    this.subMenuButtonRefs = {};
    this.hasLanguageChanged = false;
    this.mql = [window.matchMedia(media_query_large.replace(/'/g, ""))];
    this.boundMqlFunctions = [];
    this.handleClick = (event) => {
      if (event.data.analyticsId) {
        this.duetAnalytics.emit({
          component: "duet-header",
          analyticsId: event.data.analyticsId,
        });
      }
      this.duetChange.emit(event);
      this.closeMenus();
      this.closeMobileNavigation();
    };
    this.handleSessionClick = (ev) => {
      const e = createEvent(ev, this.processedSession);
      this.handleClick(e);
      this.duetSessionClick.emit(e);
    };
    this.handleSessionItemClick = (ev, item) => {
      const e = createEvent(ev, item);
      this.handleClick(e);
      this.duetSessionClick.emit(e);
    };
    this.handleSearchClick = (ev) => {
      const e = createEvent(ev, this.processedSearch);
      this.handleClick(e);
      this.duetSearchClick.emit(e);
    };
    this.handleUserClick = (ev) => {
      const e = createEvent(ev, this.processedUser);
      this.handleClick(e);
      this.duetUserClick.emit(e);
    };
    this.handleBackClick = (ev) => {
      const e = createEvent(ev, this.processedBack);
      this.handleClick(e);
      this.duetBackClick.emit(e);
    };
    this.handleSkipClick = (ev) => {
      const { skipLabel } = this.accessibleI18nLabels;
      const e = createEvent(ev, { href: this.skipToId, label: skipLabel });
      this.handleClick(e);
      this.duetSkipClick.emit(e);
    };
    this.handleLogoClick = (ev) => {
      const e = createEvent(ev, { href: this.logoHref, label: "logo" });
      this.handleClick(e);
      this.duetLogoClick.emit(e);
    };
    this.handleArrowKeys = ev => {
      let button;
      if (isArrowLeftKey(ev) || isArrowUpKey(ev)) {
        button = ev.target.previousElementSibling;
      }
      else if (isArrowRightKey(ev) || isArrowDownKey(ev)) {
        button = ev.target.nextElementSibling;
      }
      if (button) {
        ev.preventDefault();
        button.focus();
      }
    };
    this.toggleMenu = (ev, type, id, active) => {
      let el;
      ev.preventDefault();
      ev.stopPropagation();
      if (active === true && !this.openMenu) {
        const closedActives = this.closedActives ? [...this.closedActives] : [];
        const index = closedActives.findIndex(i => i === id);
        if (index > -1) {
          closedActives.splice(index, 1);
          this.closedActives = [...closedActives];
        }
        else {
          this.closedActives = [...closedActives, id];
        }
      }
      else {
        this.openMenu = this.openMenu === id ? null : id;
      }
      // For language menu
      if (type === "language") {
        this.isContactOpen = false;
        this.isLanguageOpen = !this.isLanguageOpen;
        this.isSegmentOpen = false;
        this.isSessionOpen = false;
        el = this.languageItemsEl;
      }
      // For session menu
      if (type === "session") {
        this.isContactOpen = false;
        this.isLanguageOpen = false;
        this.isSegmentOpen = false;
        this.isSessionOpen = !this.isSessionOpen;
        el = this.sessionItemsEl;
      }
      // For contact menu
      else if (type === "contact") {
        this.isLanguageOpen = false;
        this.isContactOpen = !this.isContactOpen;
        this.isSegmentOpen = false;
        this.isSessionOpen = false;
        el = this.contactItemsEl;
      }
      // For mobile menu
      else if (type === "mobile") {
        this.isContactOpen = false;
        this.isLanguageOpen = false;
        this.isSegmentOpen = false;
        this.isSessionOpen = false;
        el = this.navigationEl;
        const toggle = !this.isSlideOutOpen;
        this.isSlideOutOpen = toggle;
        this.duetMobileNavToggle.emit({ originalEvent: ev, open: toggle });
        if (this.isSlideOutOpen) {
          disableBodyScroll(this.navigationEl, { reserveScrollBarGap: true });
        }
        else {
          enableBodyScroll(this.navigationEl);
        }
      }
      else if (type === "sub") {
        this.isContactOpen = false;
        this.isLanguageOpen = false;
        this.isSegmentOpen = false;
        this.isSessionOpen = false;
        el = this.subMenuItemRefs[id];
      }
      else if (type === "segment") {
        this.isContactOpen = false;
        this.isLanguageOpen = false;
        this.isSessionOpen = false;
        this.isSegmentOpen = !this.isSegmentOpen;
        el = this.segmentItemsEl;
      }
      if (this.isSlideOutOpen ||
        this.isLanguageOpen ||
        this.isContactOpen ||
        this.isSegmentOpen ||
        this.isSessionOpen ||
        this.openMenu) {
        const drawer = this.element.querySelector("duet-notification-drawer");
        if (drawer) {
          drawer.close(false);
        }
        // Focus in the new menu when opened to make them more accessible
        setTimeout(() => {
          el.querySelector("a").focus();
        }, 300);
      }
    };
    this.emitDuetEvent = (ev, data) => {
      this.duetEvent.emit({
        component: "duet-header",
        data,
        originalEvent: ev,
      });
    };
    this.isContactOpen = false;
    this.isLanguageOpen = false;
    this.isSessionOpen = false;
    this.isSlideOutOpen = false;
    this.isSegmentOpen = false;
    this.openMenu = null;
    this.closedActives = null;
    this.processedItems = null;
    this.processedLanguageItems = null;
    this.processedContactItems = null;
    this.processedSession = null;
    this.processedSearch = null;
    this.processedUser = null;
    this.processedBack = null;
    this.renderDesktopNav = (_a = this.mql[0]) === null || _a === void 0 ? void 0 : _a.matches;
    this.theme = "";
    this.language = getLanguage();
    this.accessibleI18nLabelsDefaults = {
      fi: {
        skipLabel: "Siirry pääsisältöön",
        changeLanguage: "Vaihda kieltä",
        activeLanguage: "Suomi valittuna",
      },
      sv: {
        skipLabel: "Gå till huvudinnehåll",
        changeLanguage: "Ändra Språk",
        activeLanguage: "Svenska valt",
      },
      en: {
        skipLabel: "Skip to main content",
        changeLanguage: "Change language",
        activeLanguage: "English selected",
      },
    };
    this.accessibleI18nLabels = getLocaleString(this.accessibleI18nLabelsDefaults);
    this.accessibleLabelExternalDefaults = DuetStringsExternalDefaults;
    this.accessibleLabelExternal = getLocaleString(this.accessibleLabelExternalDefaults);
    this.accessibleLabelDefaults = {
      fi: "Valikko",
      sv: "Meny",
      en: "Menu",
    };
    this.accessibleLabel = getLocaleString(this.accessibleLabelDefaults);
    this.user = undefined;
    this.logoHref = "/";
    this.currentHref = "/";
    this.skipToId = "";
    this.items = undefined;
    this.region = "";
    this.session = undefined;
    this.search = undefined;
    this.back = undefined;
    this.contact = "";
    this.contactItems = undefined;
    this.languageItems = undefined;
  }
  watchLanguageStateHandler(newValue, oldValue) {
    if (newValue !== oldValue && this.accessibleLabel === this.accessibleLabelDefaults[oldValue]) {
      this.accessibleLabel = getLocaleString(this.accessibleLabelDefaults, newValue);
    }
    if (newValue !== oldValue && this.accessibleI18nLabels === this.accessibleI18nLabelsDefaults[oldValue]) {
      this.accessibleI18nLabels = getLocaleString(this.accessibleI18nLabelsDefaults, newValue);
    }
    if (newValue !== oldValue && this.accessibleLabelExternal === this.accessibleLabelExternalDefaults[oldValue]) {
      this.accessibleLabelExternal = getLocaleString(this.accessibleLabelExternalDefaults, newValue);
    }
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
    this.refresh();
  }
  connectedCallback() {
    for (let i = 0; i < this.mql.length; i++) {
      // addEventListener is not available in Stencil hydrate
      if (this.mql[i].addEventListener) {
        const bound = this.refresh.bind(this);
        this.mql[i].addEventListener("change", bound);
        this.boundMqlFunctions[i] = bound;
      }
    }
    connectLanguageChangeObserver(this);
  }
  disconnectedCallback() {
    if (this.navigationEl) {
      enableBodyScroll(this.navigationEl);
    }
    for (let i = 0; i < this.mql.length; i++) {
      // addEventListener is not available in Stencil hydrate
      if (this.mql[i].removeEventListener) {
        this.mql[i].removeEventListener("change", this.boundMqlFunctions[i]);
      }
    }
    this.boundMqlFunctions = [];
    disconnectLanguageChangeObserver(this);
  }
  /**
   * Component event handling.
   */
  handleKeyUp(ev) {
    // When Esc is pressed
    if (isEscapeKey(ev)) {
      this.closeMenus(true);
      this.closeMobileNavigation();
    }
  }
  handleKeyDown(ev) {
    if (this.isContactOpen || this.isLanguageOpen || this.isSegmentOpen) {
      const activeElement = this.element.shadowRoot.activeElement;
      // When Space is pressed
      if (isSpaceKey(ev) && activeElement) {
        ev.preventDefault();
        ev.stopPropagation();
        if (this.isContactOpen) {
          this.closeMenus();
        }
        else if (this.isLanguageOpen) {
          this.closeMenus(true);
        }
        else if (this.isSegmentOpen) {
          this.closeMenus();
        }
        else if (this.openMenu) {
          this.closeMenus();
        }
        activeElement.click();
      }
    }
  }
  handleDocumentClick() {
    this.closeMenus();
    this.closeMobileNavigation();
  }
  handleLanguageClick(ev, data) {
    this.language = data.country;
    this.hasLanguageChanged = true;
    const e = createEvent(ev, data);
    this.handleClick(e);
    this.duetLanguageSelect.emit(e);
  }
  handleContactClick(ev, data) {
    const e = createEvent(ev, data);
    this.handleClick(e);
    this.duetContactClick.emit(e);
  }
  handleItemClick(ev, data) {
    const e = createEvent(ev, data);
    this.handleClick(e);
    this.duetItemClick.emit(e);
  }
  /**
   * Local methods.
   */
  async refresh() {
    var _a, _b;
    if (this.renderDesktopNav !== Build.isServer ? true : (_a = this.mql[0]) === null || _a === void 0 ? void 0 : _a.matches) {
      this.renderDesktopNav = (_b = this.mql[0]) === null || _b === void 0 ? void 0 : _b.matches;
      this.openMenu = null;
      if (this.isSlideOutOpen) {
        this.toggleMenu(document.createEvent("UIEvents"), "mobile");
      }
    }
    this.processedItems = parsePossibleJSON(this.items);
    this.processedLanguageItems = parsePossibleJSON(this.languageItems);
    this.processedContactItems = parsePossibleJSON(this.contactItems);
    this.processedSession = parsePossibleJSON(this.session);
    this.processedSearch = parsePossibleJSON(this.search);
    this.processedUser = parsePossibleJSON(this.user);
    this.processedBack = parsePossibleJSON(this.back);
  }
  /**
   * Closes mobile menu in header when called.
   */
  async closeMobileNavigation() {
    if (this.isSlideOutOpen) {
      this.isSlideOutOpen = false;
      enableBodyScroll(this.navigationEl);
    }
  }
  /**
   * Closes all dropdown menus in header when called.
   */
  async closeMenus(moveFocusToButton = false) {
    if (this.isContactOpen || this.isLanguageOpen || this.isSegmentOpen || this.isSessionOpen || this.openMenu) {
      if (this.isContactOpen && moveFocusToButton) {
        this.contactItemsButtonEl.focus({
          preventScroll: true,
        });
      }
      if (this.isLanguageOpen && moveFocusToButton) {
        this.languageItemsButtonEl.focus({
          preventScroll: true,
        });
      }
      if (this.isSegmentOpen && moveFocusToButton) {
        this.segmentItemsButtonEl.focus({
          preventScroll: true,
        });
      }
      if (this.isSessionOpen && moveFocusToButton) {
        this.sessionItemsButtonEl.focus({
          preventScroll: true,
        });
      }
      if (this.openMenu && moveFocusToButton) {
        this.subMenuButtonRefs[this.openMenu].focus({
          preventScroll: true,
        });
      }
      this.isContactOpen = false;
      this.isLanguageOpen = false;
      this.isSegmentOpen = false;
      this.isSessionOpen = false;
      this.openMenu = null;
    }
  }
  /**
   * Sets focus on the specified `duet-header`. Use this method instead of the global
   * `header.focus()`.
   */
  async setFocus(options) {
    this.logoEl.setFocus(options);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    const { skipLabel, changeLanguage, activeLanguage } = this.accessibleI18nLabels;
    const skipToLabel = () => this.skipToId ? (h$1("a", { href: this.skipToId, class: "duet-header-skip", onClick: this.handleSkipClick }, skipLabel)) : null;
    const logo = () => (h$1("duet-logo", { href: this.logoHref, size: "medium", ref: el => (this.logoEl = el), language: this.language, theme: this.theme, onClick: this.handleLogoClick }));
    const largeLogo = () => (h$1("duet-logo", { href: this.logoHref, size: "large", ref: el => (this.logoEl = el), language: this.language, theme: this.theme, onClick: this.handleLogoClick }));
    const contactDropdown = () => this.contact && this.processedContactItems ? (h$1(DuetHeaderDropdown, { id: "duet-header-contact", label: this.contact, icon: navigationContactDropdown.svg, active: this.isContactOpen, isOpen: this.isContactOpen, badge: false, toggleRef: el => (this.contactItemsButtonEl = el), itemsRef: el => (this.contactItemsEl = el), onToggle: event => this.toggleMenu(event, "contact") }, this.processedContactItems.map(item => (h$1("a", { role: "menuitem", href: item.href || "#", id: item.id, onClick: event => this.handleContactClick(event, item), onKeyDown: ev => this.handleArrowKeys(ev), target: item.external ? "_blank" : "_self" }, item.label, item.external && (h$1(Fragment, null, h$1("duet-visually-hidden", null, ", ", this.accessibleLabelExternal), h$1("span", { class: "duet-header-link-external" }, h$1("duet-icon", { name: "action-new-window-small", size: "xx-small", margin: "none", color: this.theme === "turva" ? "primary-turva" : "primary" }))))))))) : null;
    const languageDropdown = () => this.language && this.processedLanguageItems ? (h$1(DuetHeaderDropdown, { id: "duet-header-language", label: this.language, icon: navigationLanguage.svg, accessibleText: `${changeLanguage}${this.hasLanguageChanged ? `, ${activeLanguage}` : ""}`, active: this.isLanguageOpen, isOpen: this.isLanguageOpen, badge: false, toggleRef: el => (this.languageItemsButtonEl = el), itemsRef: el => (this.languageItemsEl = el), onToggle: event => this.toggleMenu(event, "language") }, this.processedLanguageItems.map(item => (h$1("a", { class: { active: this.language === item.country }, "aria-selected": this.language === item.country, role: "menuitem", id: item.id, lang: item.country, href: item.href || "#", onClick: event => this.handleLanguageClick(event, item), onKeyDown: this.handleArrowKeys }, item.label))))) : null;
    const processedUserWithLink = () => this.processedUser && this.processedUser.href ? (h$1("a", { href: this.processedUser.href || "#", id: this.processedUser.id, class: "duet-header-user duet-header-button", onClick: this.handleUserClick }, h$1(DuetHeaderIcon, { icon: navigationUser.svg }), h$1("span", { class: "duet-header-user-label" }, this.processedUser.label))) : null;
    const processedUserWithoutLink = () => this.processedUser && !this.processedUser.href ? (h$1("span", { id: this.processedUser.id, class: "duet-header-user duet-header-button duet-header-no-action" }, h$1(DuetHeaderIcon, { icon: navigationUser.svg }), h$1("span", { class: "duet-header-user-label" }, this.processedUser.label))) : null;
    const processedSession = () => this.processedSession ? (h$1("a", { href: this.processedSession.href || "#", id: this.processedSession.id, class: "duet-header-logout duet-header-button", onClick: this.handleSessionClick }, h$1(DuetHeaderIcon, { class: "desktop", icon: this.processedSession.type === "logout" ? navigationLogout.svg : navigationLogin.svg, iconSize: "x-small" }), h$1(DuetHeaderIcon, { class: "mobile", icon: this.processedSession.type === "logout" ? navigationLogout.svg : navigationLogin.svg, iconSize: "small" }), h$1("span", { class: "duet-header-button-label" }, this.processedSession.label))) : null;
    const processedSessionDropdown = () => this.processedSession && this.processedSession.sessionItems ? (h$1(DuetHeaderDropdown, { className: "duet-header-session", id: "duet-header-session", label: this.processedSession.label, icon: this.processedSession.type === "logout" ? navigationLogout.svg : navigationLogin.svg, active: this.isSessionOpen, isOpen: this.isSessionOpen, badge: false, toggleRef: el => (this.sessionItemsButtonEl = el), itemsRef: el => (this.sessionItemsEl = el), onToggle: event => this.toggleMenu(event, "session") }, this.processedSession.sessionItems.map((sessionItem, index) => (h$1(Fragment, null, sessionItem.label && h$1("span", { class: "duet-header-session-label" }, sessionItem.label), h$1("duet-spacer", { size: "small", "aria-hidden": "true" }), sessionItem.items.map(item => (h$1("a", { role: "menuitem", "aria-label": sessionItem.label ? `${sessionItem.label} ${item.label}` : item.label, id: item.id, href: item.href || "#", onClick: event => this.handleSessionItemClick(event, item), onKeyDown: this.handleArrowKeys }, item.label))), index !== this.processedSession.sessionItems.length - 1 && (h$1(Fragment, null, h$1("duet-spacer", { size: "x-small", "aria-hidden": "true" }), h$1("duet-divider", { margin: "none", "aria-hidden": "true" })))))))) : null;
    const processedSearch = () => this.processedSearch ? (h$1("a", { href: this.processedSearch.href || "#", id: this.processedSearch.id, class: "duet-header-search duet-header-button", onClick: this.handleSearchClick }, h$1(DuetHeaderIcon, { icon: formSearch.svg }), h$1("span", { class: "duet-header-button-label" }, this.processedSearch.label))) : null;
    // Back variation
    if (this.processedBack) {
      return (h$1(Host, { class: "duet-header-back-variation" }, h$1("div", { class: "duet-header-reserved-space" }, h$1("header", { class: {
          "duet-header": true,
          "duet-theme-turva": this.theme === "turva",
          "duet-header-back": true,
          "duet-header-inactive": true,
        }, part: "header" }, h$1("div", { class: "duet-header-top" }, skipToLabel(), h$1("duet-button", { url: this.processedBack.href, id: this.processedBack.id, theme: this.theme, variation: "plain", color: this.theme === "turva" ? "secondary-turva" : "secondary", icon: "navigation-arrow-left", iconSize: "large", onClick: this.handleBackClick }, this.processedBack.label), logo(), h$1("slot", { name: "logo-utility" }))))));
    }
    const itemsHaveSubItems = this.processedItems && this.processedItems.some(item => item.items && item.items.length > 0);
    const isSecondLevelActive = this.processedItems &&
      this.processedItems.some(item => item.items && item.items.some(secondLevelItem => secondLevelItem.active === true));
    const isThirdLevelActive = this.processedItems &&
      this.processedItems.some(item => item.items &&
        item.items.some(secondLevelItem => secondLevelItem.items && secondLevelItem.items.some(thirdLevelItem => thirdLevelItem.active === true)));
    const defaultVariationContent = (h$1("div", { class: {
        "duet-header-reserved-space": true,
        "duet-with-links": !!this.processedItems,
        "duet-header-second-level-active": isSecondLevelActive,
        "duet-header-third-level-active": isThirdLevelActive,
        "duet-header-items-have-sub-items": itemsHaveSubItems,
      } }, h$1("header", { class: {
        "duet-header": true,
        "duet-theme-turva": this.theme === "turva",
        "duet-header-inactive": !this.processedItems,
      }, part: "header" }, h$1("div", { class: "duet-header-top" }, skipToLabel(), logo(), h$1("slot", { name: "logo-utility" }, this.region && h$1("div", { class: "duet-header-region" }, this.region)), (this.processedItems ||
      languageDropdown() ||
      contactDropdown() ||
      this.processedSession ||
      this.processedUser) && (h$1("button", { class: { "duet-header-toggle": true, active: this.isSlideOutOpen }, onClick: event => this.toggleMenu(event, "mobile"), type: "button" }, h$1("duet-visually-hidden", null, this.accessibleLabel), h$1(DuetHeaderHamburger, null)))), h$1("div", { ref: el => (this.navigationEl = el), class: {
        "duet-header-bottom": true,
        active: this.isSlideOutOpen,
        inactive: !this.processedItems,
      } }, h$1("nav", { class: "duet-header-items", role: "navigation" }, this.processedItems &&
      this.processedItems.map((item, itemIndex) => (h$1("div", { class: "duet-header-item-container" }, h$1("a", { class: {
          "duet-header-first-level": true,
          "duet-header-item": true,
          active: (!itemsHaveSubItems && this.currentHref === item.href) ||
            (item.active === true &&
              !this.openMenu &&
              this.closedActives &&
              this.closedActives.length === 1) ||
            (item.active === true &&
              !this.openMenu &&
              item.items &&
              !item.items.some(s => s.active === true)),
        }, href: item.href || "#", id: item.id || `header-item-${itemIndex}`, onClick: event => this.handleItemClick(event, item), onMouseEnter: event => this.emitDuetEvent(event, item), onTouchStart: event => this.emitDuetEvent(event, item) }, item.label, item.badge && h$1("div", { class: "duet-header-badge" })), item.items &&
        item.items
          .filter(secondLevelitem => secondLevelitem.items && secondLevelitem.items.length > 0)
          .map((secondLevelItem, secondLevelItemIndex) => {
          const id = secondLevelItem.id || `header-item-${itemIndex}-${secondLevelItemIndex}`;
          const active = (!this.openMenu &&
            secondLevelItem.active === true &&
            !(this.closedActives && !!this.closedActives.find(i => i === id))) ||
            this.openMenu === id;
          const activeBar = active && !(secondLevelItem.items && secondLevelItem.items.some(s => s.active === true));
          return (h$1(DuetHeaderDropdown, { id: id, className: "duet-header-second-level", label: secondLevelItem.label, icon: `${secondLevelItem.icon}.svg`, active: activeBar, isOpen: active, badge: secondLevelItem.badge, toggleRef: el => (this.subMenuButtonRefs[id] = el), itemsRef: el => (this.subMenuItemRefs[id] = el), onToggle: event => this.toggleMenu(event, "sub", id, secondLevelItem.active === true) }, h$1("div", { class: "duet-header-third-level" }, secondLevelItem.items &&
            secondLevelItem.items.map(thirdLevelItem => (h$1("a", { class: {
                "duet-header-item": true,
                active: thirdLevelItem.active === true,
              }, role: "menuitem", href: thirdLevelItem.href || "#", id: thirdLevelItem.id, onClick: event => this.handleItemClick(event, thirdLevelItem), onKeyDown: ev => this.handleArrowKeys(ev), onMouseEnter: event => this.emitDuetEvent(event, thirdLevelItem), onTouchStart: event => this.emitDuetEvent(event, thirdLevelItem), target: thirdLevelItem.external ? "_blank" : "_self" }, thirdLevelItem.icon && (h$1("div", { class: "duet-header-icon" }, h$1("duet-icon", { margin: "none", size: "medium", name: thirdLevelItem.icon, color: "currentColor" }))), h$1("span", null, thirdLevelItem.label), thirdLevelItem.badge && h$1("div", { class: "duet-header-badge" })))))));
        }))))), h$1("div", { class: "duet-header-bottom-utils" }, h$1("slot", { name: "utility" })), h$1("div", { class: "duet-header-utils" }, !itemsHaveSubItems && contactDropdown(), languageDropdown(), !itemsHaveSubItems && (h$1(Fragment, null, processedUserWithLink(), processedUserWithoutLink())), processedSearch(), processedSession())))));
    // multi level variation
    if (itemsHaveSubItems) {
      const activeSegment = this.processedItems.find(item => item.active);
      const isThirdLevelActive = this.processedItems &&
        this.processedItems.some(item => item.items &&
          item.items.some(secondLevelItem => secondLevelItem.items && secondLevelItem.items.some(thirdLevelItem => thirdLevelItem.active === true)));
      const segmentId = "duet-header-segment";
      return (h$1(Host, { class: "duet-header-multi-level-variation" }, h$1("div", { class: {
          "duet-header-multi-level": true,
          "duet-header-multi-level-third-level-is-open": isThirdLevelActive,
        } }, h$1("header", { class: {
          "duet-header": true,
          "duet-theme-turva": this.theme === "turva",
          "duet-header-inactive": !this.processedItems,
        }, part: "header" }, h$1("div", { class: "duet-header-top" }, skipToLabel(), h$1("div", { class: "logo-and-segment" }, h$1("div", null, largeLogo()), this.processedItems && (h$1(DuetHeaderDropdown, { id: segmentId, label: activeSegment.label, active: this.isSegmentOpen, isOpen: this.isSegmentOpen, badge: false, toggleRef: el => (this.segmentItemsButtonEl = el), itemsRef: el => (this.segmentItemsEl = el), onToggle: event => this.toggleMenu(event, "segment") }, this.processedItems.map(item => (h$1("a", { class: { active: activeSegment === item }, role: "menuitem", href: item.href || "#", id: item.id, onClick: event => this.handleItemClick(event, item), onKeyDown: ev => this.handleArrowKeys(ev), onMouseEnter: event => this.emitDuetEvent(event, item), onTouchStart: event => this.emitDuetEvent(event, item), target: item.external ? "_blank" : "_self" }, item.icon && (h$1("div", { class: "duet-header-icon" }, h$1("duet-icon", { margin: "none", size: "x-small", name: item.icon, color: "currentColor" }))), h$1("span", null, item.label), item.badge && h$1("div", { class: "duet-header-badge" }))))))), h$1("nav", { class: "duet-header-multi-level-nav" }, activeSegment.items &&
        activeSegment.items
          .filter(secondLevelItem => secondLevelItem.items && secondLevelItem.items.length > 0)
          .map((secondLevelItem, secondLevelItemIndex) => {
          const id = secondLevelItem.id || `segment-item-${secondLevelItemIndex}`;
          return (h$1(DuetHeaderDropdown, { id: id, label: secondLevelItem.label, active: (!this.openMenu && secondLevelItem.active === true) || this.openMenu === id, isOpen: this.openMenu === id, badge: secondLevelItem.badge, toggleRef: el => (this.subMenuButtonRefs[id] = el), itemsRef: el => (this.subMenuItemRefs[id] = el), onToggle: event => this.toggleMenu(event, "sub", id) }, secondLevelItem.items &&
            secondLevelItem.items.map(thirdLevelItem => (h$1("a", { class: { active: thirdLevelItem.active }, role: "menuitem", href: thirdLevelItem.href || "#", id: thirdLevelItem.id, onClick: event => this.handleItemClick(event, thirdLevelItem), onKeyDown: ev => this.handleArrowKeys(ev), onMouseEnter: event => this.emitDuetEvent(event, thirdLevelItem), onTouchStart: event => this.emitDuetEvent(event, thirdLevelItem), target: thirdLevelItem.external ? "_blank" : "_self" }, thirdLevelItem.icon && (h$1("div", { class: "duet-header-icon" }, h$1("duet-icon", { margin: "none", size: "medium", name: thirdLevelItem.icon, color: "currentColor" }))), h$1("span", null, thirdLevelItem.label), thirdLevelItem.badge && h$1("div", { class: "duet-header-badge" }))))));
        })), h$1("div", { class: "duet-header-multi-level-utils" }, processedSearch(), languageDropdown(), processedSessionDropdown() != null ? processedSessionDropdown() : processedSession()), h$1("slot", { name: "utility" })))), defaultVariationContent));
    }
    // Default variation
    return (h$1(Host, { class: {
        "duet-header-default-variation": true,
      } }, defaultVariationContent));
  }
  get element() { return this; }
  static get watchers() { return {
    "language": ["watchLanguageStateHandler"],
    "user": ["refresh"],
    "items": ["refresh"],
    "session": ["refresh"],
    "back": ["refresh"],
    "contactItems": ["refresh"],
    "languageItems": ["refresh"]
  }; }
  static get style() { return duetHeaderCss; }
}, [1, "duet-header", {
    "theme": [1025],
    "language": [1025],
    "accessibleI18nLabelsDefaults": [1, "accessible-labels-default"],
    "accessibleI18nLabels": [1040],
    "accessibleLabelExternalDefaults": [1, "accessible-label-external-default"],
    "accessibleLabelExternal": [1025, "accessible-label-external"],
    "accessibleLabelDefaults": [1, "accessible-label-default"],
    "accessibleLabel": [1025, "accessible-label"],
    "user": [8],
    "logoHref": [1, "logo-href"],
    "currentHref": [1025, "current-href"],
    "skipToId": [1, "skip-to-id"],
    "items": [8],
    "region": [1],
    "session": [8],
    "search": [8],
    "back": [8],
    "contact": [1],
    "contactItems": [8, "contact-items"],
    "languageItems": [8, "language-items"],
    "isContactOpen": [32],
    "isLanguageOpen": [32],
    "isSessionOpen": [32],
    "isSlideOutOpen": [32],
    "isSegmentOpen": [32],
    "openMenu": [32],
    "closedActives": [32],
    "processedItems": [32],
    "processedLanguageItems": [32],
    "processedContactItems": [32],
    "processedSession": [32],
    "processedSearch": [32],
    "processedUser": [32],
    "processedBack": [32],
    "renderDesktopNav": [32],
    "closeMenus": [64],
    "setFocus": [64]
  }, [[8, "keyup", "handleKeyUp"], [8, "keydown", "handleKeyDown"], [4, "focus", "handleDocumentClick"], [4, "click", "handleDocumentClick"]]]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["duet-header", "duet-button", "duet-divider", "duet-icon", "duet-logo", "duet-spacer", "duet-spinner", "duet-visually-hidden"];
  components.forEach(tagName => { switch (tagName) {
    case "duet-header":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DuetHeader$1);
      }
      break;
    case "duet-button":
      if (!customElements.get(tagName)) {
        defineCustomElement$8();
      }
      break;
    case "duet-divider":
      if (!customElements.get(tagName)) {
        defineCustomElement$7();
      }
      break;
    case "duet-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$6();
      }
      break;
    case "duet-logo":
      if (!customElements.get(tagName)) {
        defineCustomElement$5();
      }
      break;
    case "duet-spacer":
      if (!customElements.get(tagName)) {
        defineCustomElement$4();
      }
      break;
    case "duet-spinner":
      if (!customElements.get(tagName)) {
        defineCustomElement$3();
      }
      break;
    case "duet-visually-hidden":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
  } });
}

const DuetHeader = DuetHeader$1;
const defineCustomElement = defineCustomElement$1;

export { DuetHeader, defineCustomElement };
