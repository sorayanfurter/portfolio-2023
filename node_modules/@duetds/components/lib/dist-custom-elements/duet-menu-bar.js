/*!
 * Built with Duet Design System
 */
import { p as proxyCustomElement, H, c as createEvent, h, d as Host } from './p-fdc1ca33.js';
import { a as media_query_large, c as media_query_xx_large } from './p-b519ac77.js';
import { i as inheritGlobalTheme } from './p-4ebf1618.js';
import { d as defineCustomElement$2 } from './p-fe45f59f.js';

const duetMenuBarCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;width:100%}.duet-menu-bar{display:flex;align-items:center;justify-content:center;background:rgb(255, 255, 255);box-shadow:0 2px 6px 0 rgba(0, 41, 77, 0.07)}@media (min-width: 62em){.duet-menu-bar{box-shadow:0 3px 6px 0 rgba(0, 41, 77, 0.1)}}.duet-menu-bar .top{display:none}.duet-menu-bar .bottom{display:none}.duet-menu-bar.horizontal-nav{position:relative}.duet-menu-bar.horizontal-nav .top{position:absolute;top:0;left:3.5%;display:block;width:93%;height:1px;background:rgb(245, 248, 250)}.duet-menu-bar.horizontal-nav .bottom{position:absolute;bottom:0;left:0;display:block;width:100%;height:1px;background:rgb(225, 227, 230)}.duet-menu-bar.horizontal-nav .more-left{position:absolute;top:0;left:-1px;z-index:1;width:56px;height:49px;background:linear-gradient(90deg, #fff 0%, rgba(255, 255, 255, 0) 100%)}@media (min-width: 62em){.duet-menu-bar.horizontal-nav .more-left{display:none}}.duet-menu-bar.horizontal-nav .more-right{position:absolute;top:0;right:-1px;z-index:1;width:56px;height:49px;background:linear-gradient(270deg, #fff 0%, rgba(255, 255, 255, 0) 100%)}@media (min-width: 62em){.duet-menu-bar.horizontal-nav .more-right{display:none}}@media (pointer: fine){.duet-menu-bar.horizontal-nav{display:none}}@media (pointer: fine) and ((min-width: 62em)){.duet-menu-bar.horizontal-nav{display:flex}}.duet-menu-bar .container{display:flex;align-items:center;justify-content:space-between;width:100%;max-width:1440px;height:100%;height:3.25rem;padding:0 8px 0 20px;overflow-x:auto;scrollbar-width:none}.duet-menu-bar .container::-webkit-scrollbar{width:0;height:0}@media (min-width: 62em){.duet-menu-bar .container{height:5rem;padding:0 28px;overflow-x:visible}}.duet-menu-bar .container .list{height:100%;list-style-type:none}.duet-menu-bar .container ::slotted(*){height:100%}.duet-menu-bar .container>*{display:flex;align-items:center;justify-content:center;height:100%}.duet-menu-bar .container>:first-child{flex-basis:0;flex-grow:1;justify-content:flex-start}.duet-menu-bar .container>:last-child{flex-basis:0;flex-grow:1;justify-content:flex-end}.duet-menu-bar .container ::slotted(*){display:flex;align-items:center;justify-content:center;height:100%}.duet-menu-bar.duet-theme-turva{background:rgb(255, 255, 255);box-shadow:0 2px 6px 0 rgba(117, 117, 117, 0.13)}@media (min-width: 62em){.duet-menu-bar.duet-theme-turva{box-shadow:0 3px 6px 0 rgba(117, 117, 117, 0.15)}}.center{font-size:1rem;font-weight:600;line-height:1.25;color:rgb(0, 41, 77)}.duet-theme-turva .center{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}.right{font-size:0.875rem;font-weight:400;line-height:1.25;color:rgb(0, 77, 128)}.duet-theme-turva .right{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}";

const DuetMenuBar$1 = /*@__PURE__*/ proxyCustomElement(class extends H {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.duetEvent = createEvent(this, "duetEvent", 7);
    /**
     * Own Properties.
     */
    this.mql = [
      window.matchMedia(media_query_large.replace(/'/g, "")),
      window.matchMedia(media_query_xx_large.replace(/'/g, "")),
    ];
    this.boundMqlFunctions = [];
    this.scrollbarCheck = () => {
      this.leftMoreVisible = this.container.scrollLeft > 0;
      this.rightMoreVisible = this.container.scrollLeft !== this.container.scrollWidth - this.container.clientWidth;
    };
    this.scrollToActive = () => {
      const actives = this.element.querySelectorAll("[active]");
      let active;
      actives.forEach(a => {
        if (a.active) {
          active = a;
        }
      });
      if (active && active.offsetLeft) {
        if (active.offsetLeft > 50) {
          this.container.scrollLeft = active.offsetLeft - this.element.offsetWidth / 2 + active.offsetWidth / 2;
        }
      }
    };
    this.changeLogoSize = () => {
      if (this.mql[1].matches) {
        this.logoSize = "large";
      }
      else {
        this.logoSize = "medium";
      }
    };
    this.handleLogoClick = (e) => {
      this.duetEvent.emit({
        name: "logoClick",
        component: "duet-menu-bar",
        data: {
          logoHref: this.logoHref,
        },
        originalEvent: e,
      });
    };
    this.logoSize = "large";
    this.leftMoreVisible = false;
    this.rightMoreVisible = false;
    this.theme = "";
    this.logo = true;
    this.logoHref = undefined;
    this.logoLinkAccessibleLabel = undefined;
    this.accessibleLabel = undefined;
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
    const children = Array.from(this.element.children);
    for (const child of children) {
      if (child.getAttribute("slot") === "center") {
        for (const slotChild of Array.from(child.children)) {
          slotChild.setAttribute("role", "listitem");
        }
      }
      else if (child.getAttribute("slot") === "right") {
        for (const slotChild of Array.from(child.children)) {
          slotChild.setAttribute("role", "listitem");
        }
      }
    }
  }
  connectedCallback() {
    this.changeLogoSize();
    for (let i = 0; i < this.mql.length; i++) {
      // addEventListener is not available in Stencil hydrate
      if (this.mql[i].addEventListener) {
        const bound = this.changeLogoSize.bind(this);
        this.mql[i].addEventListener("change", bound);
        this.boundMqlFunctions[i] = bound;
      }
    }
  }
  disconnectedCallback() {
    for (let i = 0; i < this.mql.length; i++) {
      // removeEventListener is not available in Stencil hydrate
      if (this.mql[i].removeEventListener) {
        this.mql[i].removeEventListener("change", this.boundMqlFunctions[i]);
      }
    }
    this.boundMqlFunctions = [];
  }
  componentDidLoad() {
    setTimeout(() => {
      this.scrollbarCheck();
      this.scrollToActive();
    }, 0);
  }
  onWindowResize() {
    clearTimeout(this.resizeTimer);
    this.resizeTimer = setTimeout(() => {
      this.scrollToActive();
    }, 100);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    const slideoutAvailable = document.querySelectorAll("duet-slideout").length > 0;
    const isUsedAsAdditionalHorizontalNav = slideoutAvailable && !this.logo;
    return (h(Host, null, h("nav", { class: {
        "duet-menu-bar": true,
        "duet-theme-turva": this.theme === "turva",
        "horizontal-nav": isUsedAsAdditionalHorizontalNav,
      }, "aria-label": this.accessibleLabel }, h("div", { class: "top" }), h("div", { class: { container: true }, ref: el => (this.container = el), onScroll: () => this.scrollbarCheck() }, this.logo && (h("div", null, h("duet-logo", { size: this.logoSize, margin: "none", theme: this.theme, href: this.logoHref, accessibleLabel: this.logoLinkAccessibleLabel, onClick: this.handleLogoClick }))), h("div", { class: "list center", role: "list" }, h("div", { class: "more-left", hidden: !this.leftMoreVisible, role: "presentation" }), h("slot", { name: "center" }), h("div", { class: "more-right", hidden: !this.rightMoreVisible, role: "presentation" })), h("div", { class: "list right", role: "list" }, h("slot", { name: "right" }))), h("div", { class: "bottom" }))));
  }
  get element() { return this; }
  static get style() { return duetMenuBarCss; }
}, [1, "duet-menu-bar", {
    "theme": [1025],
    "logo": [1028],
    "logoHref": [1025, "logo-href"],
    "logoLinkAccessibleLabel": [1025, "logo-link-accessible-label"],
    "accessibleLabel": [1, "accessible-label"],
    "logoSize": [32],
    "leftMoreVisible": [32],
    "rightMoreVisible": [32]
  }, [[9, "resize", "onWindowResize"]]]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["duet-menu-bar", "duet-logo"];
  components.forEach(tagName => { switch (tagName) {
    case "duet-menu-bar":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DuetMenuBar$1);
      }
      break;
    case "duet-logo":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
  } });
}

const DuetMenuBar = DuetMenuBar$1;
const defineCustomElement = defineCustomElement$1;

export { DuetMenuBar, defineCustomElement };
