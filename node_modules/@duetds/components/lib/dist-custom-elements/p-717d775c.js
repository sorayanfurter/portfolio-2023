/*!
 * Built with Duet Design System
 */
import { p as proxyCustomElement, H, h, d as Host } from './p-fdc1ca33.js';
import { i as inheritGlobalTheme } from './p-4ebf1618.js';

const duetCaptionCss = ":host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-bottom:16px !important;display:flex;flex:0 0 100%;width:100%;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:400;line-height:1.5;color:rgb(101, 119, 135);vertical-align:top}:host.duet-p-0{padding:0 !important}:host.duet-m-0{margin:0 !important}:host(.duet-caption-small){font-size:0.875rem;line-height:1.25}:host(.duet-theme-turva){font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(116, 116, 117)}:host(.duet-caption-selected){color:rgb(0, 119, 179)}:host(.duet-caption-selected.duet-theme-turva){color:rgb(23, 28, 58)}:host(.duet-m-0){margin:0 !important}";

const DuetCaption = /*@__PURE__*/ proxyCustomElement(class extends H {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.theme = "";
    this.margin = "auto";
    this.selected = false;
    this.size = "medium";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, { class: {
        "duet-caption": true,
        "duet-caption-selected": this.selected,
        "duet-caption-small": this.size === "small",
        "duet-theme-turva": this.theme === "turva",
        "duet-m-0": this.margin === "none",
      } }, h("slot", null)));
  }
  static get style() { return duetCaptionCss; }
}, [1, "duet-caption", {
    "theme": [1025],
    "margin": [1],
    "selected": [4],
    "size": [1]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["duet-caption"];
  components.forEach(tagName => { switch (tagName) {
    case "duet-caption":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DuetCaption);
      }
      break;
  } });
}

export { DuetCaption as D, defineCustomElement as d };
