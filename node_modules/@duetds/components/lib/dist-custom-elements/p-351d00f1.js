/*!
 * Built with Duet Design System
 */
import { p as proxyCustomElement, H, c as createEvent, h, d as Host } from './p-fdc1ca33.js';
import { i as inheritGlobalTheme } from './p-4ebf1618.js';
import { D as DuetStringsExternalDefaults } from './p-76f00bd5.js';
import { g as getLanguage, a as getLocaleString, c as connectLanguageChangeObserver, d as disconnectLanguageChangeObserver } from './p-076452be.js';
import { g as getColorByName } from './p-de68431d.js';
import { d as defineCustomElement$3 } from './p-0674039c.js';
import { d as defineCustomElement$2 } from './p-1ac08a92.js';
import { d as defineCustomElement$1 } from './p-1344c068.js';

const duetButtonCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-right:8px !important;margin-bottom:12px !important;position:relative;z-index:1;display:inline-flex;width:auto;max-width:100%;vertical-align:bottom;-webkit-tap-highlight-color:transparent}:host:last-child,:host:last-of-type{margin-right:0 !important}@media (max-width: 35.9375em){:host{width:100%}}:host(.input-button){z-index:250}:host(.duet-small){margin-right:2px !important;margin-bottom:8px !important}:host(.duet-small):last-child,:host(.duet-small):last-of-type{margin-right:0 !important}@media (max-width: 35.9375em){:host(.duet-small){width:auto}}:host(.duet-expand){width:100% !important}:host(.duet-m-0){margin:0 !important}:host(.duet-fixed){width:auto !important}:host(:last-child){margin-right:0 !important}.duet-button-container{position:relative;width:100%}.duet-button{padding:14px 27px 15px !important;-webkit-user-select:none;user-select:none;position:relative;z-index:100;display:block;width:100%;min-width:8rem;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:600;-webkit-hyphens:auto;hyphens:auto;line-height:1.1;color:rgb(0, 119, 179) !important;text-align:center;text-decoration:none;cursor:pointer;background:transparent;border-style:solid;border-width:2px;border-radius:20rem;transition:background-color 300ms ease, color 300ms ease, border 300ms ease, box-shadow 300ms ease}.duet-button.duet-p-0{padding:0 !important}.duet-button.duet-m-0{margin:0 !important}.duet-button:not(.input-button-primary,.input-button-secondary,.input-button-embedded){font-variant-numeric:tabular-nums}.duet-button.duet-button-text-center{text-align:center !important}.duet-button.duet-button-is-small:not(.duet-button-icon-only){padding:9px 19px 10px !important;min-width:5.3333333333rem;font-size:0.875rem}.duet-button.duet-button-is-small:not(.duet-button-icon-only).icon{padding-left:48px !important}.duet-button.duet-button-is-small:not(.duet-button-icon-only).icon-right{padding-right:48px !important;padding-left:20px !important}.duet-theme-turva .duet-button{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(198, 12, 48) !important}.duet-button .duet-button-contents{position:relative;display:inline-block;margin:0 auto;pointer-events:none}.duet-button.duet-no-wrap{white-space:nowrap}.duet-button.icon{padding-left:52px !important}.duet-button.icon-right{padding-right:52px !important;padding-left:28px !important}.duet-button svg{width:100%;min-width:100%;fill:currentColor}.duet-button .duet-button-icon{position:absolute;top:50%;left:-28px;display:flex;align-items:center;justify-content:center;width:16px;height:16px;margin:0 !important;transform:translateY(-50%)}.duet-button .duet-button-icon duet-icon{width:16px;height:16px}.duet-button .duet-button-icon.right{right:-28px;left:auto}.duet-button .duet-button-icon.large{left:-32px;width:20px;height:20px}.duet-button .duet-button-icon.large duet-icon{width:20px;height:20px}.duet-button .duet-button-icon.large.right{right:-32px;left:auto}.duet-button .duet-button-icon.medium-small{left:-16px;width:10px;height:10px;padding-top:1px}.duet-button .duet-button-icon.medium-small duet-icon{width:10px;height:10px}.duet-button .duet-button-icon.medium-small.right{right:-16px;left:auto}.duet-button .duet-button-icon.small{left:-16px;width:7px;height:7px}.duet-button .duet-button-icon.small duet-icon{width:7px;height:7px}.duet-button .duet-button-icon.small.right{right:-16px;left:auto}.duet-button:focus{outline:0;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}.duet-theme-turva .duet-button:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}.duet-button:active:not([disabled]){opacity:0.75;transition:none}.duet-button.default{border-color:rgb(225, 227, 230)}.duet-theme-turva .duet-button.default{color:rgb(198, 12, 48) !important;border-color:rgb(228, 228, 230)}.duet-button.default:hover{border-color:rgb(0, 119, 179)}.duet-theme-turva .duet-button.default:hover{border-color:rgb(198, 12, 48)}.duet-button.default.duet-button-negative{background-color:rgb(255, 255, 255)}.duet-theme-turva .duet-button.default.duet-button-negative{background-color:rgb(228, 228, 230) !important}.duet-button.default.duet-button-negative:hover{color:rgb(0, 119, 179) !important;border-color:rgb(0, 119, 179)}.duet-theme-turva .duet-button.default.duet-button-negative:hover{color:rgb(198, 12, 48) !important;border-color:rgb(198, 12, 48)}.duet-button.primary,.duet-button.input-button-primary{color:rgb(255, 255, 255) !important;background:rgb(0, 119, 179);border-color:rgb(0, 119, 179)}.duet-theme-turva .duet-button.primary,.duet-theme-turva .duet-button.input-button-primary{color:rgb(255, 255, 255) !important;background:rgb(198, 12, 48);border-color:rgb(198, 12, 48)}.duet-button.primary:hover,.duet-button.input-button-primary:hover{background:#005f8f;border-color:#005f8f;box-shadow:0 4px 20px rgba(34, 34, 34, 0.1)}.duet-theme-turva .duet-button.primary:hover,.duet-theme-turva .duet-button.input-button-primary:hover{background:rgb(148, 9, 37);border-color:rgb(148, 9, 37)}.duet-button.primary:focus,.duet-button.input-button-primary:focus{outline:0;box-shadow:0 0 0 1px rgb(255, 255, 255), 0 0 0 4px rgba(0, 119, 179, 0.75)}.duet-theme-turva .duet-button.primary:focus,.duet-theme-turva .duet-button.input-button-primary:focus{box-shadow:0 0 0 1px rgb(255, 255, 255), 0 0 0 4px rgba(23, 28, 58, 0.7)}.duet-button.secondary,.duet-button.input-button-secondary,.duet-button.input-button-embedded{color:rgb(0, 41, 77) !important;background:transparent;border-color:rgb(0, 41, 77)}.duet-theme-turva .duet-button.secondary,.duet-theme-turva .duet-button.input-button-secondary,.duet-theme-turva .duet-button.input-button-embedded{color:rgb(23, 28, 58) !important;border-color:rgb(23, 28, 58)}.duet-button.secondary:hover,.duet-button.input-button-secondary:hover,.duet-button.input-button-embedded:hover{color:rgb(0, 119, 179) !important;border-color:rgb(0, 119, 179)}.duet-theme-turva .duet-button.secondary:hover,.duet-theme-turva .duet-button.input-button-secondary:hover,.duet-theme-turva .duet-button.input-button-embedded:hover{color:rgb(198, 12, 48) !important;border-color:rgb(198, 12, 48)}.duet-button.secondary.duet-button-negative,.duet-button.input-button-secondary.duet-button-negative,.duet-button.input-button-embedded.duet-button-negative{color:rgb(225, 227, 230) !important;border-color:rgb(255, 255, 255)}.duet-theme-turva .duet-button.secondary.duet-button-negative,.duet-theme-turva .duet-button.input-button-secondary.duet-button-negative,.duet-theme-turva .duet-button.input-button-embedded.duet-button-negative{color:rgb(228, 228, 230) !important}.duet-button.secondary.duet-button-negative:hover,.duet-button.input-button-secondary.duet-button-negative:hover,.duet-button.input-button-embedded.duet-button-negative:hover{color:rgb(0, 119, 179) !important;border-color:rgb(0, 119, 179)}.duet-theme-turva .duet-button.secondary.duet-button-negative:hover,.duet-theme-turva .duet-button.input-button-secondary.duet-button-negative:hover,.duet-theme-turva .duet-button.input-button-embedded.duet-button-negative:hover{color:rgb(198, 12, 48) !important;border-color:rgb(198, 12, 48)}.duet-button.input-button-embedded{width:40px;min-width:40px !important;min-height:40px !important;margin:4px !important;border-width:0 !important;border-radius:4px !important}.duet-button.negative{color:rgb(0, 41, 77) !important;background:rgb(255, 255, 255);border-color:rgb(255, 255, 255)}.duet-theme-turva .duet-button.negative{color:rgb(23, 28, 58) !important}.duet-button.negative:hover{color:rgb(255, 255, 255) !important;background:transparent;border-color:rgb(255, 255, 255)}.duet-button.negative:focus{outline:0;box-shadow:0 0 0 1px rgb(0, 41, 77), 0 0 0 4px rgba(255, 255, 255, 0.7)}.duet-theme-turva .duet-button.negative:focus{box-shadow:0 0 0 1px rgb(23, 28, 58), 0 0 0 4px rgba(255, 255, 255, 0.7)}.duet-button.destructive-primary{color:rgb(255, 255, 255) !important;background:rgb(222, 35, 98);border-color:rgb(222, 35, 98)}.duet-theme-turva .duet-button.destructive-primary{color:rgb(255, 255, 255) !important;background:rgb(224, 42, 13);border-color:rgb(224, 42, 13)}.duet-button.destructive-primary:hover{background:#b21c4e;border-color:#b21c4e;box-shadow:0 4px 20px rgba(34, 34, 34, 0.1)}.duet-theme-turva .duet-button.destructive-primary:hover{background:#b3220a}.duet-button.destructive,.duet-button.destructive-secondary{color:rgb(222, 35, 98) !important;background:rgb(255, 255, 255);border-color:rgb(222, 35, 98)}.duet-theme-turva .duet-button.destructive,.duet-theme-turva .duet-button.destructive-secondary{color:rgb(224, 42, 13) !important;background:rgb(255, 255, 255);border-color:rgb(224, 42, 13)}.duet-button.destructive:hover,.duet-button.destructive-secondary:hover{color:rgb(255, 255, 255) !important;background:#b21c4e;border-color:#b21c4e}.duet-theme-turva .duet-button.destructive:hover,.duet-theme-turva .duet-button.destructive-secondary:hover{color:rgb(255, 255, 255) !important;background:#b3220a;border-color:#b3220a}.duet-button.plain{min-width:48px;padding-right:0 !important;padding-left:0 !important;line-height:1.5;text-align:left;background:transparent;border:0;border-color:transparent;border-radius:4px}.duet-theme-turva .duet-button.plain{color:rgb(198, 12, 48) !important;background:transparent;border-color:transparent}.duet-button.plain.icon{padding-left:20px !important}.duet-button.plain.icon.icon-right{padding-right:20px !important;padding-left:0 !important}.duet-button.plain.icon.medium{padding-left:24px !important}.duet-button.plain.icon.medium.icon-right{padding-right:24px !important;padding-left:0 !important}.duet-button.plain.icon.large{padding-left:30px !important}.duet-button.plain.icon.large.icon-right{padding-right:30px !important;padding-left:0 !important}.duet-button.plain .duet-button-icon.left{left:-16.6666666667px !important}.duet-button.plain .duet-button-icon.left.medium{left:-24px !important}.duet-button.plain .duet-button-icon.left.large{left:-30px !important}.duet-button.plain .duet-button-icon.right{right:-16.6666666667px !important}.duet-button.plain .duet-button-icon.right.medium{right:-24px !important}.duet-button.plain .duet-button-icon.right.large{right:-30px !important}.duet-button.plain[disabled]{color:rgb(101, 119, 135) !important;cursor:not-allowed;background:transparent !important;border-color:transparent !important}.duet-theme-turva .duet-button.plain[disabled]{color:transparent !important;cursor:not-allowed;background:transparent !important;border-color:rgb(228, 228, 230) !important}.duet-button.plain:hover{color:rgb(0, 77, 128) !important;background:transparent !important}.duet-theme-turva .duet-button.plain:hover{color:rgb(148, 9, 37) !important}.duet-button.plain.duet-button-negative{color:rgb(255, 255, 255) !important}.duet-theme-turva .duet-button.plain.duet-button-negative{color:rgb(228, 228, 230) !important}.duet-button.plain.duet-button-negative:hover{color:rgb(0, 119, 179) !important}.duet-theme-turva .duet-button.plain.duet-button-negative:hover{color:rgb(198, 12, 48) !important}.duet-button.duet-button-icon-only{min-width:48px;min-height:48px;padding:0 !important}.duet-button.duet-button-icon-only .duet-button-contents{position:static}.duet-button.duet-button-icon-only .duet-button-icon.left.large,.duet-button.duet-button-icon-only .duet-button-icon.left.medium,.duet-button.duet-button-icon-only .duet-button-icon.left.small{position:absolute;top:50% !important;left:50% !important;padding:0;margin:0;transform:translateX(-50%) translateY(-50%)}.duet-button.duet-button.input-button-primary,.duet-button.duet-button.input-button-secondary,.duet-button.duet-button.input-button-embedded{box-sizing:content-box;min-width:48px;min-height:48px;padding:0 !important;border-width:1px;border-top-left-radius:0;border-top-right-radius:4px;border-bottom-right-radius:4px;border-bottom-left-radius:0}.duet-button.duet-button.input-button-primary .duet-button-contents,.duet-button.duet-button.input-button-secondary .duet-button-contents,.duet-button.duet-button.input-button-embedded .duet-button-contents{position:static}.duet-button.duet-button.input-button-primary .duet-button-icon.left.large,.duet-button.duet-button.input-button-primary .duet-button-icon.left.medium,.duet-button.duet-button.input-button-primary .duet-button-icon.left.small,.duet-button.duet-button.input-button-secondary .duet-button-icon.left.large,.duet-button.duet-button.input-button-secondary .duet-button-icon.left.medium,.duet-button.duet-button.input-button-secondary .duet-button-icon.left.small,.duet-button.duet-button.input-button-embedded .duet-button-icon.left.large,.duet-button.duet-button.input-button-embedded .duet-button-icon.left.medium,.duet-button.duet-button.input-button-embedded .duet-button-icon.left.small{position:absolute;top:50% !important;left:50% !important;padding:0;margin:0;transform:translateX(-50%) translateY(-50%)}.duet-button.duet-button.input-button-embedded{border-left-width:0}.duet-button.square{width:48px !important;min-width:auto !important;height:48px !important;padding:0 !important;font-size:1.25rem;border-color:rgb(225, 227, 230);border-width:1px;border-radius:8px}.duet-button.square.duet-button-is-small{width:28px !important;height:28px !important;padding:0 !important;font-size:1rem}.duet-button.square.duet-button-negative{color:rgb(255, 255, 255) !important;background:rgb(0, 119, 179);border-color:rgb(0, 119, 179)}.duet-theme-turva .duet-button.square.duet-button-negative{color:rgb(255, 255, 255) !important;background:rgb(198, 12, 48);border-color:rgb(198, 12, 48)}.duet-theme-turva .duet-button.square{border-color:rgb(228, 228, 230)}.duet-button[disabled],.duet-button[disabled]:hover,.duet-button.duet-button-negative[disabled],.duet-button.duet-button-negative[disabled]:hover{color:rgb(101, 119, 135) !important;cursor:not-allowed;background:rgb(225, 227, 230) !important;border-color:rgb(225, 227, 230) !important;box-shadow:none !important}.duet-theme-turva .duet-button[disabled],.duet-theme-turva .duet-button[disabled]:hover,.duet-theme-turva .duet-button.duet-button-negative [disabled],.duet-theme-turva .duet-button.duet-button-negative [disabled]:hover{color:rgb(116, 116, 117) !important;cursor:not-allowed;background:rgb(228, 228, 230) !important;border-color:rgb(228, 228, 230) !important}.duet-button-is-loading.primary,.duet-button-is-loading.input-button-primary{color:rgb(255, 255, 255)}.duet-button-is-loading.default{color:rgb(0, 119, 179)}.duet-button-is-loading.default.duet-theme-turva{color:rgb(198, 12, 48)}.duet-button-is-loading .duet-button-contents{visibility:hidden;opacity:0}";

const DuetButton = /*@__PURE__*/ proxyCustomElement(class extends H {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.duetFocus = createEvent(this, "duetFocus", 7);
    this.duetBlur = createEvent(this, "duetBlur", 7);
    /**
     * Component event handling.
     */
    this.handleClick = (ev) => {
      // If this button wants to specifically submit a form
      // climb up the dom to see if we're in a <form>
      // and if so, then use JS to submit it.
      // To understand better, see: https://www.hjorthhansen.dev/shadow-dom-form-participation/
      if (!this.url && this.element.closest("form")) {
        ev.preventDefault();
        this.proxyButton.click();
      }
    };
    this.onFocus = () => {
      this.duetFocus.emit();
    };
    this.onBlur = () => {
      this.duetBlur.emit();
    };
    this.accessibleLabel = undefined;
    this.accessibleControls = undefined;
    this.accessiblePopup = "false";
    this.accessibleActiveDescendant = undefined;
    this.accessibleOwns = undefined;
    this.accessibleDescribedBy = undefined;
    this.accessibleDetails = undefined;
    this.accessibleLabelledBy = undefined;
    this.accessibleDescription = undefined;
    this.accessibleExpanded = undefined;
    this.accessiblePressed = undefined;
    this.loading = false;
    this.variation = "default";
    this.negative = false;
    this.theme = "";
    this.margin = "auto";
    this.padding = "auto";
    this.centerText = false;
    this.wrapping = "auto";
    this.expand = false;
    this.fixed = false;
    this.disabled = false;
    this.name = undefined;
    this.value = undefined;
    this.identifier = undefined;
    this.submit = false;
    this.external = false;
    this.language = getLanguage();
    this.accessibleLabelExternalDefaults = DuetStringsExternalDefaults;
    this.accessibleLabelExternal = getLocaleString(this.accessibleLabelExternalDefaults);
    this.icon = "";
    this.color = "";
    this.iconRight = false;
    this.iconSize = "medium";
    this.size = "medium";
    this.iconOnly = false;
    this.url = undefined;
  }
  watchLanguageStateHandler(newValue, oldValue) {
    if (newValue !== oldValue && this.accessibleLabelExternal === this.accessibleLabelExternalDefaults[oldValue]) {
      this.accessibleLabelExternal = getLocaleString(this.accessibleLabelExternalDefaults, newValue);
    }
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
    if (this.url && this.external && this.icon) {
      console.warn("[DUET]: Button used as an external link will override any icon that is set");
    }
  }
  connectedCallback() {
    this.proxyButton = document.createElement("button");
    this.proxyButton.style.display = "none";
    this.syncToProxyButton();
    connectLanguageChangeObserver(this);
    if (!this.url && this.element.closest("form")) {
      this.element.insertAdjacentElement("beforebegin", this.proxyButton);
    }
  }
  disconnectedCallback() {
    this.proxyButton.remove();
    this.proxyButton = null;
    disconnectLanguageChangeObserver(this);
  }
  syncToProxyButton() {
    this.proxyButton.type = this.getButtonType();
    this.proxyButton.disabled = this.disabled;
    // attributes should be removed in cases where name/value is not set
    if (this.name != null) {
      this.proxyButton.name = this.name;
    }
    else {
      this.proxyButton.removeAttribute("name");
    }
    if (this.value != null) {
      this.proxyButton.value = this.value;
    }
    else {
      this.proxyButton.removeAttribute("value");
    }
  }
  getButtonType() {
    return this.submit ? "submit" : "button";
  }
  /**
   * Sets focus on the specified `duet-button`. Use this method instead of the global
   * `button.focus()`.
   */
  async setFocus(options) {
    if (this.nativeButton) {
      this.nativeButton.focus(options);
    }
  }
  /**
   * render() function.
   * Always the last one in the class.
   */
  render() {
    const isExternalLink = this.external && this.url;
    // enforce consistency for external links
    const icon = isExternalLink ? "action-new-window" : this.icon;
    const iconRight = isExternalLink ? true : this.iconRight;
    const commonChildren = (h("span", { class: "duet-button-contents", style: { color: getColorByName(this.color) } }, icon && (h("div", { "aria-hidden": "true", class: {
        "duet-button-icon": true,
        left: !iconRight,
        right: iconRight,
        [this.iconSize]: true,
      } }, h("duet-icon", { size: "auto", margin: "none", name: icon, color: "currentColor" }))), h("slot", null)));
    const commonProps = {
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      ref: button => (this.nativeButton = button),
      id: this.identifier,
      class: {
        "duet-m-0": this.margin === "none",
        "duet-p-0": this.padding === "none",
        "duet-no-wrap": this.wrapping === "none",
        "duet-button": true,
        "duet-button-is-small": this.size === "small",
        "duet-button-icon-only": this.iconOnly,
        "duet-button-text-center": this.centerText,
        "duet-button-negative": this.negative || this.variation === "negative",
        [this.variation]: true,
        disabled: this.disabled,
        icon: !!icon,
        "icon-right": iconRight,
        [this.iconSize]: true,
      },
      "aria-controls": this.accessibleControls,
      "aria-label": this.accessibleLabel,
      "aria-expanded": this.accessibleExpanded != null ? this.accessibleExpanded.toString() : undefined,
      "aria-activedescendant": this.accessibleActiveDescendant,
      "aria-owns": this.accessibleOwns,
      "aria-describedby": this.accessibleDescribedBy,
      "aria-labelledby": this.accessibleLabelledBy,
      "aria-details": this.accessibleDetails,
      "aria-description": this.accessibleDescription,
    };
    return (h(Host, { onClick: this.handleClick, class: {
        "duet-m-0": this.margin === "none",
        "duet-small": this.size === "small",
        "duet-fixed": this.fixed,
        "duet-expand": this.expand,
        "input-button": this.variation.startsWith("input-button"),
      } }, h("div", { class: {
        "duet-button-container": true,
        "duet-button-is-loading": this.loading,
        "duet-theme-turva": this.theme === "turva",
        "duet-button-negative": this.negative || this.variation === "negative",
        [this.variation]: true,
      } }, this.url ? (h("a", Object.assign({}, commonProps, { href: this.url, target: this.external ? "_blank" : "_self", rel: this.external ? "noopener" : undefined }), commonChildren, this.external && h("duet-visually-hidden", null, ", ", this.accessibleLabelExternal))) : (h("button", Object.assign({}, commonProps, { type: this.getButtonType(), disabled: this.disabled, name: this.name, value: this.value, "aria-pressed": this.accessiblePressed != null ? this.accessiblePressed.toString() : undefined, "aria-haspopup": this.accessiblePopup != null ? this.accessiblePopup.toString() : undefined, "aria-disabled": this.disabled }), commonChildren)), this.loading && h("duet-spinner", { color: "currentColor" }))));
  }
  get element() { return this; }
  static get watchers() { return {
    "language": ["watchLanguageStateHandler"],
    "disabled": ["syncToProxyButton"],
    "submit": ["syncToProxyButton"],
    "value": ["syncToProxyButton"],
    "name": ["syncToProxyButton"]
  }; }
  static get style() { return duetButtonCss; }
}, [1, "duet-button", {
    "accessibleLabel": [1, "accessible-label"],
    "accessibleControls": [1, "accessible-controls"],
    "accessiblePopup": [1, "accessible-popup"],
    "accessibleActiveDescendant": [1, "accessible-active-descendant"],
    "accessibleOwns": [1, "accessible-owns"],
    "accessibleDescribedBy": [1, "accessible-described-by"],
    "accessibleDetails": [1, "accessible-details"],
    "accessibleLabelledBy": [1, "accessible-labelled-by"],
    "accessibleDescription": [1, "accessible-description"],
    "accessibleExpanded": [4, "accessible-expanded"],
    "accessiblePressed": [4, "accessible-pressed"],
    "loading": [4],
    "variation": [1],
    "negative": [4],
    "theme": [1025],
    "margin": [1],
    "padding": [1],
    "centerText": [4, "center-text"],
    "wrapping": [1],
    "expand": [4],
    "fixed": [4],
    "disabled": [516],
    "name": [1],
    "value": [1],
    "identifier": [1],
    "submit": [516],
    "external": [4],
    "language": [1537],
    "accessibleLabelExternalDefaults": [1, "accessible-label-external-default"],
    "accessibleLabelExternal": [1025, "accessible-label-external"],
    "icon": [1],
    "color": [1],
    "iconRight": [4, "icon-right"],
    "iconSize": [1, "icon-size"],
    "size": [1],
    "iconOnly": [4, "icon-only"],
    "url": [513],
    "setFocus": [64]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["duet-button", "duet-icon", "duet-spinner", "duet-visually-hidden"];
  components.forEach(tagName => { switch (tagName) {
    case "duet-button":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DuetButton);
      }
      break;
    case "duet-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$3();
      }
      break;
    case "duet-spinner":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
    case "duet-visually-hidden":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}

export { DuetButton as D, defineCustomElement as d };
