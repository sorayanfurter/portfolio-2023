/*!
 * Built with Duet Design System
 */
var watchFor=function(e,t,r,n,o){if(o===void 0){o={childList:true,subtree:true}}var a;if(typeof MutationObserver!=="undefined"){a=new MutationObserver((function(e){r(n(e,t))}));a.observe(e,o)}return a};var watchForOptions=function(e,t,r){return watchFor(e,t,r,getSelectedOption)};var watchForElement=function(e,t,r){return watchFor(e,t,r,getElementItem,{childList:true,subtree:true})};var getElementItem=function(e){var t=false;var r=false;e.forEach((function(e){if(e.addedNodes.length){t=true}if(e.removedNodes.length){r=true}}));return{addedNode:t,removedNode:r,mutationList:e}};var getSelectedOption=function(e,t){var r;e.forEach((function(e){for(var n=0;n<e.addedNodes.length;n++){r=findCheckedOption(e.addedNodes[n],t)||r}}));return r};var findCheckedOption=function(e,t){if(e.nodeType!==1){return undefined}var r=e.tagName===t.toUpperCase()?[e]:Array.from(e.querySelectorAll(t));return r.find((function(e){return e.checked===true}))};export{watchForElement as a,findCheckedOption as f,watchForOptions as w};