/*!
 * Built with Duet Design System
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-a6cfed65.js');
const isInternetExplorer = require('./is-internet-explorer-91361c56.js');

const duetLayoutCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;flex:1 0 auto;width:100%}:host(.duet-middle){display:flex}:host(.duet-middle) .duet-layout{padding:36px 28px !important}@media (min-width: 36em){:host(.duet-middle) .duet-layout{padding:48px 36px !important}}@media (min-width: 62em){:host(.duet-middle) .duet-layout{padding:56px !important}}:host(.duet-ie){height:100%}:host(.duet-middle.duet-ie){height:auto}.duet-layout{position:relative;padding:0 16px;margin:48px auto 36px}@media (max-width: 20.5em){.duet-layout.padding-xxx-small{padding:0}}@media (max-width: 22.5em){.duet-layout.padding-xx-small{padding:0}}@media (max-width: 35.9375em){.duet-layout.padding-x-small{padding:0}}@media (min-width: 36em){.duet-layout.padding-small{padding:0}}@media (min-width: 48em){.duet-layout.padding-medium{padding:0}}@media (min-width: 62em){.duet-layout.padding-large{padding:0}}@media (min-width: 64.0625em){.duet-layout.padding-x-large{padding:0}}@media (min-width: 76.25em){.duet-layout.padding-xx-large{padding:0}}@media (min-width: 106.25em){.duet-layout.padding-xxx-large{padding:0}}@media (min-width: 36em){.duet-layout{margin-top:72px}}.duet-layout.duet-layout-has-top{margin-top:0}.duet-layout.duet-m-0{margin-top:0 !important;margin-bottom:0 !important}.duet-layout.duet-center{display:flex;align-items:center;justify-content:center;width:100%;max-width:888px}@media (min-width: 36em){.duet-layout.duet-center{padding:0 48px}}@media (min-width: 48em){.duet-layout.duet-center{padding:0 72px}}@media (min-width: 62em){.duet-layout.duet-center{width:100%}}@media (min-width: 36em){.duet-layout{padding:0 28px}}@media (min-width: 62em){.duet-layout{display:flex;flex-direction:row;padding:0 56px;margin-bottom:48px}}@media (min-width: 76.25em){.duet-layout{max-width:1110px;padding:0}}.duet-main,.duet-sidebar,.duet-layout-top,.duet-layout-bottom{display:block;width:100%}.duet-layout-top{position:relative;display:block;width:100%;margin:72px auto 0}.duet-layout-top.duet-m-0{margin-top:0 !important;margin-bottom:0 !important}.duet-layout-top .duet-layout-top-wrapper{padding:0 20px;margin:0 auto}@media (min-width: 36em){.duet-layout-top .duet-layout-top-wrapper{padding:0 28px}}@media (min-width: 62em){.duet-layout-top .duet-layout-top-wrapper{padding:0 56px}}@media (min-width: 76.25em){.duet-layout-top .duet-layout-top-wrapper{max-width:1110px;padding:0}}.duet-center .duet-layout-top-wrapper{max-width:888px}@media (min-width: 36em){.duet-center .duet-layout-top-wrapper{padding:0 48px}}@media (min-width: 48em){.duet-center .duet-layout-top-wrapper{padding:0 72px}}@media (min-width: 62em){.duet-main{min-width:600px;margin:0 auto}.has-sidebar .duet-main{max-width:734px;margin-right:20px}}@media (min-width: 62em){.duet-sidebar{min-width:256px;max-width:356px}}@media (min-width: 62em){.duet-sidebar-container{width:auto;max-width:356px}}@media (min-width: 62em){.duet-sidebar-container.has-tabs{margin-top:89px}}@media (min-width: 62em){.duet-sidebar-container.sticky{position:sticky}.duet-sidebar-container.sticky.with-links{top:calc(3rem + 20px)}.duet-sidebar-container.sticky.without-links{top:calc(4rem + 20px)}}";

const DuetLayout = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /**
     * Own Properties.
     */
    this.hasSidebar = false;
    this.hasTop = false;
    this.sticky = false;
    this.margin = "auto";
    this.stickyDistance = "with-links";
    this.center = false;
    this.tabs = false;
    this.middle = false;
    this.paddingBreakpoint = undefined;
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    this.hasSidebar = !!this.element.querySelector("[slot='sidebar']");
    this.hasTop = !!this.element.querySelector("[slot='top']");
    if (!this.element.querySelector("[slot='main']")) {
      console.warn("[DUET WARNING]: Nothing passed to <duet-layout> named slots. Please use one of 'main', 'sidebar' or 'top' to display contents.");
    }
  }
  /**
   * render() function.
   * Always the last one in the class.
   */
  render() {
    return (index.h(index.Host, { class: {
        "duet-middle": this.middle,
        "duet-ie": isInternetExplorer.isInternetExplorer(),
      } }, this.hasTop && (index.h("div", { class: {
        "duet-layout-top": true,
        "duet-m-0": this.margin === "none",
        "duet-center": this.center,
      } }, index.h("div", { class: "duet-layout-top-wrapper" }, index.h("slot", { name: "top" })))), index.h("div", { class: {
        "duet-layout": true,
        "duet-layout-has-top": this.hasTop,
        "has-sidebar": this.hasSidebar,
        "duet-m-0": this.margin === "none",
        "duet-center": this.center,
        [`padding-${this.paddingBreakpoint}`]: !!this.paddingBreakpoint,
      } }, index.h("main", { class: "duet-main" }, index.h("slot", { name: "main" })), this.hasSidebar && (index.h("aside", { class: "duet-sidebar" }, index.h("div", { class: {
        "duet-sidebar-container": true,
        "has-tabs": this.tabs,
        sticky: this.sticky,
        [this.stickyDistance]: this.sticky,
      } }, index.h("slot", { name: "sidebar" })))))));
  }
  get element() { return index.getElement(this); }
};
DuetLayout.style = duetLayoutCss;

exports.duet_layout = DuetLayout;
