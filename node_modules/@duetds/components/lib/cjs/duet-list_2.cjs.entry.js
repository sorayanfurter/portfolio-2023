/*!
 * Built with Duet Design System
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-a6cfed65.js');
const themeableComponent = require('./themeable-component-fdeaef9f.js');
const watchOptions = require('./watch-options-d88afac0.js');

const duetListCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}.duet-list-component{margin-bottom:16px !important;width:100%}.duet-list-component.duet-p-0{padding:0 !important}.duet-list-component.duet-m-0{margin:0 !important}";

const DuetList = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.theme = "";
    this.margin = "auto";
    this.padding = "auto";
    this.mobile = "left";
    this.breakpoint = "small";
    this.variation = "default";
    this.labelWidth = "30";
    this.responsive = true;
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    themeableComponent.inheritGlobalTheme(this);
  }
  async connectedCallback() {
    const el = this.element;
    this.mutationO = watchOptions.watchForOptions(el, "duet-list-item", () => {
      this.updateListItems();
    });
    this.updateListItems();
  }
  disconnectedCallback() {
    if (this.mutationO) {
      this.mutationO.disconnect();
      this.mutationO = undefined;
    }
  }
  /**
   * Local methods
   */
  toggleClass(elem, className, force) {
    if (force) {
      elem.classList.add(className);
    }
    else {
      elem.classList.remove(className);
    }
  }
  async updateListItems() {
    const items = Array.from(this.element.querySelectorAll("duet-list-item"));
    items.forEach(item => {
      item.responsive = this.responsive;
      item.breakpoint = this.responsive ? this.breakpoint || "small" : undefined;
      // Use classes to apply styles for SSR compatibility
      item.classList.add(`duet-list-width-${this.labelWidth}`);
      item.classList.add(`duet-list-variation-${this.variation}`);
      // If padding is set to 0
      this.toggleClass(item, "duet-p-0", this.padding === "none");
      // If text is centered for mobile
      this.toggleClass(item, "duet-list-mobile-center", this.mobile === "center");
      // Create zebra striping if striped variation is used
      this.toggleClass(item, "duet-list-striped", this.variation === "striped");
      // Create borders if bordered variation is used
      this.toggleClass(item, "duet-list-bordered", this.variation === "bordered");
      // Create inner borders if inner-bordered variation is used
      this.toggleClass(item, "duet-list-inner-bordered", this.variation === "inner-bordered");
      // Finally apply turva theme if necessary
      this.toggleClass(item, "duet-theme-turva", this.theme === "turva");
    });
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (index.h("dl", { class: { "duet-list-component": true, "duet-m-0": this.margin === "none" } }, index.h("slot", null)));
  }
  get element() { return index.getElement(this); }
  static get watchers() { return {
    "theme": ["updateListItems"],
    "padding": ["updateListItems"],
    "mobile": ["updateListItems"],
    "responsive": ["updateListItems"],
    "breakpoint": ["updateListItems"],
    "variation": ["updateListItems"],
    "labelWidth": ["updateListItems"]
  }; }
};
DuetList.style = duetListCss;

const duetListItemCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;flex-direction:column;display:flex;width:100%;overflow:visible;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-style:normal;font-weight:400;font-variant-numeric:tabular-nums;line-height:1.25;color:rgb(0, 41, 77)}:host dt{padding-bottom:4px}:host dd{padding-top:0}:host dt,:host dd{flex-basis:100%}:host dt,:host dd{width:100%;margin-inline-start:0;-webkit-hyphens:auto;hyphens:auto;text-align:left;word-break:break-all;word-break:break-word}:host dt{font-weight:600}.duet-theme-turva :host dt{font-weight:700}:host dd{margin-left:auto}:host(.duet-list-striped) dt,:host(.duet-list-striped) dd{padding:16px}:host(.duet-list-striped) dt{padding-bottom:4px}:host(.duet-list-striped) dd{padding-top:0}:host(.duet-list-striped.duet-no-stacking) dt,:host(.duet-list-striped.duet-no-stacking) dd{padding:16px}:host(:not(.duet-list-striped)) dt,:host(:not(.duet-list-striped)) dd{padding:8px;padding-inline:0}:host(:not(.duet-list-striped)) dt{padding-bottom:4px}:host(:not(.duet-list-striped)) dd{padding-top:0}:host(:not(.duet-list-striped).duet-no-stacking) dt,:host(:not(.duet-list-striped).duet-no-stacking) dd{padding:8px;padding-inline:0}:host(.duet-p-0) dt,:host(.duet-p-0) dd{padding:0 !important}:host(.duet-list-mobile-center) dt,:host(.duet-list-mobile-center) dd{text-align:center}:host(.duet-theme-turva){font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}:host(.duet-list-striped:nth-child(odd)) dt,:host(.duet-list-striped:nth-child(odd)) dd{background:rgb(245, 248, 250)}:host(.duet-list-striped.duet-theme-turva:nth-child(odd)) dt,:host(.duet-list-striped.duet-theme-turva:nth-child(odd)) dd{background:rgb(245, 245, 247)}:host(.duet-list-bordered){border-block-start:1px solid rgb(225, 227, 230)}:host(.duet-list-bordered:last-child){border-block-end:1px solid rgb(225, 227, 230)}:host(.duet-list-bordered.duet-theme-turva){border-block-start:1px solid rgb(228, 228, 230)}:host(.duet-list-bordered.duet-theme-turva:last-child){border-block-end:1px solid rgb(228, 228, 230)}:host(.duet-list-inner-bordered:not(:last-child)){border-block-end:1px solid rgb(225, 227, 230)}:host(.duet-list-inner-bordered.duet-theme-turva:not(:last-child)){border-block-end:1px solid rgb(228, 228, 230)}:host(.duet-no-stacking){flex-direction:row}:host(.duet-list-mobile-center.duet-no-stacking) dt,:host(.duet-list-mobile-center.duet-no-stacking) dd{text-align:left}:host(.duet-no-stacking.duet-list-width-30) dt{flex-basis:33%}:host(.duet-no-stacking.duet-list-width-30) dd{flex-basis:67%}:host(.duet-no-stacking.duet-list-width-50) dt{flex-basis:47%}:host(.duet-no-stacking.duet-list-width-50) dd{flex-basis:53%}:host(.duet-no-stacking.duet-list-width-70) dt{flex-basis:65%}:host(.duet-no-stacking.duet-list-width-70) dd{flex-basis:35%}:host(.duet-list-item-breakpoint-x-small){flex-direction:row}:host(.duet-list-item-breakpoint-x-small.duet-list-striped) dt,:host(.duet-list-item-breakpoint-x-small.duet-list-striped) dd{padding:16px}:host(.duet-list-item-breakpoint-x-small:not(.duet-list-striped)) dt,:host(.duet-list-item-breakpoint-x-small:not(.duet-list-striped)) dd{padding:8px;padding-inline:0}:host(.duet-list-item-breakpoint-x-small.duet-p-0) dt,:host(.duet-list-item-breakpoint-x-small.duet-p-0) dd{padding:0 !important}:host(.duet-list-item-breakpoint-x-small.duet-list-mobile-center) dt,:host(.duet-list-item-breakpoint-x-small.duet-list-mobile-center) dd{text-align:left}:host(.duet-list-item-breakpoint-x-small.duet-list-width-30) dt{flex-basis:33%}:host(.duet-list-item-breakpoint-x-small.duet-list-width-30) dd{flex-basis:67%}:host(.duet-list-item-breakpoint-x-small.duet-list-width-50) dt{flex-basis:47%}:host(.duet-list-item-breakpoint-x-small.duet-list-width-50) dd{flex-basis:53%}:host(.duet-list-item-breakpoint-x-small.duet-list-width-70) dt{flex-basis:65%}:host(.duet-list-item-breakpoint-x-small.duet-list-width-70) dd{flex-basis:35%}@media (max-width: 22.5em){:host(.duet-list-item-breakpoint-x-small){flex-direction:column}:host(.duet-list-item-breakpoint-x-small) dt{padding-bottom:4px}:host(.duet-list-item-breakpoint-x-small) dd{padding-top:0}:host(.duet-list-item-breakpoint-x-small.duet-list-striped) dt,:host(.duet-list-item-breakpoint-x-small.duet-list-striped) dd{padding:16px}:host(.duet-list-item-breakpoint-x-small.duet-list-striped) dt{padding-bottom:4px}:host(.duet-list-item-breakpoint-x-small.duet-list-striped) dd{padding-top:0}:host(.duet-list-item-breakpoint-x-small:not(.duet-list-striped)) dt,:host(.duet-list-item-breakpoint-x-small:not(.duet-list-striped)) dd{padding:8px;padding-inline:0}:host(.duet-list-item-breakpoint-x-small:not(.duet-list-striped)) dt{padding-bottom:4px}:host(.duet-list-item-breakpoint-x-small:not(.duet-list-striped)) dd{padding-top:0}:host(.duet-list-item-breakpoint-x-small.duet-p-0) dt,:host(.duet-list-item-breakpoint-x-small.duet-p-0) dd{padding:0 !important}:host(.duet-list-item-breakpoint-x-small.duet-list-mobile-center) dt,:host(.duet-list-item-breakpoint-x-small.duet-list-mobile-center) dd{text-align:center}:host(.duet-list-item-breakpoint-x-small.duet-list-width-30) dt,:host(.duet-list-item-breakpoint-x-small.duet-list-width-30) dd{flex-basis:100%}:host(.duet-list-item-breakpoint-x-small.duet-list-width-50) dt,:host(.duet-list-item-breakpoint-x-small.duet-list-width-50) dd{flex-basis:100%}:host(.duet-list-item-breakpoint-x-small.duet-list-width-70) dt,:host(.duet-list-item-breakpoint-x-small.duet-list-width-70) dd{flex-basis:100%}}@media (min-width: 36em){:host(.duet-list-item-breakpoint-small){flex-direction:row}:host(.duet-list-item-breakpoint-small.duet-list-striped) dt,:host(.duet-list-item-breakpoint-small.duet-list-striped) dd{padding:16px}:host(.duet-list-item-breakpoint-small:not(.duet-list-striped)) dt,:host(.duet-list-item-breakpoint-small:not(.duet-list-striped)) dd{padding:8px;padding-inline:0}:host(.duet-list-item-breakpoint-small.duet-p-0) dt,:host(.duet-list-item-breakpoint-small.duet-p-0) dd{padding:0 !important}:host(.duet-list-item-breakpoint-small.duet-list-mobile-center) dt,:host(.duet-list-item-breakpoint-small.duet-list-mobile-center) dd{text-align:left}:host(.duet-list-item-breakpoint-small.duet-list-width-30) dt{flex-basis:33%}:host(.duet-list-item-breakpoint-small.duet-list-width-30) dd{flex-basis:67%}:host(.duet-list-item-breakpoint-small.duet-list-width-50) dt{flex-basis:47%}:host(.duet-list-item-breakpoint-small.duet-list-width-50) dd{flex-basis:53%}:host(.duet-list-item-breakpoint-small.duet-list-width-70) dt{flex-basis:65%}:host(.duet-list-item-breakpoint-small.duet-list-width-70) dd{flex-basis:35%}}@media (min-width: 48em){:host(.duet-list-item-breakpoint-medium){flex-direction:row}:host(.duet-list-item-breakpoint-medium.duet-list-striped) dt,:host(.duet-list-item-breakpoint-medium.duet-list-striped) dd{padding:16px}:host(.duet-list-item-breakpoint-medium:not(.duet-list-striped)) dt,:host(.duet-list-item-breakpoint-medium:not(.duet-list-striped)) dd{padding:8px;padding-inline:0}:host(.duet-list-item-breakpoint-medium.duet-p-0) dt,:host(.duet-list-item-breakpoint-medium.duet-p-0) dd{padding:0 !important}:host(.duet-list-item-breakpoint-medium.duet-list-mobile-center) dt,:host(.duet-list-item-breakpoint-medium.duet-list-mobile-center) dd{text-align:left}:host(.duet-list-item-breakpoint-medium.duet-list-width-30) dt{flex-basis:33%}:host(.duet-list-item-breakpoint-medium.duet-list-width-30) dd{flex-basis:67%}:host(.duet-list-item-breakpoint-medium.duet-list-width-50) dt{flex-basis:47%}:host(.duet-list-item-breakpoint-medium.duet-list-width-50) dd{flex-basis:53%}:host(.duet-list-item-breakpoint-medium.duet-list-width-70) dt{flex-basis:65%}:host(.duet-list-item-breakpoint-medium.duet-list-width-70) dd{flex-basis:35%}}@media (min-width: 62em){:host(.duet-list-item-breakpoint-large){flex-direction:row}:host(.duet-list-item-breakpoint-large.duet-list-striped) dt,:host(.duet-list-item-breakpoint-large.duet-list-striped) dd{padding:16px}:host(.duet-list-item-breakpoint-large:not(.duet-list-striped)) dt,:host(.duet-list-item-breakpoint-large:not(.duet-list-striped)) dd{padding:8px;padding-inline:0}:host(.duet-list-item-breakpoint-large.duet-p-0) dt,:host(.duet-list-item-breakpoint-large.duet-p-0) dd{padding:0 !important}:host(.duet-list-item-breakpoint-large.duet-list-mobile-center) dt,:host(.duet-list-item-breakpoint-large.duet-list-mobile-center) dd{text-align:left}:host(.duet-list-item-breakpoint-large.duet-list-width-30) dt{flex-basis:33%}:host(.duet-list-item-breakpoint-large.duet-list-width-30) dd{flex-basis:67%}:host(.duet-list-item-breakpoint-large.duet-list-width-50) dt{flex-basis:47%}:host(.duet-list-item-breakpoint-large.duet-list-width-50) dd{flex-basis:53%}:host(.duet-list-item-breakpoint-large.duet-list-width-70) dt{flex-basis:65%}:host(.duet-list-item-breakpoint-large.duet-list-width-70) dd{flex-basis:35%}}@media (min-width: 64.0625em){:host(.duet-list-item-breakpoint-x-large){flex-direction:row}:host(.duet-list-item-breakpoint-x-large.duet-list-striped) dt,:host(.duet-list-item-breakpoint-x-large.duet-list-striped) dd{padding:16px}:host(.duet-list-item-breakpoint-x-large:not(.duet-list-striped)) dt,:host(.duet-list-item-breakpoint-x-large:not(.duet-list-striped)) dd{padding:8px;padding-inline:0}:host(.duet-list-item-breakpoint-x-large.duet-p-0) dt,:host(.duet-list-item-breakpoint-x-large.duet-p-0) dd{padding:0 !important}:host(.duet-list-item-breakpoint-x-large.duet-list-mobile-center) dt,:host(.duet-list-item-breakpoint-x-large.duet-list-mobile-center) dd{text-align:left}:host(.duet-list-item-breakpoint-x-large.duet-list-width-30) dt{flex-basis:33%}:host(.duet-list-item-breakpoint-x-large.duet-list-width-30) dd{flex-basis:67%}:host(.duet-list-item-breakpoint-x-large.duet-list-width-50) dt{flex-basis:47%}:host(.duet-list-item-breakpoint-x-large.duet-list-width-50) dd{flex-basis:53%}:host(.duet-list-item-breakpoint-x-large.duet-list-width-70) dt{flex-basis:65%}:host(.duet-list-item-breakpoint-x-large.duet-list-width-70) dd{flex-basis:35%}}";

const DuetListItem = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.responsive = false;
    this.breakpoint = "small";
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (index.h(index.Host, { class: {
        "duet-no-stacking": !this.responsive,
        "duet-list-item-breakpoint-x-small": this.breakpoint === "x-small",
        "duet-list-item-breakpoint-small": this.breakpoint === "small",
        "duet-list-item-breakpoint-medium": this.breakpoint === "medium",
        "duet-list-item-breakpoint-large": this.breakpoint === "large",
        "duet-list-item-breakpoint-x-large": this.breakpoint === "x-large",
      } }, index.h("dt", null, index.h("slot", { name: "label" })), index.h("dd", null, index.h("slot", { name: "value" }))));
  }
};
DuetListItem.style = duetListItemCss;

exports.duet_list = DuetList;
exports.duet_list_item = DuetListItem;
