/*!
 * Built with Duet Design System
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-a6cfed65.js');
const themeableComponent = require('./themeable-component-fdeaef9f.js');
const stringUtils = require('./string-utils-5cadd058.js');
const tokenUtils = require('./token-utils-c1864408.js');
const actionArrowRight = require('./action-arrow-right-24fe06be.js');
const actionNewWindowSmall = require('./action-new-window-small-fa51dfb9.js');
const commonStrings = require('./common-strings-de17f887.js');
const languageUtils = require('./language-utils-44df1d37.js');
require('./tokens.module-5fe478ed.js');

const duetCaptionCss = ":host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-bottom:16px !important;display:flex;flex:0 0 100%;width:100%;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:400;line-height:1.5;color:rgb(101, 119, 135);vertical-align:top}:host.duet-p-0{padding:0 !important}:host.duet-m-0{margin:0 !important}:host(.duet-caption-small){font-size:0.875rem;line-height:1.25}:host(.duet-theme-turva){font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(116, 116, 117)}:host(.duet-caption-selected){color:rgb(0, 119, 179)}:host(.duet-caption-selected.duet-theme-turva){color:rgb(23, 28, 58)}:host(.duet-m-0){margin:0 !important}";

const DuetCaption = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.theme = "";
    this.margin = "auto";
    this.selected = false;
    this.size = "medium";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    themeableComponent.inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (index.h(index.Host, { class: {
        "duet-caption": true,
        "duet-caption-selected": this.selected,
        "duet-caption-small": this.size === "small",
        "duet-theme-turva": this.theme === "turva",
        "duet-m-0": this.margin === "none",
      } }, index.h("slot", null)));
  }
};
DuetCaption.style = duetCaptionCss;

const duetHeadingCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;position:relative;display:block;width:100%}.duet-heading{margin-bottom:16px !important;width:100%;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-style:normal;font-weight:800;font-variant-numeric:tabular-nums;line-height:1.25;color:rgb(0, 41, 77);text-decoration:none;letter-spacing:-0.01rem;word-break:break-word}@media (min-width: 36em){.duet-heading{margin-bottom:20px !important}}.duet-heading.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-style:italic;font-weight:700;color:rgb(23, 28, 58)}.duet-heading.duet-heading-border{padding-bottom:20px;border-bottom:1px solid rgb(225, 227, 230)}.duet-heading.duet-heading-border.duet-heading-border-solid{border-bottom-color:rgb(101, 119, 135)}.duet-heading.duet-heading-hyphenate{-webkit-hyphens:auto;hyphens:auto}.duet-heading.h0{font-size:9.4vw;line-height:1.1}.duet-heading.h0.duet-p-0{padding:0 !important}.duet-heading.h0.duet-m-0{margin:0 !important}@media (max-width: 31.914893617rem){.duet-heading.h0{font-size:3rem}}@media (min-width: 47.8723404255rem){.duet-heading.h0{font-size:4.5rem}}@media (max-width: 22.5em){.duet-heading.h0{font-size:2.25rem}}.duet-heading.h1{font-size:7vw;line-height:1.1}.duet-heading.h1.duet-p-0{padding:0 !important}.duet-heading.h1.duet-m-0{margin:0 !important}@media (max-width: 32.1428571429rem){.duet-heading.h1{font-size:2.25rem}}@media (min-width: 42.8571428571rem){.duet-heading.h1{font-size:3rem}}@media (max-width: 22.5em){.duet-heading.h1{font-size:1.5rem}}.duet-heading.h2{font-size:5.8vw;line-height:1.1}.duet-heading.h2.duet-p-0{padding:0 !important}.duet-heading.h2.duet-m-0{margin:0 !important}@media (max-width: 25.8620689655rem){.duet-heading.h2{font-size:1.5rem}}@media (min-width: 38.7931034483rem){.duet-heading.h2{font-size:2.25rem}}.duet-heading.h2.duet-theme-turva{font-style:normal}@media (max-width: 22.5em){.duet-heading.h2{font-size:1.375rem}}.duet-heading.h3{margin-bottom:12px !important;font-size:4.2vw}.duet-heading.h3.duet-p-0{padding:0 !important}.duet-heading.h3.duet-m-0{margin:0 !important}@media (max-width: 29.7619047619rem){.duet-heading.h3{font-size:1.25rem}}@media (min-width: 35.7142857143rem){.duet-heading.h3{font-size:1.5rem}}.duet-heading.h3.duet-theme-turva{font-style:normal}.duet-heading.h3.duet-heading-border{padding-bottom:20px}.duet-heading.h4{margin-bottom:8px !important;font-size:4vw;letter-spacing:0}.duet-heading.h4.duet-p-0{padding:0 !important}.duet-heading.h4.duet-m-0{margin:0 !important}@media (max-width: 27.5rem){.duet-heading.h4{font-size:1.1rem}}@media (min-width: 31.25rem){.duet-heading.h4{font-size:1.25rem}}.duet-heading.h4.duet-theme-turva{font-style:normal;font-weight:700}.duet-heading.h4.duet-heading-border{padding-bottom:20px}.duet-heading.h5{margin-bottom:8px !important;font-size:4vw;font-weight:600;letter-spacing:0}.duet-heading.h5.duet-p-0{padding:0 !important}.duet-heading.h5.duet-m-0{margin:0 !important}@media (max-width: 27.5rem){.duet-heading.h5{font-size:1.1rem}}@media (min-width: 28.4090909091rem){.duet-heading.h5{font-size:1.1363636364rem}}.duet-heading.h5.duet-theme-turva{font-style:normal;font-weight:700}.duet-heading.h5.duet-heading-border{padding-bottom:16px}.duet-heading.h6{margin-bottom:8px !important;font-size:1rem;font-weight:600;letter-spacing:0}.duet-heading.h6.duet-p-0{padding:0 !important}.duet-heading.h6.duet-m-0{margin:0 !important}.duet-heading.h6.duet-theme-turva{font-style:normal;font-weight:700}.duet-heading.h6.duet-heading-border{padding-bottom:16px}.duet-heading.duet-normal,.duet-heading.duet-theme-turva.duet-normal{font-style:normal !important;font-weight:400 !important}.duet-heading.duet-semibold,.duet-heading.duet-theme-turva.duet-semibold{font-style:normal !important;font-weight:600 !important}";

const DuetHeading = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.level = "h2";
    this.margin = "auto";
    this.visualLevel = undefined;
    this.border = false;
    this.weight = "auto";
    this.color = "";
    this.theme = "";
    this.hyphenate = false;
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    themeableComponent.inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    const TagName = stringUtils.sanitizeString(this.level);
    const color = tokenUtils.getColorByName(this.color);
    return (index.h(TagName, { class: {
        "duet-heading": true,
        "duet-heading-border": this.border !== false,
        "duet-heading-border-solid": this.border === "solid",
        "duet-normal": this.weight === "normal",
        "duet-semibold": this.weight === "semibold",
        "duet-heading-hyphenate": this.hyphenate,
        "duet-m-0": this.margin === "none",
        [this.visualLevel ? this.visualLevel : this.level]: true,
        "duet-theme-turva": this.theme === "turva",
      }, style: { color }, part: "duet-heading" }, index.h("slot", null)));
  }
  get element() { return index.getElement(this); }
};
DuetHeading.style = duetHeadingCss;

const duetLinkCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:inline}:host(.duet-link-block){display:block}.duet-link{display:inline;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-style:normal;font-weight:400;color:rgb(0, 119, 179);text-decoration:underline;border-radius:4px;transition:300ms ease}.duet-link:focus{outline:0;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}.duet-theme-turva .duet-link:focus,.duet-link:focus.duet-theme-turva{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}.duet-link.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(198, 12, 48)}.duet-link:hover{color:rgb(0, 77, 128);text-decoration:none}.duet-link:hover.duet-theme-turva{color:rgb(148, 9, 37)}.duet-link:active{opacity:0.75;transition:none}.duet-link-external{position:absolute;width:20px;height:20px;margin-left:-15px}.duet-theme-turva .duet-link-external{margin-left:-12px}.duet-tab-to-link{padding:15px 28px 16px !important;position:absolute;top:-100%;left:-100%;z-index:200;width:1px;min-width:190px;height:1px;overflow:hidden;font-weight:600;color:rgb(0, 119, 179);text-align:center;text-decoration:none;background:rgb(255, 255, 255);border-radius:4px;opacity:0;transition:none}.duet-tab-to-link.duet-theme-turva{min-width:120px;color:rgb(23, 28, 58)}@media (min-width: 106.25em){.duet-tab-to-link{margin-left:20px}}.duet-tab-to-link:focus{top:12px;left:20px;width:auto;height:auto;outline:0;opacity:1}.block.duet-link{display:grid;grid-template-columns:1fr auto;gap:16px;align-items:center;padding:16px;font-weight:600;color:rgb(0, 41, 77);text-decoration:none}.block.duet-link.duet-link-has-icon{grid-template-columns:auto 1fr auto}.block.duet-link.none{padding:0}.block .block__chevron-icon{transition:300ms ease}.block:hover .block__chevron-icon{transform:translateX(4px)}";

const DuetLink = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.variation = "default";
    this.accessibleLabel = undefined;
    this.language = languageUtils.getLanguage();
    this.accessibleLabelExternalDefaults = commonStrings.DuetStringsExternalDefaults;
    this.accessibleLabelExternal = languageUtils.getLocaleString(this.accessibleLabelExternalDefaults);
    this.identifier = undefined;
    this.theme = "";
    this.url = "#";
    this.external = false;
    this.tabToLink = false;
    this.icon = undefined;
    this.padding = "auto";
  }
  watchLanguageStateHandler(newValue, oldValue) {
    if (newValue !== oldValue && this.accessibleLabelExternal === this.accessibleLabelExternalDefaults[oldValue]) {
      this.accessibleLabelExternal = languageUtils.getLocaleString(this.accessibleLabelExternalDefaults, newValue);
    }
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    themeableComponent.inheritGlobalTheme(this);
  }
  connectedCallback() {
    languageUtils.connectLanguageChangeObserver(this);
  }
  disconnectedCallback() {
    languageUtils.disconnectLanguageChangeObserver(this);
  }
  /**
   * Sets focus on the specified `duet-link`. Use this method instead of the global
   * `link.focus()`.
   */
  async setFocus(options) {
    this.nativeLink.focus(options);
  }
  renderContent() {
    return (index.h(index.Fragment, null, index.h("slot", null), this.external && (index.h(index.Fragment, null, "\u00A0\u00A0", index.h("duet-visually-hidden", null, this.accessibleLabelExternal), "\u00A0", index.h("span", { class: "duet-link-external" }, "\u00A0", index.h("duet-icon", { icon: actionNewWindowSmall.actionNewWindowSmall.svg, size: "xx-small", margin: "none", color: "currentColor" }))))));
  }
  renderGrid() {
    return (index.h(index.Fragment, null, this.icon && (index.h("span", { class: "block__icon" }, index.h("duet-icon", { size: "x-small", name: this.icon, margin: "none", color: "currentColor" }))), index.h("span", { class: "block__content" }, this.renderContent()), index.h("span", { class: "block__chevron" }, index.h("duet-icon", { class: "block__chevron-icon", icon: actionArrowRight.actionArrowRight.svg, size: "x-small", margin: "none", color: "primary-dark" }))));
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    // Notice that the external icon needs to be places right after the last word of the link.
    // This is why we use &nbps; to keep everything on the same line.
    return (index.h(index.Host, { class: {
        "duet-link-block": this.variation === "block",
      } }, index.h("a", { href: this.url, class: {
        "duet-link": true,
        "duet-link-is-external": this.external,
        "duet-link-has-icon": !!this.icon,
        "duet-tab-to-link": this.tabToLink,
        "duet-theme-turva": this.theme === "turva",
        "duet-p-0": this.padding === "none",
        [this.padding]: true,
        [this.variation]: true,
      }, target: this.external ? "_blank" : "_self", "aria-label": this.accessibleLabel, id: this.identifier, ref: el => (this.nativeLink = el), part: "duet-link", rel: this.external ? "noopener" : undefined }, this.variation === "block" ? this.renderGrid() : this.renderContent())));
  }
  static get delegatesFocus() { return true; }
  static get watchers() { return {
    "language": ["watchLanguageStateHandler"]
  }; }
};
DuetLink.style = duetLinkCss;

const duetParagraphCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;position:relative;display:block;width:100%}.duet-paragraph{margin-bottom:16px !important;display:block;width:100%;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-style:normal;font-weight:400;font-variant-numeric:tabular-nums;-webkit-hyphens:auto;hyphens:auto;line-height:1.5;color:rgb(0, 41, 77)}.duet-paragraph.duet-p-0{padding:0 !important}.duet-paragraph.duet-m-0{margin:0 !important}.duet-paragraph.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}.duet-paragraph.duet-paragraph-small{font-size:0.875rem}.duet-paragraph.duet-paragraph-semi-bold{font-weight:600}.duet-paragraph.duet-paragraph-bold{font-weight:700}.duet-paragraph.duet-m-0{margin:0 !important}.duet-paragraph.intro{font-size:2.7vw;margin-bottom:28px !important;-webkit-hyphens:inherit;hyphens:inherit}@media (max-width: 37.037037037rem){.duet-paragraph.intro{font-size:1rem}}@media (min-width: 46.2962962963rem){.duet-paragraph.intro{font-size:1.25rem}}.duet-paragraph.intro.duet-m-0{margin:0 !important}::slotted(a){font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-style:normal;font-weight:400;color:rgb(0, 119, 179);text-decoration:underline;transition:300ms ease}::slotted(a).duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(198, 12, 48)}::slotted(a):hover{color:rgb(0, 77, 128);text-decoration:none}::slotted(a):hover.duet-theme-turva{color:rgb(148, 9, 37)}::slotted(a):active{opacity:0.75;transition:none}";

const DuetParagraph = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.theme = "";
    this.margin = "auto";
    this.size = "medium";
    this.weight = undefined;
    this.variation = "default";
    this.color = "";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    themeableComponent.inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    const color = tokenUtils.getColorByName(this.color);
    return (index.h("p", { class: {
        "duet-paragraph": true,
        "duet-paragraph-small": this.size === "small",
        "duet-paragraph-semi-bold": this.weight === "semi-bold",
        "duet-paragraph-bold": this.weight === "bold",
        "duet-m-0": this.margin === "none",
        [this.variation]: true,
        "duet-theme-turva": this.theme === "turva",
      }, style: { color }, part: "duet-paragraph" }, index.h("slot", null)));
  }
  get element() { return index.getElement(this); }
};
DuetParagraph.style = duetParagraphCss;

exports.duet_caption = DuetCaption;
exports.duet_heading = DuetHeading;
exports.duet_link = DuetLink;
exports.duet_paragraph = DuetParagraph;
