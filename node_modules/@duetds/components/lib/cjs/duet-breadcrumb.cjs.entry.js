/*!
 * Built with Duet Design System
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-a6cfed65.js');
const themeableComponent = require('./themeable-component-fdeaef9f.js');

const duetBreadcrumbCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}.duet-breadcrumb{display:flex;flex-direction:row;align-items:center;justify-content:flex-start;height:100%;font-size:0.875rem;font-weight:inherit;color:inherit;text-decoration:none}.duet-breadcrumb:focus{outline:0}:host(.user-is-tabbing) .duet-breadcrumb:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}:host(.user-is-tabbing) .duet-breadcrumb.duet-theme-turva:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}";

const DuetBreadcrumb = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.theme = "";
    this.href = "";
    this.icon = "";
    this.accessibleLabel = undefined;
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    themeableComponent.inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (index.h(index.Host, null, index.h("a", { class: {
        "duet-breadcrumb": true,
        "duet-theme-turva": this.theme === "turva",
      }, href: this.href ? this.href : undefined, "aria-label": this.accessibleLabel }, this.icon && index.h("duet-icon", { size: "x-small", name: this.icon, margin: "none", color: "currentColor" }), !this.icon && index.h("slot", null))));
  }
};
DuetBreadcrumb.style = duetBreadcrumbCss;

exports.duet_breadcrumb = DuetBreadcrumb;
