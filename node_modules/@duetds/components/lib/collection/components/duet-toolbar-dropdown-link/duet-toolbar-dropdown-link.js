/*!
 * Built with Duet Design System
 */
import { h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
import { isEscapeKey } from "../../utils/keyboard-utils";
export class DuetToolbarDropdownLink {
  constructor() {
    this.accessibleLabel = undefined;
    this.theme = "";
    this.targetLanguage = undefined;
    this.href = "#";
    this.icon = undefined;
    this.active = false;
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
  }
  handleEscape(e) {
    if (isEscapeKey(e)) {
      const dropdown = this.element.closest("duet-toolbar-dropdown");
      dropdown.open = false;
      dropdown.setFocus();
    }
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, null, h("a", { class: {
        "duet-toolbar-dropdown-link": true,
        "duet-theme-turva": this.theme === "turva",
        active: this.active,
      }, href: this.href, lang: this.targetLanguage, hreflang: this.targetLanguage, role: "menuitem", "aria-label": this.accessibleLabel, "aria-current": this.active ? "true" : "false", onKeyUp: e => this.handleEscape(e) }, this.icon && h("duet-icon", { name: this.icon, size: "x-small", margin: "none" }), h("slot", null))));
  }
  static get is() { return "duet-toolbar-dropdown-link"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["duet-toolbar-dropdown-link.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["duet-toolbar-dropdown-link.css"]
    };
  }
  static get properties() {
    return {
      "accessibleLabel": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Adds accessible label for the button that is only shown for screen readers.\nTypically, this label text replaces the visible text on the button for\nusers who use assistive technology."
        },
        "attribute": "accessible-label",
        "reflect": false
      },
      "theme": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "DuetTheme",
          "resolved": "\"\" | \"default\" | \"turva\"",
          "references": {
            "DuetTheme": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Theme."
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "\"\""
      },
      "targetLanguage": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "\"en\" | \"fi\" | \"sv\"",
          "resolved": "\"en\" | \"fi\" | \"sv\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Language of the link. Use this only for language selection links."
        },
        "attribute": "target-language",
        "reflect": false,
        "defaultValue": "undefined"
      },
      "href": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Href"
        },
        "attribute": "href",
        "reflect": false,
        "defaultValue": "\"#\""
      },
      "icon": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Icon"
        },
        "attribute": "icon",
        "reflect": true,
        "defaultValue": "undefined"
      },
      "active": {
        "type": "boolean",
        "mutable": true,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Active"
        },
        "attribute": "active",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get elementRef() { return "element"; }
}
