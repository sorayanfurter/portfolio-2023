/*!
 * Built with Duet Design System
 */
import { h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
import { getColorByName } from "../../utils/token-utils";
export class DuetSpinner {
  constructor() {
    this.accessibleLabel = undefined;
    this.color = "gray-lightest";
    this.size = "small";
    this.theme = "";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    const color = this.color === "currentColor" ? "currentColor" : getColorByName(this.color);
    return (h(Host, { class: {
        "duet-custom-color": this.color !== "currentColor" && this.theme !== "turva" && this.theme !== "default",
        "duet-theme-turva": this.theme === "turva" && this.color !== "currentColor",
        "duet-theme-default": this.theme === "default" && this.color !== "currentColor",
      } }, h("div", { class: {
        "duet-spinner": true,
        [this.size]: true,
      }, style: { color }, "aria-label": this.accessibleLabel })));
  }
  static get is() { return "duet-spinner"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["duet-spinner.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["duet-spinner.css"]
    };
  }
  static get properties() {
    return {
      "accessibleLabel": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Adds accessible label for the spinner that is only shown for screen readers."
        },
        "attribute": "accessible-label",
        "reflect": false
      },
      "color": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "DuetColor",
          "resolved": "string",
          "references": {
            "DuetColor": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Color of the spinner, as a design token entered in camelCase or kebab-case.\nExample: \"color-primary\". This property can also be set to \"currentColor\"\nwhich forces the icon to use the CSS text color of parent element instead.\nUseful when you want to control the color in stylesheet instead."
        },
        "attribute": "color",
        "reflect": false,
        "defaultValue": "\"gray-lightest\""
      },
      "size": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "DuetSpinnerSize",
          "resolved": "\"large\" | \"medium\" | \"small\"",
          "references": {
            "DuetSpinnerSize": {
              "location": "local",
              "path": "/Users/laaksju3/duetds/packages/components/src/components/duet-spinner/duet-spinner.tsx"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Size variation of the spinner."
        },
        "attribute": "size",
        "reflect": false,
        "defaultValue": "\"small\""
      },
      "theme": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "DuetTheme",
          "resolved": "\"\" | \"default\" | \"turva\"",
          "references": {
            "DuetTheme": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Theme of the spinner. When used this will override the color setting and\nuse \"primary\" or \"primary-turva\" as the color depending on which theme\nis chosen."
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "\"\""
      }
    };
  }
}
