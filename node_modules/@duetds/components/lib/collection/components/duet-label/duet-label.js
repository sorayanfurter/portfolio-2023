/*!
 * Built with Duet Design System
 */
import { h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
export class DuetLabel {
  constructor() {
    this.theme = "";
    this.for = undefined;
    this.margin = "auto";
    this.size = "medium";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, { class: {
        "duet-label": true,
        "duet-label-small": this.size === "small",
        "duet-theme-turva": this.theme === "turva",
        "duet-small-margin": this.margin === "small",
        "duet-m-0": this.margin === "none",
      } }, h("label", { htmlFor: this.for }, h("span", null, h("slot", null)))));
  }
  static get is() { return "duet-label"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["duet-label.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["duet-label.css"]
    };
  }
  static get properties() {
    return {
      "theme": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "DuetTheme",
          "resolved": "\"\" | \"default\" | \"turva\"",
          "references": {
            "DuetTheme": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Theme of the label."
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "\"\""
      },
      "for": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "ID of the component that the label is labelling."
        },
        "attribute": "for",
        "reflect": false
      },
      "margin": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "DuetLabelMargin",
          "resolved": "\"auto\" | \"none\" | \"small\"",
          "references": {
            "DuetLabelMargin": {
              "location": "local",
              "path": "/Users/laaksju3/duetds/packages/components/src/components/duet-label/duet-label.tsx"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Controls the margin of the component."
        },
        "attribute": "margin",
        "reflect": false,
        "defaultValue": "\"auto\""
      },
      "size": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "DuetLabelSize",
          "resolved": "\"medium\" | \"small\"",
          "references": {
            "DuetLabelSize": {
              "location": "local",
              "path": "/Users/laaksju3/duetds/packages/components/src/components/duet-label/duet-label.tsx"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Controls the size of the label."
        },
        "attribute": "size",
        "reflect": false,
        "defaultValue": "\"medium\""
      }
    };
  }
}
