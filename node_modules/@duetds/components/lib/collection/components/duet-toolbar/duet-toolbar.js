/*!
 * Built with Duet Design System
 */
import { h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
/**
 * @slot left - Slot for content in left side.
 * @slot right - Slot for content in right side.
 */
export class DuetToolbar {
  constructor() {
    this.theme = "";
    this.accessibleLabel = undefined;
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
    const children = Array.from(this.element.children);
    for (const child of children) {
      if (child.getAttribute("slot") === "left") {
        for (const slotChild of Array.from(child.children)) {
          slotChild.setAttribute("role", "listitem");
        }
      }
      else if (child.getAttribute("slot") === "right") {
        for (const slotChild of Array.from(child.children)) {
          slotChild.setAttribute("role", "listitem");
        }
      }
    }
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, null, h("nav", { class: { "duet-toolbar": true, "duet-theme-turva": this.theme === "turva" }, "aria-label": this.accessibleLabel }, h("div", { class: "container" }, h("div", { class: "list", role: "list" }, h("slot", { name: "left" })), h("div", { class: "list", role: "list" }, h("slot", { name: "right" }))))));
  }
  static get is() { return "duet-toolbar"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["duet-toolbar.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["duet-toolbar.css"]
    };
  }
  static get properties() {
    return {
      "theme": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "DuetTheme",
          "resolved": "\"\" | \"default\" | \"turva\"",
          "references": {
            "DuetTheme": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Theme."
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "\"\""
      },
      "accessibleLabel": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Adds accessible label for the button that is only shown for screen readers.\nTypically, this label text replaces the visible text on the button for\nusers who use assistive technology."
        },
        "attribute": "accessible-label",
        "reflect": false
      }
    };
  }
  static get elementRef() { return "element"; }
}
