/*!
 * Built with Duet Design System
 */
import { h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
import { connectLanguageChangeObserver, disconnectLanguageChangeObserver, getLanguage, getLocaleString, } from "../../utils/language-utils";
export class DuetSlideoutLang {
  constructor() {
    /**
     * Own Properties.
     */
    this.chooseLangObject = {
      en: "Choose language",
      fi: "Valitse kieli",
      sv: "Välj språk",
    };
    this.language = getLanguage();
    this.theme = "";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
  }
  connectedCallback() {
    connectLanguageChangeObserver(this);
  }
  disconnectedCallback() {
    disconnectLanguageChangeObserver(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    const langTranslation = getLocaleString(this.chooseLangObject);
    return (h(Host, null, h("div", { class: "duet-slideout-lang", role: "group", "aria-label": langTranslation }, h("duet-icon", { name: "navigation-language", margin: "none", color: "secondary" }), h("slot", null))));
  }
  static get is() { return "duet-slideout-lang"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["duet-slideout-lang.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["duet-slideout-lang.css"]
    };
  }
  static get properties() {
    return {
      "theme": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "DuetTheme",
          "resolved": "\"\" | \"default\" | \"turva\"",
          "references": {
            "DuetTheme": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Theme."
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "\"\""
      }
    };
  }
  static get states() {
    return {
      "language": {}
    };
  }
  static get elementRef() { return "element"; }
}
