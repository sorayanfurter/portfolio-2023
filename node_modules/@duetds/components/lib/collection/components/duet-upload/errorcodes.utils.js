/*!
 * Built with Duet Design System
 */
import { getLocaleString } from "../../utils/language-utils";
import { parsePossibleJSON } from "../../utils/string-utils";
export const getError = (code, errorCodes) => {
  let error = {
    type: undefined,
    system_message: undefined,
    message: undefined,
  };
  errorCodes = parsePossibleJSON(errorCodes);
  error = errorCodes.filter(errorItem => {
    // the == is intentional we may be comparing numbers to strings - and that is ok here
    return errorItem.type == code;
  })[0];
  if (!error) {
    error = errorCodes.filter(errorItem => {
      return errorItem.type === "default";
    })[0];
  }
  return error;
};
export const getI18nError = (errorCode, errorCodes) => {
  const errorFromJson = getError(errorCode, errorCodes);
  const i18String = getLocaleString(errorFromJson.message);
  if (i18String === "" || !i18String) {
    return errorFromJson.system_message;
  }
  else {
    return i18String;
  }
};
