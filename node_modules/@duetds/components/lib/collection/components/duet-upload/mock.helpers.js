/*!
 * Built with Duet Design System
 */
import errorCodes from "./errorcodes.json";
/** list of mock File elements to pass the duet-upload component */
import { getI18nError } from "./errorcodes.utils";
//mock functions to show uploaded file state
export function getBrowsedFiles() {
  return fileListFromArray([
    mockFileCreator({
      name: "action-buy-insurance-default-error.svg",
      type: "image/svg",
      size: 11 * 10000,
      lastModified: new Date(),
      error: "default",
    }),
    mockFileCreator({
      name: "action-add-circle.svg",
      type: "image/svg",
      size: 234 * 1000,
      lastModified: new Date(),
      error: "400",
    }),
    mockFileCreator({
      name: "action-arrow-down.svg",
      type: "image/svg",
      size: 56 * 10000,
      lastModified: new Date(),
      error: "401",
    }),
    mockFileCreator({
      name: "action-car-transfer.svg",
      type: "image/svg",
      size: 56 * 100,
      lastModified: new Date(),
      error: "403",
    }),
    mockFileCreator({
      name: "action-car-enable.svg",
      type: "image/svg",
      size: 12 * 100000,
      lastModified: new Date(),
      error: "413",
    }),
    mockFileCreator({ name: "action-car-disable.svg", type: "image/svg", size: 23 * 1000, lastModified: new Date() }),
    mockFileCreator({
      name: "action-buy-insurance.svg",
      type: "image/svg",
      size: 11 * 1000,
      lastModified: new Date(),
      error: "duet-upload-101",
    }),
    mockFileCreator({
      name: "category-detached-house.svg",
      type: "image/svg",
      size: 78 * 1000,
      lastModified: new Date(),
    }),
  ]);
}
function mockFileCreator({ name, size, type, lastModified, error = undefined }) {
  var file;
  try {
    const blob = new Blob(["a".repeat(size)], { type });
    blob["lastModifiedDate"] = lastModified;
    var file = new File([blob], name, { type });
  }
  catch (e) {
    try {
      var file = new File(["foo"], name, { type });
    }
    catch (e) {
      var file = { name, size };
    }
  }
  return { file, error };
}
function fileListFromArray(files) {
  const fileMap = new Map();
  files.forEach(obj => {
    const isValid = !obj.error;
    const fileItem = {
      uid: `${Date.now()}-${Math.random()}`,
      item: obj.file,
      size: obj.file.size,
      valid: isValid,
      error: isValid
        ? undefined
        : {
          type: obj.error,
          message: isValid ? undefined : getI18nError(obj.error, errorCodes),
          system_message: isValid ? undefined : getI18nError(obj.error, errorCodes),
        },
      progress: 100,
      deleted: false,
      xhr: false,
      url: `https://cdn.duetds.com/api/icons/2.1.12/lib/assets/${obj.file.name}`,
    };
    fileMap.set(obj.file.name, fileItem);
  });
  return fileMap;
}
