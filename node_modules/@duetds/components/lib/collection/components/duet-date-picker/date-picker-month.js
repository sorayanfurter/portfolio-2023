/*!
 * Built with Duet Design System
 */
import { h } from "@stencil/core";
import i18n from "./date-i18n";
import { DatePickerDay } from "./date-picker-day";
import { getViewOfMonth, inRange, isEqual } from "./date-utils";
import { chunk } from "./utils";
export const DatePickerMonth = ({ selectedDate, focusedDate, labelledById, theme, language, min, max, onDateSelect, onKeyboardNavigation, focusedDayRef, onFocusEnter, onFocusExit, }) => {
  const { dayLabels } = i18n[language];
  const today = new Date();
  const days = getViewOfMonth(focusedDate);
  function handleFocusOut(e) {
    const table = e.currentTarget;
    const relatedTarget = e.relatedTarget;
    if (relatedTarget && !table.contains(relatedTarget)) {
      onFocusExit(e);
    }
  }
  return (h("table", { class: { "duet-date-table": true, "duet-theme-turva": theme === "turva" }, "aria-labelledby": labelledById,
    // @ts-ignore
    onFocusin: onFocusEnter, onFocusout: handleFocusOut }, h("thead", null, h("tr", null, dayLabels.map(label => (h("th", { scope: "col" }, h("span", { "aria-hidden": "true" }, label.substr(0, 2)), h("duet-visually-hidden", null, label)))))), h("tbody", null, chunk(days, 7).map(week => (h("tr", { class: "duet-date-table-row" }, week.map(day => (h("td", { class: "duet-date-table-cell" }, h(DatePickerDay, { day: day, today: today, language: language, focusedDay: focusedDate, inRange: inRange(day, min, max), isSelected: isEqual(day, selectedDate), onDaySelect: onDateSelect, onKeyboardNavigation: onKeyboardNavigation, ref: el => {
      if (el && isEqual(day, focusedDate)) {
        focusedDayRef(el);
      }
    } }))))))))));
};
