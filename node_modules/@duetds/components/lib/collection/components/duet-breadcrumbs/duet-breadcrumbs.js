/*!
 * Built with Duet Design System
 */
import arrowRightSmallIcon from "@duetds/icons/lib/assets/action-arrow-right-small";
import { Build, Fragment, h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
import { getLocaleString } from "../../utils/language-utils";
export class DuetBreadcrumbs {
  constructor() {
    this.observers = [];
    this.breadcrumbsAriaLabel = getLocaleString({
      fi: "Murupolku",
      sv: "Ströbröd",
      en: "Breadcrumbs",
    });
    this.children = undefined;
    this.theme = "";
    this.variation = "header";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
    this.children = Array.from(this.element.children);
  }
  connectedCallback() {
    if (Build.isServer) {
      return;
    }
    Array.from(this.element.children).forEach(child => {
      const observer = new MutationObserver(() => (this.children = Array.from(this.element.children)));
      observer.observe(child, {
        childList: true,
        subtree: true,
        attributes: true,
        characterData: true,
      });
      this.observers = [...this.observers, observer];
    });
  }
  disconnectedCallback() {
    if (Build.isServer) {
      return;
    }
    this.observers.forEach(observer => observer.disconnect());
    this.observers = [];
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, null, h("nav", { "aria-label": this.breadcrumbsAriaLabel, class: {
        "duet-breadcrumbs": true,
        "duet-theme-turva": this.theme === "turva",
        [this.variation]: true,
      } }, h("div", { class: "container" }, h("ol", null, this.children.map((child, index) => (h(Fragment, null, index > 0 && (h("li", { "aria-hidden": "true" }, h("duet-icon", { class: "duet-breadrumbs-arrow", size: "auto", icon: arrowRightSmallIcon.svg, margin: "none", color: "currentColor" }))), h("li", { innerHTML: child.outerHTML }), h("div", { class: "hide" }, h("slot", null)))))), h("div", { class: "bottom-border bottom-border--container" })), h("div", { class: "bottom-border bottom-border--nav" }))));
  }
  static get is() { return "duet-breadcrumbs"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["duet-breadcrumbs.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["duet-breadcrumbs.css"]
    };
  }
  static get properties() {
    return {
      "theme": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "DuetTheme",
          "resolved": "\"\" | \"default\" | \"turva\"",
          "references": {
            "DuetTheme": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Theme"
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "\"\""
      },
      "variation": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "\"header\" | \"footer\"",
          "resolved": "\"footer\" | \"header\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Variation"
        },
        "attribute": "variation",
        "reflect": false,
        "defaultValue": "\"header\""
      }
    };
  }
  static get states() {
    return {
      "children": {}
    };
  }
  static get elementRef() { return "element"; }
}
