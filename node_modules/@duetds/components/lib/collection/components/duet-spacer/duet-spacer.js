/*!
 * Built with Duet Design System
 */
import { h, Host } from "@stencil/core";
export class DuetSpacer {
  constructor() {
    this.size = "medium";
    this.direction = "vertical";
    this.breakpoint = "";
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, { class: {
        "duet-spacer": true,
        "duet-spacer-xx-small": this.breakpoint === "xx-small",
        "duet-spacer-x-small": this.breakpoint === "x-small",
        "duet-spacer-small": this.breakpoint === "small",
        "duet-spacer-medium": this.breakpoint === "medium",
        "duet-spacer-large": this.breakpoint === "large",
        "duet-spacer-x-large": this.breakpoint === "x-large",
        "duet-spacer-xx-large": this.breakpoint === "xx-large",
        [this.size]: true,
        [`duet-spacer-${this.direction}`]: true,
      } }));
  }
  static get is() { return "duet-spacer"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["duet-spacer.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["duet-spacer.css"]
    };
  }
  static get properties() {
    return {
      "size": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "DuetSpacerSize",
          "resolved": "\"large\" | \"medium\" | \"small\" | \"x-large\" | \"x-small\" | \"xx-large\" | \"xx-small\" | \"xxx-large\" | \"xxxx-large\"",
          "references": {
            "DuetSpacerSize": {
              "location": "local",
              "path": "/Users/laaksju3/duetds/packages/components/src/components/duet-spacer/duet-spacer.tsx"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Size variation of the spacer. Can be any of the spacing tokens."
        },
        "attribute": "size",
        "reflect": false,
        "defaultValue": "\"medium\""
      },
      "direction": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "DuetDirection",
          "resolved": "\"horizontal\" | \"vertical\"",
          "references": {
            "DuetDirection": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Direction of the space added."
        },
        "attribute": "direction",
        "reflect": false,
        "defaultValue": "\"vertical\""
      },
      "breakpoint": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "DuetSpacerBreakpoint",
          "resolved": "\"\" | \"large\" | \"medium\" | \"small\" | \"x-large\" | \"x-small\" | \"xx-large\" | \"xx-small\"",
          "references": {
            "DuetSpacerBreakpoint": {
              "location": "local",
              "path": "/Users/laaksju3/duetds/packages/components/src/components/duet-spacer/duet-spacer.tsx"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Adjusts the breakpoint where the spacer is shown in. The functionality\nfollows 1:1 the media queries defined in design tokens."
        },
        "attribute": "breakpoint",
        "reflect": false,
        "defaultValue": "\"\""
      }
    };
  }
}
