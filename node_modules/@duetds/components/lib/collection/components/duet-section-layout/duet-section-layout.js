/*!
 * Built with Duet Design System
 */
import { h, Host } from "@stencil/core";
import isInternetExplorer from "../../utils/is-internet-explorer";
export class DuetSectionLayout {
  constructor() {
    this.margin = "auto";
    this.middle = false;
  }
  /**
   * render() function.
   * Always the last one in the class.
   */
  render() {
    return (h(Host, { class: {
        "duet-middle": this.middle,
        "duet-ie": isInternetExplorer(),
      } }, h("div", { class: {
        "duet-layout": true,
        "duet-m-0": this.margin === "none",
      } }, h("section", { class: "duet-main" }, h("slot", null)))));
  }
  static get is() { return "duet-section-layout"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["duet-section-layout.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["duet-section-layout.css"]
    };
  }
  static get properties() {
    return {
      "margin": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "DuetMargin",
          "resolved": "\"auto\" | \"none\"",
          "references": {
            "DuetMargin": {
              "location": "import",
              "path": "../../common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Controls the margin of the component."
        },
        "attribute": "margin",
        "reflect": false,
        "defaultValue": "\"auto\""
      },
      "middle": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Align container vertically in the middle when the space allows it."
        },
        "attribute": "middle",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get elementRef() { return "element"; }
}
