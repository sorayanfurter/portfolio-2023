/*!
 * Built with Duet Design System
 */
import * as fs from "fs";
import * as path from "path";
/**
 * Get fixtures from directories and parse them for processing
 */
export function getAllFixturesFiles(dirPath, fixPath = "fixtures", skipFixture = []) {
  const component = dirPath.split(path.sep).pop();
  const fullPath = path.join(dirPath, fixPath);
  let files;
  try {
    files = fs.readdirSync(fullPath);
  }
  catch (e) {
    files = [];
  }
  // fixture names as keys, html as values
  const fixtures = {};
  files
    .map(file => path.parse(path.join(fullPath, file)))
    .filter(parsed => {
    return skipFixture.includes(parsed.name) ? false : parsed.ext === ".html";
  })
    .forEach(parsed => {
    const fixtureName = parsed.name.replace(`${component}_`, "");
    const fixtureHtml = `<span id="fixture">${fs.readFileSync(path.join(parsed.dir, parsed.base), "utf8")}</fixture>`;
    fixtures[fixtureName] = fixtureHtml;
  });
  return {
    component,
    fixtures,
  };
}
