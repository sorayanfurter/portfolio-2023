/**
 * This function restores cursor position after changing input
 *
 * @example
 * const resetCursor = storeAndResetCursor(this.input.selectionStart,this.input.selectionEnd)
 * this.input.changeValueAndForceUpdateOfCursoPosition()
 * resetCursor()
 */
export declare function resetCursor(domElement: HTMLInputElement | HTMLTextAreaElement): any;
/**
 * Given an input and a regex, remove any characters from the input's value
 * which match the regex, *whilst* maintaining cursor position.
 *
 * In effect, this prevent users from entering specific characters.
 *
 * @example
 * input.value = "foo123"
 * cleanValue(input, /[^0-9]/g)
 * input.value === "123"
 */
export declare function cleanValue(input: HTMLInputElement | HTMLTextAreaElement, regex: RegExp): string;
