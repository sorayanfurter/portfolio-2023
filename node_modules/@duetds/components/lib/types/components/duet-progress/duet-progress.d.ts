import { A11yComponent, ThemeableComponent } from "../../common";
import { DuetTheme } from "../../common-types";
import { DuetLangObject } from "../../utils/language-utils";
export type DuetUploadEvent = {
  originalEvent?: Event;
  data?: Record<string, any>;
  component: "duet-progress";
  scoped: true;
};
export declare class DuetProgress implements ThemeableComponent, A11yComponent {
  /**
   * Own Properties
   */
  private progressId;
  private progressLabelId;
  /**
   * Reference to host HTML element.
   */
  element: HTMLElement;
  /**
   * Indicates the id of a component that describes the upload component.
   */
  accessibleDescribedBy: string;
  /**
   * Aria Details of the component
   */
  accessibleDetails: string;
  /**
   * String of id's that indicate alternative labels elements
   */
  accessibleLabelledBy: string;
  /**
   * Aria description the button
   */
  accessibleDescription: string;
  /**
   * Indicates the aria-label of the component -
   * this will get combined with an label+uploading when uploading,
   * and label+upload complete when upload is complete
   */
  accessibleLabel: string;
  /**
   * Defaults for accessibleLabel
   */
  accessibleLabelUploadDefaults: DuetLangObject | string;
  /**
   * Adds accessible label for upload in progress and upload complete states
   * @default {fi: ["lähetys valmis", "lähetys käynnissä"],sv: ["Uppladdningen är klar", "Uppladdning pågår"], en:  ["completed", "in progress"]}
   */
  accessibleLabelUpload: string;
  /**
   * Progress of the bar, a value from 0-100
   */
  progress: number;
  /**
   * Caption (underneath label) that can be set as a way of adding extra information
   */
  caption: string;
  /**
   * Height of progressbar
   */
  height: string;
  /**
   * Theme of the input.
   */
  theme: DuetTheme;
  /**
   * Component lifecycle events.
   */
  componentWillLoad(): void;
  /**
   * render() function
   * Always the last one in the class.
   */
  render(): any;
}
