import { DuetLanguage, DuetMargin, DuetTheme } from "../../common-types";
import { ThemeableComponent } from "../../common/themeable-component";
import { DuetLangObject } from "../../utils/language-utils";
export type DuetLogoSize = "medium" | "large";
export declare class DuetLogo implements ThemeableComponent {
  /**
   * Own Properties.
   */
  private logoId;
  private nativeLink?;
  /**
   * Reference to host HTML element.
   */
  element: HTMLElement;
  /**
   * Theme of the logo.
   */
  theme: DuetTheme;
  /**
   * Controls the margin of the component.
   */
  margin: DuetMargin;
  /**
   * Use inverse version of the logo (white logo on dark background).
   */
  inverse: boolean;
  /**
   * Size variation of the logo.
   */
  size: DuetLogoSize;
  /**
   * Where the logo links to.
   */
  href: string;
  /**
   * Default translations for accessible label.
   */
  accessibleLabelDefaults: DuetLangObject;
  /**
   * Accessible label. Defaults to what is in accessibleLabelDefaults prop.
   */
  accessibleLabel: string;
  /**
   * The language of the logo.
   * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing
   * @default "fi"
   */
  language: DuetLanguage;
  watchLanguageStateHandler(newValue: DuetLanguage, oldValue: DuetLanguage): void;
  /**
   * Component lifecycle events.
   */
  componentWillLoad(): void;
  connectedCallback(): void;
  disconnectedCallback(): void;
  /**
   * Sets focus on the specified `duet-logo`. Use this method instead of the global
   * `logo.focus()`.
   */
  setFocus(options?: FocusOptions): Promise<void>;
  /**
   * render() function
   * Always the last one in the class.
   */
  render(): any;
}
