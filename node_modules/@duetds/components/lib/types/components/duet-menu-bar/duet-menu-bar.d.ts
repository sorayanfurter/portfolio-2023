import { EventEmitter } from "../../stencil-public-runtime";
import { ThemeableComponent } from "../../common";
import { DuetTheme } from "../../common-types";
import { DuetLogoSize } from "../duet-logo/duet-logo";
export type DuetMenuBarChangeEvent = {
  originalEvent: Event;
  name: "logoClick";
  data: {
    logoHref: string;
  };
  component: "duet-menu-bar";
};
/**
 * @slot center - Slot for content in center.
 * @slot right - Slot for content in right side.
 */
export declare class DuetMenuBar implements ThemeableComponent {
  /**
   * Own Properties.
   */
  private mql;
  private boundMqlFunctions;
  private container;
  private resizeTimer;
  logoSize: DuetLogoSize;
  leftMoreVisible: boolean;
  rightMoreVisible: boolean;
  /**
   * Reference to host HTML element.
   */
  element: HTMLElement;
  /**
   * Theme.
   */
  theme: DuetTheme;
  /**
   * Logo.
   */
  logo: boolean;
  /**
   * Logo href.
   */
  logoHref: string;
  /**
   * Logo link accessible label.
   */
  logoLinkAccessibleLabel: string;
  /**
   * Adds accessible label for the button that is only shown for screen readers.
   * Typically, this label text replaces the visible text on the button for
   * users who use assistive technology.
   */
  accessibleLabel: string;
  /**
   * General event stream for the following events:
   * logoClick
   * You can prevent
   * the default browser functionality by calling **event.detail.originalEvent.preventDefault()**
   * inside your listener. Additionally, the passed data is available via
   * **event.detail.data**.
   */
  duetEvent: EventEmitter<DuetMenuBarChangeEvent>;
  /**
   * Component lifecycle events.
   */
  componentWillLoad(): void;
  connectedCallback(): void;
  disconnectedCallback(): void;
  componentDidLoad(): void;
  onWindowResize(): void;
  private scrollbarCheck;
  private scrollToActive;
  private changeLogoSize;
  private handleLogoClick;
  /**
   * render() function
   * Always the last one in the class.
   */
  render(): any;
}
