export type DuetXhrRequestOptions = {
  type: "POST" | "DELETE";
  xhr: XMLHttpRequest;
  argument: string | null;
  uri: string;
  headers: Record<string, string> | null;
};
export type failureHandler = (xhr: XMLHttpRequest, name: string, status: XMLHttpRequest["status"]) => void;
export type successHandler = (xhr: XMLHttpRequest, name: string, status: XMLHttpRequest["status"]) => void;
export type progressTracker = (name: string) => void;
export type DuetXhrRequest = (payload: Record<string, any>, options: Partial<DuetXhrRequestOptions>, onFailure: failureHandler, onSuccess: successHandler, onProgress: progressTracker) => XMLHttpRequest;
export declare const makeXhrRequest: ({ payload, options, onFailure, onSuccess, onProgress }: {
  payload: any;
  options: any;
  onFailure: any;
  onSuccess: any;
  onProgress: any;
}) => DuetXhrRequest;
