import { EventEmitter } from "../../stencil-public-runtime";
import { DuetColor, DuetLanguage, DuetTheme } from "../../common-types";
import { ThemeableComponent } from "../../common/themeable-component";
export type DuetSlideoutEventDetails = {
  originalEvent: Event;
  data: {
    element: HTMLElement;
    open: boolean;
  };
  component: "duet-slideout";
};
export declare class DuetSlideout implements ThemeableComponent {
  /**
   * Own Properties.
   */
  private openButton;
  private closeButton;
  private exitLangObject;
  private isSafariBrowser;
  /**
   * Reference to host HTML element.
   */
  element: HTMLElement;
  language: DuetLanguage;
  /**
   * Theme.
   */
  theme: DuetTheme;
  /**
   * Open
   */
  open: boolean;
  /**
   * Background color. Use one of the color tokens.
   */
  backgroundColor: DuetColor;
  /**
   * Event raised when the menu has been opened. You can prevent the
   * default browser functionality by calling **event.detail.originalEvent.preventDefault()**
   * inside your listener. Additionally, the passed data is available via **event.detail.data**.
   */
  duetSlideoutEvent: EventEmitter<DuetSlideoutEventDetails>;
  /**
   * Toggles the slideout.
   */
  toggle(): Promise<void>;
  /**
   * Component lifecycle events.
   */
  componentWillLoad(): void;
  connectedCallback(): void;
  disconnectedCallback(): void;
  private toggleMenu;
  private onClick;
  /**
   * Component event handling.
   */
  handleKeyUp(ev: any): void;
  /**
   * Sets focus. Use this method instead of the global focus().
   */
  setFocus(options?: FocusOptions): Promise<void>;
  /**
   * render() function
   * Always the last one in the class.
   */
  render(): any;
}
