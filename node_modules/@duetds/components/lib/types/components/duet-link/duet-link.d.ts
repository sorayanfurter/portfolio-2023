import { DuetIconName, DuetLanguage, DuetLinkVariation, DuetPadding, DuetTheme } from "../../common-types";
import { ThemeableComponent } from "../../common/themeable-component";
import { DuetLangObject } from "../../utils/language-utils";
/**
 * @part duet-link - piercing selector for styling the link
 */
export declare class DuetLink implements ThemeableComponent {
  private nativeLink;
  /**
   * Style variation of the link.
   */
  variation: DuetLinkVariation;
  /**
   * Adds accessible label for the link that is only shown for screen readers.
   * Typically, this label text replaces the visible text on the link for users
   * who use assistive technology.
   */
  accessibleLabel: string;
  /**
   * The currently active language. This setting changes the external link
   * accessible label to match the chosen language.
   * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing
   * @default "fi"
   */
  language: DuetLanguage;
  watchLanguageStateHandler(newValue: DuetLanguage, oldValue: DuetLanguage): void;
  /**
   * Defaults for accessibleLabelExternal
   * @default {fi: "Avautuu uuteen ikkunaan",sv: "Öppnas i nytt fönster",en: "Opens in a new window"}
   */
  accessibleLabelExternalDefaults: DuetLangObject | string;
  /**
   * Adds accessible label for tooltip that is shown in external link (url & external have both been set)
   * @default {fi: "Avautuu uuteen ikkunaan",sv: "Öppnas i nytt fönster",en: "Opens in a new window"}
   */
  accessibleLabelExternal: string;
  /**
   * Adds a unique identifier for the link. Please note that with this particular
   * component this id is added inside Shadow DOM. If you need an id on the html
   * element, use regular id attribute instead.
   */
  identifier: string;
  /**
   * Theme of the button.
   */
  theme: DuetTheme;
  /**
   * A destination to link to, rendered in the href attribute of a link.
   */
  url: string;
  /**
   * Forces URL to open in a new browser tab. Used together with URL prop.
   */
  external: boolean;
  /**
   * Initially visually hidden link, which is shown on focus.
   */
  tabToLink: boolean;
  /**
   * Icon to display on the left side of the ink text. (only with variations other than "default")
   */
  icon: DuetIconName;
  /**
   * Controls the padding of the component (only with variations other than "default")
   */
  padding: DuetPadding;
  /**
   * Component lifecycle events.
   */
  componentWillLoad(): void;
  connectedCallback(): void;
  disconnectedCallback(): void;
  /**
   * Sets focus on the specified `duet-link`. Use this method instead of the global
   * `link.focus()`.
   */
  setFocus(options?: FocusOptions): Promise<void>;
  private renderContent;
  private renderGrid;
  /**
   * render() function
   * Always the last one in the class.
   */
  render(): any;
}
