/**
 * Creates an array representing an inclusive numeric range.
 * `from` must be less than `to`
 * @param from
 * @param to
 */
export declare function range(from: number, to: number): number[];
/**
 * Splits an array into smaller arrays of given chunk size
 * @param array
 * @param chunkSize
 */
export declare function chunk<T>(array: T[], chunkSize: number): T[][];
/**
 * Creates a keyboard event handler for handling keyboard shortcuts.
 * It currently only handles shift key as a modifier.
 * @param shortcuts a hash where keys are keyboard shortcuts, and values are handlers for those shortcuts
 * @example
 * element.addEventListener("keydown", createShortcuts({
 *  "PageDown": () => this.addMonths(1)
 *  "Shift+PageDown": () => this.addYears(1)
 * }))
 */
export declare function createShortcuts(shortcuts: Record<string, (event: KeyboardEvent) => void>): (event: KeyboardEvent) => void;
