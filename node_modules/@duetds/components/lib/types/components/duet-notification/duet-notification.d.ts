import { DuetLanguage, DuetTheme } from "../../common-types";
import { ThemeableComponent } from "../../common/themeable-component";
import { DuetLangObject } from "../../utils/language-utils";
export declare class DuetNotification implements ThemeableComponent {
  private linkElement;
  /**
   * Reference to host HTML element.
   */
  element: HTMLElement;
  /**
   * The currently active language.
   * Used for announcing unread notifications to screen readers.
   * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing
   * @default "fi"
   */
  language: DuetLanguage;
  watchLanguageStateHandler(newValue: DuetLanguage, oldValue: DuetLanguage): void;
  /**
   * Property to change accessibleLabelUnread defaults on the component.
   * normally you would handle these strings on an application level and override @accessibleLabelUnread when needed
   */
  accessibleLabelUnreadDefaults: DuetLangObject;
  /**
   * Adds accessible label for tooltip that is shown over unread counter
   * @default { en: "Unread", fi: "Lukematon", sv: "Ol√§st" }
   */
  accessibleLabelUnread: string;
  /**
   * The url to open on notification click.
   */
  url: string;
  /**
   * The date of the notification.
   */
  date: string;
  /**
   * Should the notification be visually highlighted?
   */
  highlight: boolean;
  /**
   * Should the link open in a new window?
   */
  external: boolean;
  /**
   * Theme of the notification.
   */
  theme: DuetTheme;
  /**
   * Component lifecycle events.
   */
  componentWillLoad(): void;
  connectedCallback(): void;
  disconnectedCallback(): void;
  /**
   * Move focus to the notification's link element.
   * Use this method instead of the native `focus()` method.
   * @param options
   */
  setFocus(options?: FocusOptions): Promise<void>;
  render(): any;
}
