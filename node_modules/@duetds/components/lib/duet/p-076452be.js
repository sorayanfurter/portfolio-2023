/*!
 * Built with Duet Design System
 */
import{c as e}from"./p-5a9d75e1.js";const n={fi:"fi-FI",en:"en-GB",us:"en-US",sv:"sv-SE"},t={fi:"€",en:"£",us:"$",sv:"€"},o=["fi","en","sv"],r=()=>document.documentElement.lang?document.documentElement.lang.toLowerCase():"fi",s=(e=r())=>o.includes(e)?e:"fi",a=(e=r())=>s(e),c=e=>{const o={locale:n[e],money:t[e]};if(o.locale&&o.money)return o;throw new Error(`Locale for "${e}" not found`)},i=n=>{if("string"==typeof n)try{return JSON.parse(e(n))}catch(t){console.log("sanitizeString received a string, that didnt parse to json object",n,t)}return n},u=(e,n)=>{const t=i(e);return n?t[s(n)]:t[a()]},f=new Set;new MutationObserver((()=>{document.documentElement.dataset.duetLangObserve&&f.forEach((e=>{e.language?e.language=a():console.log("Language change observer: component does not have a language property",e)}))})).observe(document.documentElement,{attributeFilter:["lang"]});const d=e=>{f.add(e)},g=e=>{f.delete(e)};export{u as a,c as b,d as c,g as d,a as g,i as s}