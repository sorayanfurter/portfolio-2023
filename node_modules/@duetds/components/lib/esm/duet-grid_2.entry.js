/*!
 * Built with Duet Design System
 */
import { r as registerInstance, h, g as getElement, H as Host } from './index-b45ea754.js';
import { a as media_query_large, m as media_query_medium, b as media_query_small } from './tokens-f6b32339.js';
import { w as watchForOptions, a as watchForElement } from './watch-options-dd55bce8.js';
import { i as inheritGlobalTheme } from './themeable-component-cb76be7c.js';

const duetGridCss = ".sc-duet-grid-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:flex !important;flex-direction:column !important;align-items:flex-start !important;justify-content:flex-start !important;width:100%;max-width:100%;height:auto}.duet-grid-breakpoint-x-small.sc-duet-grid-h{flex-direction:row !important}.duet-grid-breakpoint-x-small.duet-grid-row-reverse.sc-duet-grid-h{flex-direction:row-reverse !important}@media (max-width: 22.5em){.duet-grid-breakpoint-x-small.sc-duet-grid-h{flex-direction:column !important}}@media (min-width: 36em){.duet-grid-breakpoint-small.sc-duet-grid-h{flex-direction:row !important}.duet-grid-breakpoint-small.duet-grid-row-reverse.sc-duet-grid-h{flex-direction:row-reverse !important}}@media (min-width: 48em){.duet-grid-breakpoint-medium.sc-duet-grid-h{flex-direction:row !important}.duet-grid-breakpoint-medium.duet-grid-row-reverse.sc-duet-grid-h{flex-direction:row-reverse !important}}@media (min-width: 62em){.duet-grid-breakpoint-large.sc-duet-grid-h{flex-direction:row !important}.duet-grid-breakpoint-large.duet-grid-row-reverse.sc-duet-grid-h{flex-direction:row-reverse !important}}@media (min-width: 64.0625em){.duet-grid-breakpoint-x-large.sc-duet-grid-h{flex-direction:row !important}.duet-grid-breakpoint-x-large.duet-grid-row-reverse.sc-duet-grid-h{flex-direction:row-reverse !important}}.duet-grid-wrap.sc-duet-grid-h{flex-wrap:wrap !important}.duet-no-stacking.sc-duet-grid-h{flex-direction:row !important}.duet-no-stacking.duet-grid-row-reverse.sc-duet-grid-h{flex-direction:row-reverse !important}.duet-grid-direction-vertical.duet-grid-breakpoint-x-small.sc-duet-grid-h{flex-direction:column !important}@media (max-width: 35.9375em){.duet-grid-direction-vertical.duet-grid-breakpoint-x-small.sc-duet-grid-h{flex-direction:column !important}}.duet-grid-direction-vertical.duet-grid-breakpoint-small.sc-duet-grid-h{flex-direction:column !important}@media (min-width: 36em){.duet-grid-direction-vertical.duet-grid-breakpoint-small.sc-duet-grid-h{flex-direction:column !important}}.duet-grid-direction-vertical.duet-grid-breakpoint-medium.sc-duet-grid-h{flex-direction:column !important}@media (min-width: 48em){.duet-grid-direction-vertical.duet-grid-breakpoint-medium.sc-duet-grid-h{flex-direction:column !important}}.duet-grid-direction-vertical.duet-grid-breakpoint-large.sc-duet-grid-h{flex-direction:column !important}@media (min-width: 62em){.duet-grid-direction-vertical.duet-grid-breakpoint-large.sc-duet-grid-h{flex-direction:column !important}}.duet-grid-direction-vertical.duet-grid-breakpoint-x-large.sc-duet-grid-h{flex-direction:column !important}@media (min-width: 64.0625em){.duet-grid-direction-vertical.duet-grid-breakpoint-x-large.sc-duet-grid-h{flex-direction:column !important}}.duet-grid-align-top.duet-no-stacking.sc-duet-grid-h{align-items:flex-start !important}.duet-grid-align-bottom.duet-no-stacking.sc-duet-grid-h{align-items:flex-end !important}.duet-grid-align-center.duet-no-stacking.sc-duet-grid-h{align-items:center !important}.duet-grid-align-stretch.duet-no-stacking.sc-duet-grid-h{align-items:stretch !important}.duet-grid-align-baseline.duet-no-stacking.sc-duet-grid-h{align-items:baseline !important}.duet-grid-align-top.duet-grid-breakpoint-x-small.sc-duet-grid-h{align-items:flex-start !important}.duet-grid-align-bottom.duet-grid-breakpoint-x-small.sc-duet-grid-h{align-items:flex-end !important}.duet-grid-align-center.duet-grid-breakpoint-x-small.sc-duet-grid-h{align-items:center !important}.duet-grid-align-stretch.duet-grid-breakpoint-x-small.sc-duet-grid-h{align-items:stretch !important}.duet-grid-align-baseline.duet-grid-breakpoint-x-small.sc-duet-grid-h{align-items:baseline !important}@media (min-width: 36em){.duet-grid-align-top.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:flex-start !important}}@media (min-width: 36em){.duet-grid-align-bottom.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:flex-end !important}}@media (min-width: 36em){.duet-grid-align-center.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:center !important}}@media (min-width: 36em){.duet-grid-align-stretch.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:stretch !important}}@media (min-width: 36em){.duet-grid-align-baseline.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:baseline !important}}@media (min-width: 48em){.duet-grid-align-top.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:flex-start !important}}@media (min-width: 48em){.duet-grid-align-bottom.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:flex-end !important}}@media (min-width: 48em){.duet-grid-align-center.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:center !important}}@media (min-width: 48em){.duet-grid-align-stretch.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:stretch !important}}@media (min-width: 48em){.duet-grid-align-baseline.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:baseline !important}}@media (min-width: 62em){.duet-grid-align-top.duet-grid-breakpoint-large.sc-duet-grid-h{align-items:flex-start !important}}@media (min-width: 62em){.duet-grid-align-bottom.duet-grid-breakpoint-large.sc-duet-grid-h{align-items:flex-end !important}}@media (min-width: 62em){.duet-grid-align-center.duet-grid-breakpoint-large.sc-duet-grid-h{align-items:center !important}}@media (min-width: 62em){.duet-grid-align-stretch.duet-grid-breakpoint-large.sc-duet-grid-h{align-items:stretch !important}}@media (min-width: 62em){.duet-grid-align-baseline.duet-grid-breakpoint-large.sc-duet-grid-h{align-items:baseline !important}}@media (min-width: 64.0625em){.duet-grid-align-top.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:flex-start !important}}@media (min-width: 64.0625em){.duet-grid-align-bottom.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:flex-end !important}}@media (min-width: 64.0625em){.duet-grid-align-center.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:center !important}}@media (min-width: 64.0625em){.duet-grid-align-stretch.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:stretch !important}}@media (min-width: 64.0625em){.duet-grid-align-baseline.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:baseline !important}}.duet-grid-distribution-left.sc-duet-grid-h{justify-content:flex-start !important}.duet-grid-distribution-right.sc-duet-grid-h{justify-content:flex-end !important}.duet-grid-distribution-center.sc-duet-grid-h{justify-content:center !important}.duet-grid-distribution-between.sc-duet-grid-h{justify-content:space-between !important}.duet-grid-distribution-around.sc-duet-grid-h{justify-content:space-around !important}.duet-grid-distribution-evenly.sc-duet-grid-h{justify-content:space-evenly !important}@media (max-width: 35.9375em){.duet-grid-mobile-left.sc-duet-grid-h{align-items:flex-start !important;justify-content:flex-start !important;text-align:left !important}}@media (max-width: 35.9375em){.duet-grid-mobile-center.sc-duet-grid-h{align-items:center !important;justify-content:center !important;text-align:center !important}.duet-grid-mobile-center.sc-duet-grid-h *.sc-duet-grid{text-align:center !important}}@media (max-width: 35.9375em){.duet-grid-mobile-right.sc-duet-grid-h{align-items:flex-end !important;justify-content:flex-end !important;text-align:right !important}.duet-grid-mobile-right.sc-duet-grid-h *.sc-duet-grid{text-align:right !important}}";

function isGridItem(element) {
  return element.tagName.toLowerCase() === "duet-grid-item";
}
const DuetGrid = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.mql = [
      window.matchMedia(media_query_large.replace(/'/g, "")),
      window.matchMedia(media_query_medium.replace(/'/g, "")),
      window.matchMedia(media_query_small.replace(/'/g, "")),
    ];
    this.distributeFormElement = false;
    this.responsive = false;
    this.breakpoint = "small";
    this.direction = "horizontal";
    this.rowReverse = false;
    this.alignment = "top";
    this.distribution = "default";
    this.mobile = "";
  }
  /**
   * Private functions
   */
  /**
   * Returns the element height including margins
   * @param element - element
   * @returns {number}
   */
  outerHeight(element) {
    const height = element.offsetHeight, style = window.getComputedStyle(element);
    return ["top", "bottom"]
      .map(side => parseInt(style[`margin-${side}`]))
      .reduce((total, side) => total + side, height);
  }
  /**
   * Component lifecycle events.
   */
  async connectedCallback() {
    const el = this.element;
    this.distributeFormElement = this.alignment === "form_distribute";
    this.mutationO = watchForOptions(el, "duet-grid-item", () => {
      this.updateGridItems();
    });
    // the next two functions are used to watch for changes in the grid items, and are process intensive - so only run when needed
    if (this.distributeFormElement) {
      this.mutation1 = watchForElement(el, "duet-input", () => {
        this.updateGridItemsWithInputFields();
      });
      // listen for potential mediaquery changes and reset layout
      for (let i = 0; i < this.mql.length; i++) {
        // addEventListener is not available in Stencil hydrate
        if (this.mql[i].addEventListener) {
          this.mql[i].addEventListener("change", this.updateGridItemsWithInputFields.bind(this));
        }
      }
    }
    this.updateGridItems();
  }
  disconnectedCallback() {
    if (this.mutationO) {
      this.mutationO.disconnect();
      this.mutationO = undefined;
    }
    if (this.mutation1) {
      this.mutation1.disconnect();
      this.mutation1 = undefined;
    }
    // listen for potential mediaquery changes and reset layout
    for (let i = 0; i < this.mql.length; i++) {
      // addEventListener is not available in Stencil hydrate
      if (this.mql[i].removeEventListener) {
        this.mql[i].removeEventListener("change", this.updateGridItemsWithInputFields.bind(this));
      }
    }
  }
  /**
   * Local methods
   */
  async updateGridItems() {
    const items = Array.from(this.element.children).filter(isGridItem);
    items.forEach(item => {
      item.responsive = this.responsive;
      item.breakpoint = this.breakpoint;
      item.direction = this.direction;
    });
  }
  async updateGridItemsWithInputFields() {
    const items = Array.from(this.element.children).filter(isGridItem);
    // if layout changes to columns instead of row, remove all padding
    const hasColumnLayout = window ? window.getComputedStyle(this.element).flexDirection === "column" : false;
    let maxHeight = 0;
    const sizes = [];
    items.forEach(item => {
      const inputErrorDom = item.querySelector("span.duet-input-error");
      const height = inputErrorDom ? this.outerHeight(inputErrorDom) : 0;
      sizes.push(height);
    });
    maxHeight = Math.max(...sizes);
    items.forEach(item => {
      const inputErrorDom = item.querySelector("span.duet-input-error");
      const height = inputErrorDom ? this.outerHeight(inputErrorDom) : 0;
      if (height < maxHeight && !hasColumnLayout) {
        item.setAttribute("style", `padding-bottom: ${maxHeight - height}px;`);
      }
      else if (height === maxHeight || hasColumnLayout) {
        item.setAttribute("style", `padding-bottom: 0px;`);
      }
    });
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, { class: {
        "duet-grid": true,
        "duet-no-stacking": !this.responsive,
        "duet-grid-align-top": this.alignment === "top",
        "duet-grid-align-bottom": this.alignment === "bottom" || this.alignment === "form_distribute",
        "duet-grid-align-center": this.alignment === "center",
        "duet-grid-align-stretch": this.alignment === "stretch",
        "duet-grid-align-baseline": this.alignment === "baseline",
        "duet-grid-distribution-left": this.distribution === "left",
        "duet-grid-distribution-right": this.distribution === "right",
        "duet-grid-distribution-center": this.distribution === "center",
        "duet-grid-distribution-between": this.distribution === "space-between",
        "duet-grid-distribution-around": this.distribution === "space-around",
        "duet-grid-distribution-evenly": this.distribution === "space-evenly",
        "duet-grid-mobile-left": this.mobile === "left",
        "duet-grid-mobile-center": this.mobile === "center",
        "duet-grid-mobile-right": this.mobile === "right",
        "duet-grid-direction-horizontal": this.direction === "horizontal",
        "duet-grid-direction-vertical": this.direction === "vertical",
        "duet-grid-breakpoint-x-small": this.breakpoint === "x-small",
        "duet-grid-breakpoint-small": this.breakpoint === "small",
        "duet-grid-breakpoint-medium": this.breakpoint === "medium",
        "duet-grid-breakpoint-large": this.breakpoint === "large",
        "duet-grid-breakpoint-x-large": this.breakpoint === "x-large",
        "duet-grid-row-reverse": this.rowReverse,
      } }));
  }
  get element() { return getElement(this); }
  static get watchers() { return {
    "responsive": ["updateGridItems"],
    "breakpoint": ["updateGridItems"],
    "direction": ["updateGridItems"]
  }; }
};
DuetGrid.style = duetGridCss;

const duetGridItemCss = ".sc-duet-grid-item-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-bottom:16px !important;min-width:0;max-width:100%;flex:0 0 auto;padding-right:8px;padding-left:8px;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-style:normal;font-weight:400;line-height:1.5;color:rgb(0, 41, 77)}.duet-grid-direction-horizontal.sc-duet-grid-item-h:first-child,.duet-grid-direction-horizontal.sc-duet-grid-item-h:first-of-type{padding-left:0}.duet-grid-direction-horizontal.sc-duet-grid-item-h:last-child,.duet-grid-direction-horizontal.sc-duet-grid-item-h:last-of-type{padding-right:0}@media (max-width: 35.9375em){.duet-grid-item-responsive.sc-duet-grid-item-h{width:100% !important;min-width:0 !important;max-width:100% !important;padding-right:0;padding-left:0}}@media screen and (max-width: 47.9375em){.duet-grid-item-br-medium.sc-duet-grid-item-h{width:100% !important;min-width:0 !important;max-width:100% !important}}@media screen and (max-width: 47.9375em){.duet-grid-item-responsive.duet-grid-item-br-medium.sc-duet-grid-item-h{padding-right:0;padding-left:0}}@media screen and (max-width: 64em){.duet-grid-item-br-x-large.sc-duet-grid-item-h{width:100% !important;min-width:0 !important;max-width:100% !important}}@media screen and (max-width: 64em){.duet-grid-item-responsive.duet-grid-item-br-x-large.sc-duet-grid-item-h{padding-right:0;padding-left:0}}.duet-grid-item-fill.sc-duet-grid-item-h{flex:1 1 auto;width:100%}.duet-theme-turva.sc-duet-grid-item-h{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}.duet-m-0.sc-duet-grid-item-h{padding:0 !important;margin:0 !important}";

const DuetGridItem = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.fill = false;
    this.maxWidth = undefined;
    this.minWidth = undefined;
    this.theme = "";
    this.margin = "auto";
    this.responsive = false;
    this.direction = "horizontal";
    this.breakpoint = "small";
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return (h(Host, { style: {
        "min-width": this.minWidth,
        "max-width": this.maxWidth,
      }, class: {
        "duet-m-0": this.margin === "none",
        "duet-theme-turva": this.theme === "turva",
        "duet-grid-item": true,
        "duet-grid-item-fill": this.fill,
        "duet-grid-item-responsive": this.responsive,
        "duet-grid-direction-horizontal": this.direction === "horizontal",
        "duet-grid-direction-vertical": this.direction === "vertical",
        "duet-grid-item-br-x-small": this.breakpoint === "x-small",
        "duet-grid-item-br-small": this.breakpoint === "small",
        "duet-grid-item-br-medium": this.breakpoint === "medium",
        "duet-grid-item-br-large": this.breakpoint === "large",
        "duet-grid-item-br-x-large": this.breakpoint === "x-large",
      } }));
  }
};
DuetGridItem.style = duetGridItemCss;

export { DuetGrid as duet_grid, DuetGridItem as duet_grid_item };
