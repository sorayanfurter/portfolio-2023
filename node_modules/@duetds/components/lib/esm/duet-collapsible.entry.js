/*!
 * Built with Duet Design System
 */
import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-b45ea754.js';
import { a as actionArrowDownSmall } from './action-arrow-down-small-82273dc8.js';
import { f as font_size_medium, t as tokens } from './tokens-f6b32339.js';
import { i as inheritGlobalTheme } from './themeable-component-cb76be7c.js';
import { c as createID } from './create-id-981107da.js';
import { i as isKeyboardClick } from './keyboard-utils-d237bd5a.js';
import { s as sanitizeString } from './string-utils-5954f458.js';

const duetCollapsibleCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-bottom:16px !important;display:block;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:600;line-height:1.5;color:rgb(0, 41, 77)}:host(.duet-theme-turva){font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}:host(.duet-m-0){margin:0 !important}.duet-collapsible-content{display:none;padding-left:18px;margin-top:8px;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:400;font-variant-numeric:tabular-nums;-webkit-hyphens:auto;hyphens:auto;line-height:1.5;color:rgb(0, 41, 77)}@media (max-width: 35.9375em){.duet-collapsible-content{font-size:0.875rem}}.duet-collapsible-content.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}:host([open])>.duet-collapsible-content{display:block}.duet-collapsible-heading{-webkit-user-select:none;user-select:none;display:flex;align-items:center;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:600;line-height:1.5;color:rgb(0, 41, 77);text-align:left;cursor:pointer;border-radius:4px}.duet-collapsible-heading.duet-collapsible-heading-centered{margin:auto}.duet-collapsible-heading.duet-collapsible-normal-weight{font-weight:400}.duet-collapsible-heading.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}.duet-collapsible-heading .duet-collapsible-heading-content{flex:0 auto;min-width:0}.duet-collapsible-heading.has-after-heading .duet-collapsible-heading-content+div{flex:1 0 auto;margin-left:16px}.duet-collapsible-heading:focus{outline:0}:host(.user-is-tabbing) .duet-collapsible-heading:focus{border-radius:4px;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px rgb(0, 119, 179)}:host(.user-is-tabbing) .duet-collapsible-heading.duet-theme-turva:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px rgb(23, 28, 58)}.duet-collapsible-heading-icon{margin-right:8px !important;display:flex;align-items:center;justify-content:center;color:rgb(0, 41, 77);transition:transform 300ms ease}.duet-collapsible-heading-icon:last-child,.duet-collapsible-heading-icon:last-of-type{margin-right:0 !important}[aria-expanded=true] .duet-collapsible-heading-icon{transform:rotate(180deg)}";

const DuetCollapsible = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.duetToggle = createEvent(this, "duetToggle", 7);
    this.id = createID("DuetCollapsible");
    this.handleKeyDown = (e) => {
      if (isKeyboardClick(e)) {
        this.handleClick(e);
      }
    };
    this.getFontSizeFromTokens = (fontSize = this.headingSize) => {
      if (!fontSize) {
        return font_size_medium;
      }
      else {
        const searchRegExp = /-/g;
        const fontSizeReplaced = fontSize.replace(searchRegExp, "_");
        return tokens[`font_size_${fontSizeReplaced}`];
      }
    };
    this.getEquivalentIconSize = (fontSize = this.headingSize) => {
      switch (fontSize) {
        case "x-small":
          return "xx-small";
        case "small":
          return "xx-small";
        case "medium":
          return "xx-small";
        case "large":
          return "x-small";
        case "x-large":
          return "small";
        case "xx-large":
          return "medium";
        case "xxx-large":
          return "x-large";
        case "xxxx-large":
          return "xxx-large";
        default:
          // default size
          return "xx-small";
      }
    };
    this.handleClick = (e) => {
      e.preventDefault();
      this.open = !this.open;
      this.duetToggle.emit({
        component: "duet-collapsible",
        originalEvent: e,
      });
    };
    this.theme = "";
    this.accessibleLabel = undefined;
    this.heading = "";
    this.centerHeading = false;
    this.headingWeight = "semibold";
    this.headingSize = undefined;
    this.headingLevel = undefined;
    this.margin = "auto";
    this.open = false;
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    inheritGlobalTheme(this);
    this.hasAfterHeading = !!this.element.querySelector(":scope > [slot='after-heading']");
  }
  /**
   * Sets focus on the specified `duet-collapsible`. Use this method instead of the global
   * `collapsible.focus()`.
   */
  async setFocus(options) {
    if (this.nativeButton) {
      this.element.classList.add("user-is-tabbing");
      this.nativeButton.focus(options);
    }
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    const HeadingTagName = this.headingLevel ? sanitizeString(this.headingLevel) : "div";
    return (h(Host, { class: { "duet-m-0": this.margin === "none" } }, h(HeadingTagName, null, h("button", { class: {
        "duet-collapsible-heading": true,
        "duet-collapsible-heading-centered": this.centerHeading,
        "duet-theme-turva": this.theme === "turva",
        "duet-collapsible-normal-weight": this.headingWeight === "normal",
        "has-after-heading": this.hasAfterHeading,
      }, style: { "font-size": this.getFontSizeFromTokens() }, role: "button", ref: button => (this.nativeButton = button), "aria-label": this.accessibleLabel, "aria-expanded": this.open ? "true" : "false", "aria-controls": this.id, onClick: this.handleClick, onKeyDown: this.handleKeyDown }, h("div", { class: "duet-collapsible-heading-icon" }, h("duet-icon", { margin: "none", color: this.theme === "turva" ? "secondary-turva" : "secondary", size: this.getEquivalentIconSize(), icon: actionArrowDownSmall.svg })), h("div", { class: "duet-collapsible-heading-content", part: "duet-collapsible-heading-content" }, this.heading), this.hasAfterHeading && (h("div", null, h("slot", { name: "after-heading" }))))), h("div", { id: this.id, class: { "duet-collapsible-content": true, "duet-theme-turva": this.theme === "turva" }, part: "duet-collapsible-content" }, h("slot", null))));
  }
  get element() { return getElement(this); }
};
DuetCollapsible.style = duetCollapsibleCss;

export { DuetCollapsible as duet_collapsible };
